--- a/src/main/java/com/fasterxml/jackson/core/JsonParser.java
+++ b/src/main/java/com/fasterxml/jackson/core/JsonParser.java
@@ -1704,7 +1704,46 @@
      * @throws IOException for low-level read issues, or
      *   {@link JsonParseException} for decoding problems
      */
+    /**
+     * Enumeration for possible types of floating-point numbers, used by
+     * {@link #getNumberTypeFP()}.
+     */
+    public enum NumberTypeFP {
+        /**
+         * Type used when floating-point number type is not known (typically for textual formats)
+         */
+        UNKNOWN,
+        /**
+         * 32-bit binary floating point (Java {@code float})
+         */
+        FLOAT,
+        /**
+         * 64-bit binary floating point (Java {@code double})
+         */
+        DOUBLE,
+        /**
+         * Arbitrary-precision decimal floating point (Java {@code BigDecimal})
+         */
+        BIG_DECIMAL
+    }
+
     public abstract NumberType getNumberType() throws IOException;
+
+    /**
+     * Method that can be used to get more precise information about underlying
+     * storage format of floating-point numbers, as opposed to {@link #getNumberType()}
+     * which is more loose in its typing (especially for textual formats).
+     *<p>
+     * Default implementation returns {@link NumberTypeFP#UNKNOWN} since most textual
+     * formats do not distinguish between different floating-point types.
+     * Binary formats should override to provide actual type information when possible.
+     *
+     * @return Type of floating-point number, if known; {@code UNKNOWN} if not
+     *   (or if not a floating-point number)
+     */
+    public NumberTypeFP getNumberTypeFP() throws IOException {
+        return NumberTypeFP.UNKNOWN;
+    }
 
     /**
      * Numeric accessor that can be called when the current
