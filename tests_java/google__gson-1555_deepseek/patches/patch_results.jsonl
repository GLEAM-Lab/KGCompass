{"org": "google", "repo": "gson", "number": "1555", "fix_patch": "--- a/gson/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java\n@@ -49,7 +49,7 @@\n   /** The delegate is lazily created because it may not be needed, and creating it may fail. */\n   private TypeAdapter<T> delegate;\n \n-  public TreeTypeAdapter(JsonSerializer<T> serializer, JsonDeserializer<T> deserializer,\n+  public TreeTypeAdapter(JsonSerializer<T> serializer, JsonDeserializer<T> deserializer, boolean nullSafe,\n       Gson gson, TypeToken<T> typeToken, TypeAdapterFactory skipPast) {\n     this.serializer = serializer;\n     this.deserializer = deserializer;\n@@ -64,6 +64,9 @@\n     }\n     JsonElement value = Streams.parse(in);\n     if (value.isJsonNull()) {\n+      if (!nullSafe) {\n+        throw new JsonSyntaxException(\"null value not allowed\");\n+      }\n       return null;\n     }\n     return deserializer.deserialize(value, typeToken.getType(), context);\n@@ -75,7 +78,11 @@\n       return;\n     }\n     if (value == null) {\n-      out.nullValue();\n+      if (nullSafe) {\n+        out.nullValue();\n+      } else {\n+        throw new JsonSyntaxException(\"null value not allowed\");\n+      }\n       return;\n     }\n     JsonElement tree = serializer.serialize(value, typeToken.getType(), context);\n@@ -145,7 +152,7 @@\n           : hierarchyType.isAssignableFrom(type.getRawType());\n       return matches\n           ? new TreeTypeAdapter<T>((JsonSerializer<T>) serializer,\n-              (JsonDeserializer<T>) deserializer, gson, type, this)\n+              (JsonDeserializer<T>) deserializer, false, gson, type, this)\n           : null;\n     }\n   }\n"}
