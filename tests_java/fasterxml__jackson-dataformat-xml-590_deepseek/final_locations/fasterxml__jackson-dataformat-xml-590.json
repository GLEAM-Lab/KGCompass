{
  "related_entities": {
    "methods": [
      {
        "start_line": 280,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public XmlMapper setDefaultUseWrapper(boolean state) {\n        // ser and deser configs should usually have the same introspector, so:\n        AnnotationIntrospector ai0 = getDeserializationConfig().getAnnotationIntrospector();\n        for (AnnotationIntrospector ai : ai0.allIntrospectors()) {\n            if (ai instanceof JacksonXmlAnnotationIntrospector) {\n                ((JacksonXmlAnnotationIntrospector) ai).setDefaultUseWrapper(state);\n            }\n        }\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setDefaultUseWrapper",
        "documentation": "/**\n     * Since 2.7\n     * \n     * @deprecated Since 2.10 use {@link Builder#defaultUseWrapper(boolean)} instead\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setDefaultUseWrapper"
          }
        ],
        "similarity": 0.10755246861834798,
        "end_line": 289,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper.setDefaultUseWrapper(boolean state): XmlMapper"
      },
      {
        "start_line": 388,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public void writeValue(XMLStreamWriter w0, Object value) throws IOException {\n        @SuppressWarnings(\"resource\")\n        ToXmlGenerator g = getFactory().createGenerator(w0);\n        super.writeValue(g, value);\n        // NOTE: above call should do flush(); and we should NOT close here.\n        // Finally, 'g' has no buffers to release.\n    }",
        "distance": 1.25,
        "title": null,
        "name": "writeValue",
        "documentation": "/**\n     * Method for serializing given value using specific {@link XMLStreamReader}:\n     * useful when building large XML files by binding individual items, one at\n     * a time.\n     * \n     * @since 2.4\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "writeValue"
          }
        ],
        "similarity": 0.08712741447160208,
        "end_line": 394,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper.writeValue(XMLStreamWriter w0, Object value): void"
      },
      {
        "start_line": 319,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper enable(ToXmlGenerator.Feature f) {\n        ((XmlFactory)_jsonFactory).enable(f);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "enable",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          },
          {
            "start_node": "disable",
            "description": "called by method",
            "type": "RELATED",
            "end_node": "configure"
          },
          {
            "start_node": "configure",
            "description": "contained in method",
            "type": "RELATED",
            "end_node": "XmlFactoryBuilder"
          },
          {
            "start_node": "XmlFactoryBuilder",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "enable"
          }
        ],
        "similarity": 0.08364885537904301,
        "end_line": 322,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper.enable(ToXmlGenerator f): ObjectMapper"
      },
      {
        "start_line": 309,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper configure(ToXmlGenerator.Feature f, boolean state) {\n        ((XmlFactory)_jsonFactory).configure(f, state);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "configure",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          },
          {
            "start_node": "disable",
            "description": "called by method",
            "type": "RELATED",
            "end_node": "configure"
          }
        ],
        "similarity": 0.08147367520578297,
        "end_line": 312,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper.configure(ToXmlGenerator f, boolean state): ObjectMapper"
      },
      {
        "start_line": 324,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper enable(FromXmlParser.Feature f) {\n        ((XmlFactory)_jsonFactory).enable(f);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "enable",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          },
          {
            "start_node": "disable",
            "description": "called by method",
            "type": "RELATED",
            "end_node": "configure"
          },
          {
            "start_node": "configure",
            "description": "contained in method",
            "type": "RELATED",
            "end_node": "XmlFactoryBuilder"
          },
          {
            "start_node": "XmlFactoryBuilder",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "enable"
          }
        ],
        "similarity": 0.07830802378688495,
        "end_line": 327,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper.enable(FromXmlParser f): ObjectMapper"
      },
      {
        "start_line": 329,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper disable(ToXmlGenerator.Feature f) {\n        ((XmlFactory)_jsonFactory).disable(f);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "disable",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          }
        ],
        "similarity": 0.07829794834162399,
        "end_line": 332,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper.disable(ToXmlGenerator f): ObjectMapper"
      },
      {
        "start_line": 294,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public void setXmlNameProcessor(XmlNameProcessor processor) {\n        ((XmlFactory)_jsonFactory).setXmlNameProcessor(processor);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setXmlNameProcessor",
        "documentation": "/**\n     * @since 2.14\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setXmlNameProcessor"
          }
        ],
        "similarity": 0.07701850519541345,
        "end_line": 296,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper.setXmlNameProcessor(XmlNameProcessor processor): void"
      },
      {
        "start_line": 156,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public XmlMapper(JacksonXmlModule module) {\n        this(new XmlFactory(), module);\n    }",
        "distance": 1.0,
        "title": null,
        "name": "XmlMapper",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          }
        ],
        "similarity": 0.07634476812775876,
        "end_line": 158,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper(JacksonXmlModule module)"
      },
      {
        "start_line": 203,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected XmlMapper(XmlMapper src) {\n        super(src);\n        _xmlModule = src._xmlModule;\n    }",
        "distance": 1.0,
        "title": null,
        "name": "XmlMapper",
        "documentation": "/**\n     * @since 2.8.9\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          }
        ],
        "similarity": 0.07605898344036414,
        "end_line": 206,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper(XmlMapper src)"
      },
      {
        "start_line": 314,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper configure(FromXmlParser.Feature f, boolean state) {\n        ((XmlFactory)_jsonFactory).configure(f, state);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "configure",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          },
          {
            "start_node": "disable",
            "description": "called by method",
            "type": "RELATED",
            "end_node": "configure"
          }
        ],
        "similarity": 0.07597664179137395,
        "end_line": 317,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper.configure(FromXmlParser f, boolean state): ObjectMapper"
      },
      {
        "start_line": 141,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public XmlMapper(XMLInputFactory inputF, XMLOutputFactory outF) {\n        this(new XmlFactory(inputF, outF));\n    }",
        "distance": 1.0,
        "title": null,
        "name": "XmlMapper",
        "documentation": "/**\n     * @since 2.4\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          }
        ],
        "similarity": 0.0750745481661728,
        "end_line": 143,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper(XMLInputFactory inputF, XMLOutputFactory outF)"
      },
      {
        "start_line": 334,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper disable(FromXmlParser.Feature f) {\n        ((XmlFactory)_jsonFactory).disable(f);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "disable",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          }
        ],
        "similarity": 0.0749835609863875,
        "end_line": 337,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper.disable(FromXmlParser f): ObjectMapper"
      },
      {
        "start_line": 160,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public XmlMapper(XmlFactory xmlFactory, JacksonXmlModule module)",
        "distance": 1.0,
        "title": null,
        "name": "XmlMapper",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          }
        ],
        "similarity": 0.07350754887547273,
        "end_line": 160,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper(XmlFactory xmlFactory, JacksonXmlModule module)"
      },
      {
        "start_line": 152,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public XmlMapper(XmlFactory xmlFactory) {\n        this(xmlFactory, DEFAULT_XML_MODULE);\n    }",
        "distance": 1.0,
        "title": null,
        "name": "XmlMapper",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          }
        ],
        "similarity": 0.07147571542251628,
        "end_line": 154,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper(XmlFactory xmlFactory)"
      },
      {
        "start_line": 218,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public static XmlMapper.Builder xmlBuilder() {\n        return new XmlMapper.Builder(new XmlMapper());\n    }",
        "distance": 1.25,
        "title": null,
        "name": "xmlBuilder",
        "documentation": "/**\n     * @since 2.10\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "xmlBuilder"
          }
        ],
        "similarity": 0.07105750125620747,
        "end_line": 220,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper.xmlBuilder(): XmlMapper"
      },
      {
        "start_line": 270,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected void setXMLTextElementName(String name) {\n        ((XmlFactory) _jsonFactory).setXMLTextElementName(name);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setXMLTextElementName",
        "documentation": "/**\n     * Method called by {@link JacksonXmlModule} to pass configuration\n     * information to {@link XmlFactory}, during registration; NOT\n     * exposed as public method since configuration should be done\n     * via {@link JacksonXmlModule}.\n     * \n     * @since 2.1\n     *\n     * @deprecated Since 2.10 use {@link Builder#nameForTextElement(String)} instead\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setXMLTextElementName"
          }
        ],
        "similarity": 0.06986448946247097,
        "end_line": 272,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper.setXMLTextElementName(String name): void"
      },
      {
        "start_line": 134,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public XmlMapper() {\n        this(new XmlFactory());\n    }",
        "distance": 1.0,
        "title": null,
        "name": "XmlMapper",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          }
        ],
        "similarity": 0.06907028656728634,
        "end_line": 136,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper()"
      },
      {
        "start_line": 148,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public XmlMapper(XMLInputFactory inputF) {\n        this(new XmlFactory(inputF));\n    }",
        "distance": 1.0,
        "title": null,
        "name": "XmlMapper",
        "documentation": "/**\n     * @since 2.4\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          }
        ],
        "similarity": 0.06573296999236422,
        "end_line": 150,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper(XMLInputFactory inputF)"
      },
      {
        "start_line": 767,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public void writeRawValue(String text, int offset, int len) throws IOException {\n        // [dataformat-xml#39]\n        if (_stax2Emulation) {\n            _reportUnimplementedStax2(\"writeRawValue\");\n        }\n        try {\n            _verifyValueWrite(\"write raw value\");\n            if (_nextName == null) {\n                handleMissingName();\n            }\n\n            if (_nextIsAttribute) {\n                _xmlWriter.writeAttribute(_nextName.getNamespaceURI(), _nextName.getLocalPart(), text.substring(offset, offset + len));\n            } else if (checkNextIsUnwrapped()) {\n                _xmlWriter.writeRaw(text, offset, len);\n            } else {\n                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                _xmlWriter.writeRaw(text, offset, len);\n                _xmlWriter.writeEndElement();\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwAsGenerationException(e, this);\n        }\n    }",
        "distance": 2.75,
        "title": null,
        "name": "writeRawValue",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          },
          {
            "start_node": "disable",
            "description": "called by method",
            "type": "RELATED",
            "end_node": "configure"
          },
          {
            "start_node": "configure",
            "description": "contained in method",
            "type": "RELATED",
            "end_node": "ToXmlGenerator"
          },
          {
            "start_node": "ToXmlGenerator",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "writeRawValue"
          }
        ],
        "similarity": 0.06517081221874038,
        "end_line": 790,
        "signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRawValue(String text, int offset, int len): void"
      },
      {
        "start_line": 232,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public static XmlMapper.Builder builder(XmlFactory streamFactory) {\n        return new XmlMapper.Builder(new XmlMapper(streamFactory));\n    }",
        "distance": 1.25,
        "title": null,
        "name": "builder",
        "documentation": "/**\n     * @since 2.10\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "builder"
          }
        ],
        "similarity": 0.06443141996859583,
        "end_line": 234,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper.builder(XmlFactory streamFactory): XmlMapper"
      },
      {
        "start_line": 793,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public void writeRawValue(char[] text, int offset, int len) throws IOException {\n        // [dataformat-xml#39]\n        if (_stax2Emulation) {\n            _reportUnimplementedStax2(\"writeRawValue\");\n        }\n        _verifyValueWrite(\"write raw value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                _xmlWriter.writeAttribute(_nextName.getNamespaceURI(), _nextName.getLocalPart(), new String(text, offset, len));\n            } else if (checkNextIsUnwrapped()) {\n                _xmlWriter.writeRaw(text, offset, len);\n            } else {\n                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                _xmlWriter.writeRaw(text, offset, len);\n                _xmlWriter.writeEndElement();\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwAsGenerationException(e, this);\n        }\n    }",
        "distance": 2.75,
        "title": null,
        "name": "writeRawValue",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          },
          {
            "start_node": "disable",
            "description": "called by method",
            "type": "RELATED",
            "end_node": "configure"
          },
          {
            "start_node": "configure",
            "description": "contained in method",
            "type": "RELATED",
            "end_node": "ToXmlGenerator"
          },
          {
            "start_node": "ToXmlGenerator",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "writeRawValue"
          }
        ],
        "similarity": 0.064171044279649,
        "end_line": 815,
        "signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRawValue(char[] text, int offset, int len): void"
      },
      {
        "start_line": 225,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public static XmlMapper.Builder builder() {\n        return new XmlMapper.Builder(new XmlMapper());\n    }",
        "distance": 1.25,
        "title": null,
        "name": "builder",
        "documentation": "/**\n     * @since 2.10\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "builder"
          }
        ],
        "similarity": 0.06225072917050799,
        "end_line": 227,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper.builder(): XmlMapper"
      },
      {
        "start_line": 741,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public void writeRawValue(String text) throws IOException {\n        // [dataformat-xml#39]\n        if (_stax2Emulation) {\n            _reportUnimplementedStax2(\"writeRawValue\");\n        }\n        try {\n            _verifyValueWrite(\"write raw value\");\n            if (_nextName == null) {\n                handleMissingName();\n            }\n\n            if (_nextIsAttribute) {\n                _xmlWriter.writeAttribute(_nextName.getNamespaceURI(), _nextName.getLocalPart(), text);\n            } else if (checkNextIsUnwrapped()) {\n                _xmlWriter.writeRaw(text);\n            } else {\n                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                _xmlWriter.writeRaw(text);\n                _xmlWriter.writeEndElement();\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwAsGenerationException(e, this);\n        }\n    }",
        "distance": 2.75,
        "title": null,
        "name": "writeRawValue",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          },
          {
            "start_node": "disable",
            "description": "called by method",
            "type": "RELATED",
            "end_node": "configure"
          },
          {
            "start_node": "configure",
            "description": "contained in method",
            "type": "RELATED",
            "end_node": "ToXmlGenerator"
          },
          {
            "start_node": "ToXmlGenerator",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "writeRawValue"
          }
        ],
        "similarity": 0.06072963782891812,
        "end_line": 764,
        "signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRawValue(String text): void"
      },
      {
        "start_line": 50,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected XmlSerializerProvider(XmlSerializerProvider src) {\n        super(src);\n        // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n        //    root name lookup as that may link back to diff version, configuration\n        _rootNameLookup = new XmlRootNameLookup();\n    }",
        "distance": 2.0,
        "title": null,
        "name": "XmlSerializerProvider",
        "documentation": "/**\n     * @since 2.8.9\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "XmlSerializerProvider"
          }
        ],
        "similarity": 0.05931345605996763,
        "end_line": 55,
        "signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(XmlSerializerProvider src)"
      },
      {
        "start_line": 224,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected Object readResolve() {\n        if (_jdkXmlInFactory == null) {\n            throw new IllegalStateException(\"No XMLInputFactory class name read during JDK deserialization\");\n        }\n        if (_jdkXmlOutFactory == null) {\n            throw new IllegalStateException(\"No XMLOutputFactory class name read during JDK deserialization\");\n        }\n        final XMLInputFactory inf;\n        XMLOutputFactory outf;\n        try {\n            inf = (XMLInputFactory) Class.forName(_jdkXmlInFactory).getDeclaredConstructor().newInstance();\n            outf = (XMLOutputFactory) Class.forName(_jdkXmlOutFactory).getDeclaredConstructor().newInstance();\n        } catch (Exception e) {\n            throw new IllegalArgumentException(e);\n        }\n\treturn new XmlFactory(_objectCodec, _xmlParserFeatures, _xmlGeneratorFeatures,\n\t\t\t      inf, outf, _cfgNameForTextElement);\n    }",
        "distance": 2.5,
        "title": null,
        "name": "readResolve",
        "documentation": "/**\n     * Method that we need to override to actually make restoration go\n     * through constructors etc.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "XmlRootNameLookup"
          },
          {
            "start_node": "XmlRootNameLookup",
            "description": "contained in method",
            "type": "RELATED",
            "end_node": "XmlRootNameLookup"
          },
          {
            "start_node": "XmlRootNameLookup",
            "description": "contains method",
            "type": "RELATED",
            "end_node": "readResolve"
          }
        ],
        "similarity": 0.05827055687144257,
        "end_line": 241,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory.readResolve(): Object"
      },
      {
        "start_line": 209,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public XmlMapper copy()",
        "distance": 1.25,
        "title": null,
        "name": "copy",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "XmlSerializerProvider"
          },
          {
            "start_node": "XmlSerializerProvider",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "XmlSerializerProvider"
          },
          {
            "start_node": "XmlSerializerProvider",
            "description": "contains method",
            "type": "RELATED",
            "end_node": "copy"
          }
        ],
        "similarity": 0.056436826344440985,
        "end_line": 209,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper.copy(): XmlMapper"
      },
      {
        "start_line": 39,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected Object readResolve() {\n        // just need to make 100% sure it gets set to non-null, that's all\n        // 05-Jan-2020, tatu: How is that possibly, you ask? JDK serialization, that's how\n        //   (it by-passes calls to constructors, as well as initializers)\n        //   ... and if you don't believe, try commenting it out and see test failure you get\n        if (_rootNames == null) {\n            return new XmlRootNameLookup();\n        }\n        return this;\n    }",
        "distance": 2.5,
        "title": null,
        "name": "readResolve",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "XmlRootNameLookup"
          },
          {
            "start_node": "XmlRootNameLookup",
            "description": "contained in method",
            "type": "RELATED",
            "end_node": "XmlRootNameLookup"
          },
          {
            "start_node": "XmlRootNameLookup",
            "description": "contains method",
            "type": "RELATED",
            "end_node": "readResolve"
          }
        ],
        "similarity": 0.04998903926043042,
        "end_line": 48,
        "signature": "com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup.readResolve(): Object"
      },
      {
        "start_line": 305,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public XmlFactory getFactory() {\n        return (XmlFactory) _jsonFactory;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "getFactory",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "getFactory"
          }
        ],
        "similarity": 0.04384512284775003,
        "end_line": 307,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper.getFactory(): XmlFactory"
      },
      {
        "start_line": 248,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected TypeResolverBuilder<?> _constructDefaultTypeResolverBuilder(DefaultTyping applicability,",
        "distance": 1.25,
        "title": null,
        "name": "_constructDefaultTypeResolverBuilder",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "_constructDefaultTypeResolverBuilder"
          }
        ],
        "similarity": 0.04383467563108211,
        "end_line": 248,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper._constructDefaultTypeResolverBuilder(DefaultTyping applicability, PolymorphicTypeValidator ptv): TypeResolverBuilder"
      },
      {
        "start_line": 1410,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected int _nextToken() throws IOException {\n        try {\n            return _xmlTokens.next();\n        } catch (XMLStreamException e) {\n            return StaxUtil.throwAsParseException(e, this);\n        } catch (IllegalStateException e) {\n            // 08-Apr-2021, tatu: Should improve on this, wrt better information\n            //   on issue.\n            throw new JsonParseException(this, e.getMessage(), e);\n        }\n    }",
        "distance": 2.75,
        "title": null,
        "name": "_nextToken",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          },
          {
            "start_node": "disable",
            "description": "called by method",
            "type": "RELATED",
            "end_node": "configure"
          },
          {
            "start_node": "configure",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "FromXmlParser"
          },
          {
            "start_node": "FromXmlParser",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "_nextToken"
          }
        ],
        "similarity": 0.04366120954923157,
        "end_line": 1420,
        "signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._nextToken(): int"
      },
      {
        "start_line": 679,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected JsonGenerator _createGenerator(Writer out, IOContext ctxt) throws IOException {\n        // this method should never get called here, so:\n        VersionUtil.throwInternal();\n        return null;\n    }",
        "distance": 2.5,
        "title": null,
        "name": "_createGenerator",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "XmlFactory"
          },
          {
            "start_node": "XmlFactory",
            "description": "contained in method",
            "type": "RELATED",
            "end_node": "XmlFactory"
          },
          {
            "start_node": "XmlFactory",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "_createGenerator"
          }
        ],
        "similarity": 0.043603426777263726,
        "end_line": 683,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory._createGenerator(Writer out, IOContext ctxt): JsonGenerator"
      },
      {
        "start_line": 278,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public JsonGenerator setPrettyPrinter(PrettyPrinter pp) {\n        _cfgPrettyPrinter = pp;\n        _xmlPrettyPrinter = (pp instanceof XmlPrettyPrinter) ?\n               (XmlPrettyPrinter) pp : null;\n        return this;\n    }",
        "distance": 2.75,
        "title": null,
        "name": "setPrettyPrinter",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          },
          {
            "start_node": "disable",
            "description": "called by method",
            "type": "RELATED",
            "end_node": "configure"
          },
          {
            "start_node": "configure",
            "description": "contained in method",
            "type": "RELATED",
            "end_node": "ToXmlGenerator"
          },
          {
            "start_node": "ToXmlGenerator",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setPrettyPrinter"
          }
        ],
        "similarity": 0.043505050579172255,
        "end_line": 283,
        "signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.setPrettyPrinter(PrettyPrinter pp): JsonGenerator"
      },
      {
        "start_line": 490,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public JsonParser createParser(String content) throws IOException {\n        Reader r = new StringReader(content);\n        IOContext ctxt = _createContext(_createContentReference(r), true);\n        if (_inputDecorator != null) {\n            r = _inputDecorator.decorate(ctxt, r);\n        }\n        return _createParser(r, ctxt);\n    }",
        "distance": 2.25,
        "title": null,
        "name": "createParser",
        "documentation": "/**\n     * Overridden just to prevent trying to optimize access via char array;\n     * while nice idea, problem is that we don't have proper hooks to ensure\n     * that temporary buffer gets recycled; so let's just use StringReader.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "readValue"
          },
          {
            "start_node": "readValue",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "createParser"
          }
        ],
        "similarity": 0.043097582916385394,
        "end_line": 497,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory.createParser(String content): JsonParser"
      },
      {
        "start_line": 259,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    private void writeObject(ObjectOutputStream out) throws IOException {\n        out.defaultWriteObject();\n        out.writeUTF(_xmlInputFactory.getClass().getName());\n        out.writeUTF(_xmlOutputFactory.getClass().getName());\n    }",
        "distance": 2.5,
        "title": null,
        "name": "writeObject",
        "documentation": "/**\n     * In addition to default serialization, which mostly works, need\n     * to handle case of XML factories, hence override.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "XmlFactory"
          },
          {
            "start_node": "XmlFactory",
            "description": "contained in method",
            "type": "RELATED",
            "end_node": "XmlFactory"
          },
          {
            "start_node": "XmlFactory",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "writeObject"
          }
        ],
        "similarity": 0.043073607552642744,
        "end_line": 263,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory.writeObject(ObjectOutputStream out): void"
      },
      {
        "start_line": 44,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlDeserializationContext.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    private XmlDeserializationContext(XmlDeserializationContext src, DeserializerFactory factory) {\n        super(src, factory);\n    }",
        "distance": 2.0,
        "title": null,
        "name": "XmlDeserializationContext",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "XmlDeserializationContext"
          }
        ],
        "similarity": 0.04287971938951117,
        "end_line": 46,
        "signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext(XmlDeserializationContext src, DeserializerFactory factory)"
      },
      {
        "start_line": 506,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ToXmlGenerator createGenerator(OutputStream out) throws IOException {\n        return createGenerator(out, JsonEncoding.UTF8);\n    }",
        "distance": 2.25,
        "title": null,
        "name": "createGenerator",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "writeValue"
          },
          {
            "start_node": "writeValue",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "createGenerator"
          }
        ],
        "similarity": 0.04271080298154416,
        "end_line": 508,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory.createGenerator(OutputStream out): ToXmlGenerator"
      },
      {
        "start_line": 1422,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected void _skipEndElement() throws IOException {\n        try {\n            _xmlTokens.skipEndElement();\n        } catch (XMLStreamException e) {\n            StaxUtil.throwAsParseException(e, this);\n        } catch (Exception e) {\n            throw new JsonParseException(this, e.getMessage(), e);\n        }\n    }",
        "distance": 2.75,
        "title": null,
        "name": "_skipEndElement",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          },
          {
            "start_node": "disable",
            "description": "called by method",
            "type": "RELATED",
            "end_node": "configure"
          },
          {
            "start_node": "configure",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "FromXmlParser"
          },
          {
            "start_node": "FromXmlParser",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "_skipEndElement"
          }
        ],
        "similarity": 0.041441662939692904,
        "end_line": 1430,
        "signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._skipEndElement(): void"
      },
      {
        "start_line": 87,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public XmlFactoryBuilder(XmlFactory base) {\n        super(base);\n        _formatParserFeatures = base._xmlParserFeatures;\n        _formatGeneratorFeatures = base._xmlGeneratorFeatures;\n        _xmlInputFactory = base._xmlInputFactory;\n        _xmlOutputFactory = base._xmlOutputFactory;\n        _nameForTextElement = base._cfgNameForTextElement;\n        _nameProcessor = base._nameProcessor;\n        _classLoaderForStax = null;\n    }",
        "distance": 2.75,
        "title": null,
        "name": "XmlFactoryBuilder",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          },
          {
            "start_node": "disable",
            "description": "called by method",
            "type": "RELATED",
            "end_node": "configure"
          },
          {
            "start_node": "configure",
            "description": "contained in method",
            "type": "RELATED",
            "end_node": "XmlFactoryBuilder"
          },
          {
            "start_node": "XmlFactoryBuilder",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "XmlFactoryBuilder"
          }
        ],
        "similarity": 0.04136310925401192,
        "end_line": 96,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder(XmlFactory base)"
      },
      {
        "start_line": 181,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public void serializePolymorphic(JsonGenerator gen, Object value, JavaType rootType,",
        "distance": 2.5,
        "title": null,
        "name": "serializePolymorphic",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "XmlSerializerProvider"
          },
          {
            "start_node": "XmlSerializerProvider",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "XmlSerializerProvider"
          },
          {
            "start_node": "XmlSerializerProvider",
            "description": "contains method",
            "type": "RELATED",
            "end_node": "serializePolymorphic"
          }
        ],
        "similarity": 0.040953563256742244,
        "end_line": 181,
        "signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializePolymorphic(JsonGenerator gen, Object value, JavaType rootType, JsonSerializer valueSer, TypeSerializer typeSer): void"
      },
      {
        "start_line": 336,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected IOException _wrapAsIOE(JsonGenerator g, Exception e) {\n        if (e instanceof IOException) {\n            return (IOException) e;\n        }\n        String msg = e.getMessage();\n        if (msg == null) {\n            msg = \"[no message for \"+e.getClass().getName()+\"]\";\n        }\n        return new JsonMappingException(g, msg, e);\n    }",
        "distance": 2.5,
        "title": null,
        "name": "_wrapAsIOE",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "XmlSerializerProvider"
          },
          {
            "start_node": "XmlSerializerProvider",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "XmlSerializerProvider"
          },
          {
            "start_node": "XmlSerializerProvider",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "_wrapAsIOE"
          }
        ],
        "similarity": 0.04083815909654732,
        "end_line": 345,
        "signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._wrapAsIOE(JsonGenerator g, Exception e): IOException"
      },
      {
        "start_line": 320,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected ToXmlGenerator _asXmlGenerator(JsonGenerator gen)",
        "distance": 2.5,
        "title": null,
        "name": "_asXmlGenerator",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "XmlSerializerProvider"
          },
          {
            "start_node": "XmlSerializerProvider",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "XmlSerializerProvider"
          },
          {
            "start_node": "XmlSerializerProvider",
            "description": "contains method",
            "type": "RELATED",
            "end_node": "_asXmlGenerator"
          }
        ],
        "similarity": 0.0402531703912947,
        "end_line": 320,
        "signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._asXmlGenerator(JsonGenerator gen): ToXmlGenerator"
      },
      {
        "start_line": 354,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public final XmlFactory configure(ToXmlGenerator.Feature f, boolean state) {\n        if (state) {\n            enable(f);\n        } else {\n            disable(f);\n        }\n        return this;\n    }",
        "distance": 2.25,
        "title": null,
        "name": "configure",
        "documentation": "/**\n     * Method for enabling or disabling specified XML generator feature.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          },
          {
            "start_node": "disable",
            "description": "called by method",
            "type": "RELATED",
            "end_node": "configure"
          }
        ],
        "similarity": 0.03839267908433159,
        "end_line": 361,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory.configure(ToXmlGenerator f, boolean state): XmlFactory"
      },
      {
        "start_line": 233,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected void _serializeXmlNull(JsonGenerator gen) throws IOException",
        "distance": 2.5,
        "title": null,
        "name": "_serializeXmlNull",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "XmlSerializerProvider"
          },
          {
            "start_node": "XmlSerializerProvider",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "XmlSerializerProvider"
          },
          {
            "start_node": "XmlSerializerProvider",
            "description": "contains method",
            "type": "RELATED",
            "end_node": "_serializeXmlNull"
          }
        ],
        "similarity": 0.038167219128071056,
        "end_line": 233,
        "signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._serializeXmlNull(JsonGenerator gen): void"
      },
      {
        "start_line": 363,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public <T> T readValue(XMLStreamReader r, TypeReference<T> valueTypeRef) throws IOException {\n        return readValue(r, _typeFactory.constructType(valueTypeRef));\n    } ",
        "distance": 1.25,
        "title": null,
        "name": "readValue",
        "documentation": "/**\n     * Method for reading a single XML value from given XML-specific input\n     * source; useful for incremental data-binding, combining traversal using\n     * basic Stax {@link XMLStreamReader} with data-binding by Jackson.\n     * \n     * @since 2.4\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "readValue"
          }
        ],
        "similarity": 0.03797325159522807,
        "end_line": 365,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper.readValue(XMLStreamReader r, TypeReference valueTypeRef): T"
      },
      {
        "start_line": 128,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected XMLOutputFactory defaultOutputFactory() {\n        XMLOutputFactory xmlOut = StaxUtil.defaultOutputFactory(_classLoaderForStax);\n        // [dataformat-xml#326]: Better ensure namespaces get built properly:\n        xmlOut.setProperty(XMLOutputFactory.IS_REPAIRING_NAMESPACES, Boolean.TRUE);\n        return xmlOut;\n    }",
        "distance": 2.75,
        "title": null,
        "name": "defaultOutputFactory",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          },
          {
            "start_node": "disable",
            "description": "called by method",
            "type": "RELATED",
            "end_node": "configure"
          },
          {
            "start_node": "configure",
            "description": "contained in method",
            "type": "RELATED",
            "end_node": "XmlFactoryBuilder"
          },
          {
            "start_node": "XmlFactoryBuilder",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "defaultOutputFactory"
          }
        ],
        "similarity": 0.03745493004966597,
        "end_line": 133,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.defaultOutputFactory(): XMLOutputFactory"
      },
      {
        "start_line": 338,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ToXmlGenerator configure(Feature f, boolean state) {\n        if (state) {\n            enable(f);\n        } else {\n            disable(f);\n        }\n        return this;\n    }",
        "distance": 2.25,
        "title": null,
        "name": "configure",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          },
          {
            "start_node": "disable",
            "description": "called by method",
            "type": "RELATED",
            "end_node": "configure"
          }
        ],
        "similarity": 0.03740022456319514,
        "end_line": 345,
        "signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.configure(Feature f, boolean state): ToXmlGenerator"
      },
      {
        "start_line": 32,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/DefaultingXmlTypeResolverBuilder.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public DefaultingXmlTypeResolverBuilder(DefaultTyping t, PolymorphicTypeValidator ptv) {\n        super(t, ptv);\n    }",
        "distance": 2.25,
        "title": null,
        "name": "DefaultingXmlTypeResolverBuilder",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "_constructDefaultTypeResolverBuilder"
          },
          {
            "start_node": "_constructDefaultTypeResolverBuilder",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "DefaultingXmlTypeResolverBuilder"
          }
        ],
        "similarity": 0.03709718885007156,
        "end_line": 34,
        "signature": "com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder(DefaultTyping t, PolymorphicTypeValidator ptv)"
      },
      {
        "start_line": 76,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public void serializeValue(JsonGenerator gen, Object value) throws IOException",
        "distance": 2.5,
        "title": null,
        "name": "serializeValue",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "XmlSerializerProvider"
          },
          {
            "start_node": "XmlSerializerProvider",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "XmlSerializerProvider"
          },
          {
            "start_node": "XmlSerializerProvider",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "serializeValue"
          }
        ],
        "similarity": 0.03700233960277803,
        "end_line": 76,
        "signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializeValue(JsonGenerator gen, Object value): void"
      },
      {
        "start_line": 64,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public DefaultSerializerProvider copy() {\n        return new XmlSerializerProvider(this);\n    }",
        "distance": 2.5,
        "title": null,
        "name": "copy",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "XmlSerializerProvider"
          },
          {
            "start_node": "XmlSerializerProvider",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "XmlSerializerProvider"
          },
          {
            "start_node": "XmlSerializerProvider",
            "description": "contains method",
            "type": "RELATED",
            "end_node": "copy"
          }
        ],
        "similarity": 0.03685706238015182,
        "end_line": 66,
        "signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.copy(): DefaultSerializerProvider"
      },
      {
        "start_line": 184,
        "file_path": "playground/fasterxml__jackson-dataformat-xml/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public XmlFactoryBuilder enable(ToXmlGenerator.Feature first, ToXmlGenerator.Feature... other) {\n        _formatGeneratorFeatures |= first.getMask();\n        for (ToXmlGenerator.Feature f : other) {\n            _formatGeneratorFeatures |= f.getMask();\n        }\n        return _this();\n    }",
        "distance": 2.75,
        "title": null,
        "name": "enable",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "XmlMapper"
          },
          {
            "start_node": "XmlMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          },
          {
            "start_node": "disable",
            "description": "called by method",
            "type": "RELATED",
            "end_node": "configure"
          },
          {
            "start_node": "configure",
            "description": "contained in method",
            "type": "RELATED",
            "end_node": "XmlFactoryBuilder"
          },
          {
            "start_node": "XmlFactoryBuilder",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "enable"
          }
        ],
        "similarity": 0.0361723387138226,
        "end_line": 190,
        "signature": "com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.enable(ToXmlGenerator first, ToXmlGenerator other): XmlFactoryBuilder"
      }
    ],
    "classes": [],
    "issues": [
      {
        "content": "### Discussed in https://github.com/FasterXML/jackson-databind/discussions/3806\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **stepince** March  5, 2023</sup>\r\nXmlMapper is serializing jsonAppend virtual property twice.  ObjectMapper for json works correctly.\r\n\r\njackson version: 2.14.1\r\n\r\n```\r\npublic class VirtualBeanPropertyWriterTest {\r\n    @Test\r\n    public void testJsonAppend() throws Exception {\r\n        ObjectMapper mapper = new XmlMapper();\r\n        String xml = mapper.writeValueAsString(new Pojo(\"foo\"));\r\n        assertEquals(\"<Pojo><name>foo</name><virtual>bar</virtual></Pojo>\",xml);\r\n    }\r\n\r\n    @JsonAppend(props = @JsonAppend.Prop(name = \"virtual\", value = MyVirtualPropertyWriter.class))\r\n    public static class Pojo {\r\n        private final String name;\r\n\r\n        public Pojo(String name) {\r\n            this.name = name;\r\n        }\r\n        public String getName() {\r\n            return name;\r\n        }\r\n    }\r\n\r\n    public static class MyVirtualPropertyWriter extends VirtualBeanPropertyWriter {\r\n        public MyVirtualPropertyWriter() {}\r\n\r\n        protected MyVirtualPropertyWriter(BeanPropertyDefinition propDef, Annotations contextAnnotations,\r\n                                          JavaType declaredType) {\r\n            super(propDef, contextAnnotations, declaredType);\r\n        }\r\n\r\n        @Override\r\n        protected Object value(Object bean, JsonGenerator jgen, SerializerProvider prov) throws Exception {\r\n            return \"bar\";\r\n        }\r\n\r\n        @Override\r\n        public VirtualBeanPropertyWriter withConfig(MapperConfig<?> config, AnnotatedClass declaringClass,\r\n                                                    BeanPropertyDefinition propDef, JavaType type) {\r\n\r\n            return new MyVirtualPropertyWriter(propDef, declaringClass.getAnnotations(), type);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\noutput\r\n\r\n```\r\norg.opentest4j.AssertionFailedError: \r\nExpected :`<Pojo><name>foo</name><virtual>bar</virtual></Pojo>`\r\nActual   :`<Pojo><name>foo</name><virtual>bar</virtual><virtual>bar</virtual></Pojo>`\r\n</div>\r\n```\n",
        "distance": 0,
        "title": "`XmlMapper` serializes `@JsonAppend` property twice",
        "name": "root",
        "path": [],
        "issue_id": "root",
        "similarity": 2.0,
        "type": "issue"
      },
      {
        "start_line": null,
        "file_path": null,
        "issue_id": "578",
        "type": "issue",
        "content": "### Discussed in https://github.com/FasterXML/jackson-databind/discussions/3806\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **stepince** March  5, 2023</sup>\r\nXmlMapper is serializing jsonAppend virtual property twice.  ObjectMapper for json works correctly.\r\n\r\njackson version: 2.14.1\r\n\r\n```\r\npublic class VirtualBeanPropertyWriterTest {\r\n    @Test\r\n    public void testJsonAppend() throws Exception {\r\n        ObjectMapper mapper = new XmlMapper();\r\n        String xml = mapper.writeValueAsString(new Pojo(\"foo\"));\r\n        assertEquals(\"<Pojo><name>foo</name><virtual>bar</virtual></Pojo>\",xml);\r\n    }\r\n\r\n    @JsonAppend(props = @JsonAppend.Prop(name = \"virtual\", value = MyVirtualPropertyWriter.class))\r\n    public static class Pojo {\r\n        private final String name;\r\n\r\n        public Pojo(String name) {\r\n            this.name = name;\r\n        }\r\n        public String getName() {\r\n            return name;\r\n        }\r\n    }\r\n\r\n    public static class MyVirtualPropertyWriter extends VirtualBeanPropertyWriter {\r\n        public MyVirtualPropertyWriter() {}\r\n\r\n        protected MyVirtualPropertyWriter(BeanPropertyDefinition propDef, Annotations contextAnnotations,\r\n                                          JavaType declaredType) {\r\n            super(propDef, contextAnnotations, declaredType);\r\n        }\r\n\r\n        @Override\r\n        protected Object value(Object bean, JsonGenerator jgen, SerializerProvider prov) throws Exception {\r\n            return \"bar\";\r\n        }\r\n\r\n        @Override\r\n        public VirtualBeanPropertyWriter withConfig(MapperConfig<?> config, AnnotatedClass declaringClass,\r\n                                                    BeanPropertyDefinition propDef, JavaType type) {\r\n\r\n            return new MyVirtualPropertyWriter(propDef, declaringClass.getAnnotations(), type);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\noutput\r\n\r\n```\r\norg.opentest4j.AssertionFailedError: \r\nExpected :`<Pojo><name>foo</name><virtual>bar</virtual></Pojo>`\r\nActual   :`<Pojo><name>foo</name><virtual>bar</virtual><virtual>bar</virtual></Pojo>`\r\n</div>\r\n```\n\n\nComment by cowtowncoder:\nSounds like a flaw. Thank you for reporting @stepince \n\nComment by stepince:\nAny workaround for this issue? I am actually using a mixin class for the serialization. Maybe in VirtualBeanPropertyWriter Impl check if the property has been written. Not sure if this is possible?\n\nComment by cowtowncoder:\n@stepince Without knowing why it's failing it is hard to suggest any workaround. But no, writer should not really have to check for anything, backend should not write duplicates.\r\n\r\nI hope I'll have time to look into this in near future -- existence of unit test should be great help.\r\n\n\nComment by mukham12:\nHi @cowtowncoder,\r\n\r\nNot sure if this helps, but I was able to track down where the property is getting set twice. It is in [this file (AnnotationIntrospectorPair.java)](https://github.com/FasterXML/jackson-databind/blob/de62c677b12c02967c9620a11c1c5208f701cfef/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotationIntrospectorPair.java#L594,L595) lines 594 and 595. The first **virtual** prop is getting set when `_primary` calls `findAndAddVirtualProperties` and also the second time when `_secondary` calls `findAndAddVirtualProperties`. Thanks.\n\nComment by cowtowncoder:\n@mukham12 that is indeed helpful! Question then being why do we have 2 `JacksonAnnotationIntrospector` instances registered (-Pair is used to combine 2 AIs).\n\nComment by cowtowncoder:\nAh. That is because `JacksonXmlModule` inserts our special `JacksonXmlAnnotationIntrospector`; it won't (and basically can't) replace plain `JacksonAnnotationIntrospector`. But what that means, then, is that it doubles up this call.\r\n\r\nHmmh. In a way fix is easy, although I need to think it through -- basically have a switch to prevent some of the calls to super class. The reason for a switch (as opposed to just blocking) is that this implementation may be used directly as well, as a replacement of `JacksonAnnotationIntrospector` (instead of augmenting) -- if so, calls should be handled by base implementation.\r\n\r\nBut at least I now know how to implement this.\r\n\r\n\n\nComment by mukham12:\nHappy to help.\r\n\r\nI may be able to help with the implementation if you can just nudge me in the right direction and lay out the overall plan. Thanks. ",
        "source_code": null,
        "distance": 0.75,
        "title": "`XmlMapper` serializes `@JsonAppend` property twice",
        "name": "issue#578",
        "documentation": null,
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "pr#590"
          },
          {
            "start_node": "pr#590",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "issue#578"
          }
        ],
        "similarity": 0.6518904417197372,
        "end_line": null,
        "signature": null
      },
      {
        "start_line": null,
        "file_path": null,
        "issue_id": "590",
        "type": "issue",
        "content": "\n\n",
        "source_code": null,
        "distance": 0.25,
        "title": "Fix #578 (@JsonAppend properties serialized twice)",
        "name": "pr#590",
        "documentation": null,
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "pr#590"
          }
        ],
        "similarity": 0.4575435080638106,
        "end_line": null,
        "signature": null
      }
    ]
  },
  "artifact_stats": {
    "skipped_due_to_time": 3,
    "valid_related_items": 12
  }
}