{
    "related_entities": {
        "methods": [
            {
                "start_line": 1246,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumberField(String fieldName, long value) throws IOException {\n        writeFieldName(fieldName);\n        writeNumber(value);\n    }",
                "distance": 1.0,
                "title": null,
                "name": "writeNumberField",
                "documentation": "/**\n     * Convenience method for outputting a field entry (\"member\")\n     * that has the specified numeric value. Equivalent to:\n     *<pre>\n     *  writeFieldName(fieldName);\n     *  writeNumber(value);\n     *</pre>\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumberField"
                    }
                ],
                "similarity": 0.18324271834462014,
                "end_line": 1249,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeNumberField(String fieldName, long value): void"
            },
            {
                "start_line": 1286,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumberField(String fieldName, BigDecimal value) throws IOException {\n        writeFieldName(fieldName);\n        writeNumber(value);\n    }",
                "distance": 1.0,
                "title": null,
                "name": "writeNumberField",
                "documentation": "/**\n     * Convenience method for outputting a field entry (\"member\")\n     * that has the specified numeric value.\n     * Equivalent to:\n     *<pre>\n     *  writeFieldName(fieldName);\n     *  writeNumber(value);\n     *</pre>\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumberField"
                    }
                ],
                "similarity": 0.1800508578967683,
                "end_line": 1289,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeNumberField(String fieldName, BigDecimal value): void"
            },
            {
                "start_line": 1272,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumberField(String fieldName, float value) throws IOException {\n        writeFieldName(fieldName);\n        writeNumber(value);\n    }",
                "distance": 1.0,
                "title": null,
                "name": "writeNumberField",
                "documentation": "/**\n     * Convenience method for outputting a field entry (\"member\")\n     * that has the specified numeric value. Equivalent to:\n     *<pre>\n     *  writeFieldName(fieldName);\n     *  writeNumber(value);\n     *</pre>\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumberField"
                    }
                ],
                "similarity": 0.17916576378435392,
                "end_line": 1275,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeNumberField(String fieldName, float value): void"
            },
            {
                "start_line": 1259,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumberField(String fieldName, double value) throws IOException {\n        writeFieldName(fieldName);\n        writeNumber(value);\n    }",
                "distance": 1.0,
                "title": null,
                "name": "writeNumberField",
                "documentation": "/**\n     * Convenience method for outputting a field entry (\"member\")\n     * that has the specified numeric value. Equivalent to:\n     *<pre>\n     *  writeFieldName(fieldName);\n     *  writeNumber(value);\n     *</pre>\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumberField"
                    }
                ],
                "similarity": 0.17870296706460978,
                "end_line": 1262,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeNumberField(String fieldName, double value): void"
            },
            {
                "start_line": 1233,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumberField(String fieldName, int value) throws IOException {\n        writeFieldName(fieldName);\n        writeNumber(value);\n    }",
                "distance": 1.0,
                "title": null,
                "name": "writeNumberField",
                "documentation": "/**\n     * Convenience method for outputting a field entry (\"member\")\n     * that has the specified numeric value. Equivalent to:\n     *<pre>\n     *  writeFieldName(fieldName);\n     *  writeNumber(value);\n     *</pre>\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumberField"
                    }
                ],
                "similarity": 0.17766657659631924,
                "end_line": 1236,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeNumberField(String fieldName, int value): void"
            },
            {
                "start_line": 958,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public abstract void writeNumber(String encodedValue) throws IOException;",
                "distance": 1.25,
                "title": null,
                "name": "writeNumber",
                "documentation": "/**\n     * Write method that can be used for custom numeric types that can\n     * not be (easily?) converted to \"standard\" Java number types.\n     * Because numbers are not surrounded by double quotes, regular\n     * {@link #writeString} method can not be used; nor\n     * {@link #writeRaw} because that does not properly handle\n     * value separators needed in Array or Object contexts.\n     *<p>\n     * Note: because of lack of type safety, some generator\n     * implementations may not be able to implement this\n     * method. For example, if a binary JSON format is used,\n     * it may require type information for encoding; similarly\n     * for generator-wrappers around Java objects or JSON nodes.\n     * If implementation does not implement this method,\n     * it needs to throw {@link UnsupportedOperationException}.\n     * \n     * @throws UnsupportedOperationException If underlying data format does not\n     *   support numbers serialized textually AND if generator is not allowed\n     *   to just output a String instead (Schema-based formats may require actual\n     *   number, for example)\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.15315257831292406,
                "end_line": 958,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeNumber(String encodedValue): void"
            },
            {
                "start_line": 902,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public abstract void writeNumber(BigInteger v) throws IOException;",
                "distance": 1.25,
                "title": null,
                "name": "writeNumber",
                "documentation": "/**\n     * Method for outputting given value as JSON number.\n     * Can be called in any context where a value is expected\n     * (Array value, Object field value, root-level value).\n     * Additional white space may be added around the value\n     * if pretty-printing is enabled.\n     *\n     * @param v Number value to write\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.1514641871538001,
                "end_line": 902,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeNumber(BigInteger v): void"
            },
            {
                "start_line": 869,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(short v) throws IOException { writeNumber((int) v); }",
                "distance": 1.25,
                "title": null,
                "name": "writeNumber",
                "documentation": "/**\n     * Method for outputting given value as JSON number.\n     * Can be called in any context where a value is expected\n     * (Array value, Object field value, root-level value).\n     * Additional white space may be added around the value\n     * if pretty-printing is enabled.\n     *\n     * @param v Number value to write\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.1475639742032513,
                "end_line": 869,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeNumber(short v): void"
            },
            {
                "start_line": 891,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public abstract void writeNumber(long v) throws IOException;",
                "distance": 1.25,
                "title": null,
                "name": "writeNumber",
                "documentation": "/**\n     * Method for outputting given value as JSON number.\n     * Can be called in any context where a value is expected\n     * (Array value, Object field value, root-level value).\n     * Additional white space may be added around the value\n     * if pretty-printing is enabled.\n     *\n     * @param v Number value to write\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.14662784111028127,
                "end_line": 891,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeNumber(long v): void"
            },
            {
                "start_line": 880,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public abstract void writeNumber(int v) throws IOException;",
                "distance": 1.25,
                "title": null,
                "name": "writeNumber",
                "documentation": "/**\n     * Method for outputting given value as JSON number.\n     * Can be called in any context where a value is expected\n     * (Array value, Object field value, root-level value).\n     * Additional white space may be added around the value\n     * if pretty-printing is enabled.\n     *\n     * @param v Number value to write\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.1437577796893646,
                "end_line": 880,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeNumber(int v): void"
            },
            {
                "start_line": 935,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public abstract void writeNumber(BigDecimal v) throws IOException;",
                "distance": 1.25,
                "title": null,
                "name": "writeNumber",
                "documentation": "/**\n     * Method for outputting indicate JSON numeric value.\n     * Can be called in any context where a value is expected\n     * (Array value, Object field value, root-level value).\n     * Additional white space may be added around the value\n     * if pretty-printing is enabled.\n     *\n     * @param v Number value to write\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.14296756093563462,
                "end_line": 935,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeNumber(BigDecimal v): void"
            },
            {
                "start_line": 806,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(BigInteger value) throws IOException",
                "distance": 1.0,
                "title": null,
                "name": "writeNumber",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.14252028545488504,
                "end_line": 806,
                "signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(BigInteger value): void"
            },
            {
                "start_line": 1010,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(BigInteger value) throws IOException",
                "distance": 1.0,
                "title": null,
                "name": "writeNumber",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.14252028545488504,
                "end_line": 1010,
                "signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(BigInteger value): void"
            },
            {
                "start_line": 913,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public abstract void writeNumber(double v) throws IOException;",
                "distance": 1.25,
                "title": null,
                "name": "writeNumber",
                "documentation": "/**\n     * Method for outputting indicate JSON numeric value.\n     * Can be called in any context where a value is expected\n     * (Array value, Object field value, root-level value).\n     * Additional white space may be added around the value\n     * if pretty-printing is enabled.\n     *\n     * @param v Number value to write\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.14216225986054867,
                "end_line": 913,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeNumber(double v): void"
            },
            {
                "start_line": 859,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(String encodedValue) throws IOException",
                "distance": 1.0,
                "title": null,
                "name": "writeNumber",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.1410912663307363,
                "end_line": 859,
                "signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(String encodedValue): void"
            },
            {
                "start_line": 1065,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(String encodedValue) throws IOException",
                "distance": 1.0,
                "title": null,
                "name": "writeNumber",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.1410912663307363,
                "end_line": 1065,
                "signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(String encodedValue): void"
            },
            {
                "start_line": 924,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public abstract void writeNumber(float v) throws IOException;",
                "distance": 1.25,
                "title": null,
                "name": "writeNumber",
                "documentation": "/**\n     * Method for outputting indicate JSON numeric value.\n     * Can be called in any context where a value is expected\n     * (Array value, Object field value, root-level value).\n     * Additional white space may be added around the value\n     * if pretty-printing is enabled.\n     *\n     * @param v Number value to write\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.1410081444742261,
                "end_line": 924,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeNumber(float v): void"
            },
            {
                "start_line": 1019,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeObjectId(Object id) throws IOException {\n        throw new JsonGenerationException(\"No native support for writing Object Ids\", this);\n    }",
                "distance": 1.25,
                "title": null,
                "name": "writeObjectId",
                "documentation": "/**\n     * Method that can be called to output so-called native Object Id.\n     * Note that it may only be called after ensuring this is legal\n     * (with {@link #canWriteObjectId()}), as not all data formats\n     * have native type id support; and some may only allow them in\n     * certain positions or locations.\n     * If output is not allowed by the data format in this position,\n     * a {@link JsonGenerationException} will be thrown.\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeObjectId"
                    }
                ],
                "similarity": 0.1339424664693765,
                "end_line": 1021,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeObjectId(Object id): void"
            },
            {
                "start_line": 1045,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeTypeId(Object id) throws IOException {\n        throw new JsonGenerationException(\"No native support for writing Type Ids\", this);\n    }",
                "distance": 1.25,
                "title": null,
                "name": "writeTypeId",
                "documentation": "/**\n     * Method that can be called to output so-called native Type Id.\n     * Note that it may only be called after ensuring this is legal\n     * (with {@link #canWriteTypeId()}), as not all data formats\n     * have native type id support; and some may only allow them in\n     * certain positions or locations.\n     * If output is not allowed by the data format in this position,\n     * a {@link JsonGenerationException} will be thrown.\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeTypeId"
                    }
                ],
                "similarity": 0.1336371508226873,
                "end_line": 1047,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeTypeId(Object id): void"
            },
            {
                "start_line": 845,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(BigDecimal value) throws IOException",
                "distance": 1.0,
                "title": null,
                "name": "writeNumber",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.13233851900371377,
                "end_line": 845,
                "signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(BigDecimal value): void"
            },
            {
                "start_line": 1051,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(BigDecimal value) throws IOException",
                "distance": 1.0,
                "title": null,
                "name": "writeNumber",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.13233851900371377,
                "end_line": 1051,
                "signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(BigDecimal value): void"
            },
            {
                "start_line": 149,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    @Override public void writeFieldName(SerializableString name) throws IOException {\n        writeFieldName(name.getValue());\n    }",
                "distance": 1.0,
                "title": null,
                "name": "writeFieldName",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeFieldName"
                    }
                ],
                "similarity": 0.13058436269837181,
                "end_line": 151,
                "signature": "com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(SerializableString name): void"
            },
            {
                "start_line": 1032,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeObjectRef(Object id) throws IOException {\n        throw new JsonGenerationException(\"No native support for writing Object Ids\", this);\n    }",
                "distance": 1.25,
                "title": null,
                "name": "writeObjectRef",
                "documentation": "/**\n     * Method that can be called to output references to native Object Ids.\n     * Note that it may only be called after ensuring this is legal\n     * (with {@link #canWriteObjectId()}), as not all data formats\n     * have native type id support; and some may only allow them in\n     * certain positions or locations.\n     * If output is not allowed by the data format in this position,\n     * a {@link JsonGenerationException} will be thrown.\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeObjectRef"
                    }
                ],
                "similarity": 0.12941073357613264,
                "end_line": 1034,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeObjectRef(Object id): void"
            },
            {
                "start_line": 780,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(long l) throws IOException",
                "distance": 1.0,
                "title": null,
                "name": "writeNumber",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.127463322759901,
                "end_line": 780,
                "signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(long l): void"
            },
            {
                "start_line": 985,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(long l) throws IOException",
                "distance": 1.0,
                "title": null,
                "name": "writeNumber",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.127463322759901,
                "end_line": 985,
                "signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(long l): void"
            },
            {
                "start_line": 1350,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeObjectField(String fieldName, Object pojo) throws IOException {\n        writeFieldName(fieldName);\n        writeObject(pojo);\n    }",
                "distance": 1.25,
                "title": null,
                "name": "writeObjectField",
                "documentation": "/**\n     * Convenience method for outputting a field entry (\"member\")\n     * that has contents of specific Java object as its value.\n     * Equivalent to:\n     *<pre>\n     *  writeFieldName(fieldName);\n     *  writeObject(pojo);\n     *</pre>\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeObjectField"
                    }
                ],
                "similarity": 0.12614786375324505,
                "end_line": 1353,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeObjectField(String fieldName, Object pojo): void"
            },
            {
                "start_line": 756,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(int i) throws IOException",
                "distance": 1.0,
                "title": null,
                "name": "writeNumber",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.1261431933317965,
                "end_line": 756,
                "signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(int i): void"
            },
            {
                "start_line": 960,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(int i) throws IOException",
                "distance": 1.0,
                "title": null,
                "name": "writeNumber",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.1261431933317965,
                "end_line": 960,
                "signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(int i): void"
            },
            {
                "start_line": 832,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(float f) throws IOException",
                "distance": 1.0,
                "title": null,
                "name": "writeNumber",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.12470196374288275,
                "end_line": 832,
                "signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(float f): void"
            },
            {
                "start_line": 1037,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(float f) throws IOException",
                "distance": 1.0,
                "title": null,
                "name": "writeNumber",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.12470196374288275,
                "end_line": 1037,
                "signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(float f): void"
            },
            {
                "start_line": 600,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeString(Reader reader, int len) throws IOException {\n        // Let's implement this as \"unsupported\" to make it easier to add new parser impls\n        _reportUnsupportedOperation();\n    }",
                "distance": 1.25,
                "title": null,
                "name": "writeString",
                "documentation": "/**\n     * Method for outputting a String value. Depending on context\n     * this means either array element, (object) field value or\n     * a stand alone String; but in all cases, String will be\n     * surrounded in double quotes, and contents will be properly\n     * escaped as required by JSON specification.\n     * If the reader is null, then write a null.\n     * If len is &lt; 0, then write all contents of the reader.\n     * Otherwise, write only len characters.\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeString"
                    }
                ],
                "similarity": 0.1238660097430255,
                "end_line": 603,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeString(Reader reader, int len): void"
            },
            {
                "start_line": 819,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(double d) throws IOException",
                "distance": 1.0,
                "title": null,
                "name": "writeNumber",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.12312840718525515,
                "end_line": 819,
                "signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(double d): void"
            },
            {
                "start_line": 1023,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(double d) throws IOException",
                "distance": 1.0,
                "title": null,
                "name": "writeNumber",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.12312840718525515,
                "end_line": 1023,
                "signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(double d): void"
            },
            {
                "start_line": 989,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeEmbeddedObject(Object object) throws IOException {\n        // 01-Sep-2016, tatu: As per [core#318], handle small number of cases\n        if (object == null) {\n            writeNull();\n            return;\n        }\n        if (object instanceof byte[]) {\n            writeBinary((byte[]) object);\n            return;\n        }\n        throw new JsonGenerationException(\"No native support for writing embedded objects of type \"\n                +object.getClass().getName(),\n                this);\n    }",
                "distance": 1.25,
                "title": null,
                "name": "writeEmbeddedObject",
                "documentation": "/**\n     * Method that can be called on backends that support passing opaque datatypes of\n     * non-JSON formats\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeEmbeddedObject"
                    }
                ],
                "similarity": 0.12119702502572459,
                "end_line": 1002,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeEmbeddedObject(Object object): void"
            },
            {
                "start_line": 732,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(short s) throws IOException",
                "distance": 1.0,
                "title": null,
                "name": "writeNumber",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.12046821378082032,
                "end_line": 732,
                "signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(short s): void"
            },
            {
                "start_line": 936,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNumber(short s) throws IOException",
                "distance": 1.0,
                "title": null,
                "name": "writeNumber",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeNumber"
                    }
                ],
                "similarity": 0.12046821378082032,
                "end_line": 936,
                "signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(short s): void"
            },
            {
                "start_line": 1651,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    protected <T> T _reportUnsupportedOperation() {\n        throw new UnsupportedOperationException(\"Operation not supported by generator of type \"+getClass().getName());\n    }",
                "distance": 1.25,
                "title": null,
                "name": "_reportUnsupportedOperation",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "_reportUnsupportedOperation"
                    }
                ],
                "similarity": 0.11784760315920123,
                "end_line": 1653,
                "signature": "com.fasterxml.jackson.core.JsonGenerator._reportUnsupportedOperation(): T"
            },
            {
                "start_line": 800,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeBinary(byte[] data, int offset, int len) throws IOException {\n        writeBinary(Base64Variants.getDefaultVariant(), data, offset, len);\n    }",
                "distance": 1.25,
                "title": null,
                "name": "writeBinary",
                "documentation": "/**\n     * Similar to {@link #writeBinary(Base64Variant,byte[],int,int)},\n     * but default to using the Jackson default Base64 variant \n     * (which is {@link Base64Variants#MIME_NO_LINEFEEDS}).\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeBinary"
                    }
                ],
                "similarity": 0.11650630902448714,
                "end_line": 802,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeBinary(byte[] data, int offset, int len): void"
            },
            {
                "start_line": 1220,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeNullField(String fieldName) throws IOException {\n        writeFieldName(fieldName);\n        writeNull();\n    }",
                "distance": 1.25,
                "title": null,
                "name": "writeNullField",
                "documentation": "/**\n     * Convenience method for outputting a field entry (\"member\")\n     * that has JSON literal value null. Equivalent to:\n     *<pre>\n     *  writeFieldName(fieldName);\n     *  writeNull();\n     *</pre>\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeNullField"
                    }
                ],
                "similarity": 0.1162919505742557,
                "end_line": 1223,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeNullField(String fieldName): void"
            },
            {
                "start_line": 1194,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeStringField(String fieldName, String value) throws IOException {\n        writeFieldName(fieldName);\n        writeString(value);\n    }",
                "distance": 1.25,
                "title": null,
                "name": "writeStringField",
                "documentation": "/**\n     * Convenience method for outputting a field entry (\"member\")\n     * that has a String value. Equivalent to:\n     *<pre>\n     *  writeFieldName(fieldName);\n     *  writeString(value);\n     *</pre>\n     *<p>\n     * Note: many performance-sensitive implementations override this method\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeStringField"
                    }
                ],
                "similarity": 0.11609548889159382,
                "end_line": 1197,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeStringField(String fieldName, String value): void"
            },
            {
                "start_line": 357,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public boolean canWriteFormattedNumbers() { return false; }",
                "distance": 1.25,
                "title": null,
                "name": "canWriteFormattedNumbers",
                "documentation": "/**\n     * Introspection method to call to check whether it is possible\n     * to write numbers using {@link #writeNumber(java.lang.String)}\n     * using possible custom format, or not. Typically textual formats\n     * allow this (and JSON specifically does), whereas binary formats\n     * do not allow this (except by writing them as Strings).\n     * Usual reason for calling this method is to check whether custom\n     * formatting of numbers may be applied by higher-level code (databinding)\n     * or not.\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "canWriteFormattedNumbers"
                    }
                ],
                "similarity": 0.11582023671759535,
                "end_line": 357,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.canWriteFormattedNumbers(): boolean"
            },
            {
                "start_line": 562,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeArray(double[] array, int offset, int length) throws IOException",
                "distance": 1.25,
                "title": null,
                "name": "writeArray",
                "documentation": "/**\n     * Value write method that can be called to write a single\n     * array (sequence of {@link JsonToken#START_ARRAY}, zero or\n     * more {@link JsonToken#VALUE_NUMBER_FLOAT}, {@link JsonToken#END_ARRAY})\n     *\n     * @param array Array that contains values to write\n     * @param offset Offset of the first element to write, within array\n     * @param length Number of elements in array to write, from `offset` to `offset + len - 1`\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeArray"
                    }
                ],
                "similarity": 0.11385598689991473,
                "end_line": 562,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeArray(double[] array, int offset, int length): void"
            },
            {
                "start_line": 1168,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public abstract void writeObject(Object pojo) throws IOException;",
                "distance": 1.25,
                "title": null,
                "name": "writeObject",
                "documentation": "/**\n     * Method for writing given Java object (POJO) as tokens into\n     * stream this generator manages.\n     * This is done by delegating call to\n     * {@link ObjectWriteContext#writeValue(JsonGenerator, Object)}.\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeObject"
                    }
                ],
                "similarity": 0.11231291188062886,
                "end_line": 1168,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeObject(Object pojo): void"
            },
            {
                "start_line": 79,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    protected GeneratorBase(ObjectWriteContext writeCtxt, int streamWriteFeatures) {\n        super();\n        _objectWriteContext = writeCtxt;\n        _streamWriteFeatures = streamWriteFeatures;\n    }",
                "distance": 1.5,
                "title": null,
                "name": "GeneratorBase",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeFieldName"
                    },
                    {
                        "start_node": "writeFieldName",
                        "description": "contained in method",
                        "type": "RELATED",
                        "end_node": "GeneratorBase"
                    },
                    {
                        "start_node": "GeneratorBase",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "GeneratorBase"
                    }
                ],
                "similarity": 0.11099168870228396,
                "end_line": 83,
                "signature": "com.fasterxml.jackson.core.base.GeneratorBase(ObjectWriteContext writeCtxt, int streamWriteFeatures)"
            },
            {
                "start_line": 1300,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeBinaryField(String fieldName, byte[] data) throws IOException {\n        writeFieldName(fieldName);\n        writeBinary(data);\n    }",
                "distance": 1.25,
                "title": null,
                "name": "writeBinaryField",
                "documentation": "/**\n     * Convenience method for outputting a field entry (\"member\")\n     * that contains specified data in base64-encoded form.\n     * Equivalent to:\n     *<pre>\n     *  writeFieldName(fieldName);\n     *  writeBinary(value);\n     *</pre>\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeBinaryField"
                    }
                ],
                "similarity": 0.11028588589483146,
                "end_line": 1303,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeBinaryField(String fieldName, byte[] data): void"
            },
            {
                "start_line": 233,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeTree(TreeNode rootNode) throws IOException {\n        // As with 'writeObject()', we are not to check if write would work\n        if (rootNode == null) {\n            writeNull();\n        } else {\n            _objectWriteContext.writeTree(this, rootNode);\n        }\n    }",
                "distance": 1.5,
                "title": null,
                "name": "writeTree",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "writeFieldName"
                    },
                    {
                        "start_node": "writeFieldName",
                        "description": "contained in method",
                        "type": "RELATED",
                        "end_node": "GeneratorBase"
                    },
                    {
                        "start_node": "GeneratorBase",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeTree"
                    }
                ],
                "similarity": 0.11018748953056841,
                "end_line": 240,
                "signature": "com.fasterxml.jackson.core.base.GeneratorBase.writeTree(TreeNode rootNode): void"
            },
            {
                "start_line": 540,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeArray(long[] array, int offset, int length) throws IOException",
                "distance": 1.25,
                "title": null,
                "name": "writeArray",
                "documentation": "/**\n     * Value write method that can be called to write a single\n     * array (sequence of {@link JsonToken#START_ARRAY}, zero or\n     * more {@link JsonToken#VALUE_NUMBER_INT}, {@link JsonToken#END_ARRAY})\n     *\n     * @param array Array that contains values to write\n     * @param offset Offset of the first element to write, within array\n     * @param length Number of elements in array to write, from `offset` to `offset + len - 1`\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeArray"
                    }
                ],
                "similarity": 0.11002229001073784,
                "end_line": 540,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeArray(long[] array, int offset, int length): void"
            },
            {
                "start_line": 160,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public final JsonGenerator configure(StreamWriteFeature f, boolean state) {\n        if (state) enable(f); else disable(f);\n        return this;\n    }",
                "distance": 1.25,
                "title": null,
                "name": "configure",
                "documentation": "/**\n     * Method for enabling or disabling specified feature:\n     * check {@link StreamWriteFeature} for list of available features.\n     *\n     * @return Generator itself (this), to allow chaining\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "configure"
                    }
                ],
                "similarity": 0.10995733740696151,
                "end_line": 163,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.configure(StreamWriteFeature f, boolean state): JsonGenerator"
            },
            {
                "start_line": 518,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeArray(int[] array, int offset, int length) throws IOException",
                "distance": 1.25,
                "title": null,
                "name": "writeArray",
                "documentation": "/**\n     * Value write method that can be called to write a single\n     * array (sequence of {@link JsonToken#START_ARRAY}, zero or\n     * more {@link JsonToken#VALUE_NUMBER_INT}, {@link JsonToken#END_ARRAY})\n     *\n     * @param array Array that contains values to write\n     * @param offset Offset of the first element to write, within array\n     * @param length Number of elements in array to write, from `offset` to `offset + len - 1`\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeArray"
                    }
                ],
                "similarity": 0.10984969101383521,
                "end_line": 518,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeArray(int[] array, int offset, int length): void"
            },
            {
                "start_line": 1336,
                "file_path": "playground/fasterxml__jackson-core/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void writeObjectFieldStart(String fieldName) throws IOException {\n        writeFieldName(fieldName);\n        writeStartObject();\n    }",
                "distance": 1.25,
                "title": null,
                "name": "writeObjectFieldStart",
                "documentation": "/**\n     * Convenience method for outputting a field entry (\"member\")\n     * (that will contain an Object value), and the START_OBJECT marker.\n     * Equivalent to:\n     *<pre>\n     *  writeFieldName(fieldName);\n     *  writeStartObject();\n     *</pre>\n     *<p>\n     * Note: caller still has to take care to close the Object\n     * (by calling {#link #writeEndObject}) after writing all\n     * entries of the value Object.\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "JsonGenerator"
                    },
                    {
                        "start_node": "JsonGenerator",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "writeObjectFieldStart"
                    }
                ],
                "similarity": 0.10932663245377705,
                "end_line": 1339,
                "signature": "com.fasterxml.jackson.core.JsonGenerator.writeObjectFieldStart(String fieldName): void"
            }
        ],
        "classes": [],
        "issues": [
            {
                "content": "Currently `JsonGenerator#writeNumber` supports 7 types (`short`, `int`, `long`, `BigInteger`, `float`, `double`, `BigDecimal`) but `JsonGenerator#writeNumberField` support only 5 (`int`, `long`, `float`, `double`, `BigDecimal`).\r\nFor 2 types (`short`, `BigInteger`) we need to call `JsonGenerator#writeFieldName` and `JsonGenerator#writeNumber` rather then use one method.\r\n\r\nIs it acceptable to create a patch with these two methods?\n",
                "distance": 0,
                "title": "Synchronize variants of `JsonGenerator#writeNumberField` with `JsonGenerator#writeNumber`",
                "name": "root",
                "path": [],
                "issue_id": "root",
                "similarity": 2.0,
                "type": "issue"
            },
            {
                "start_line": null,
                "file_path": null,
                "issue_id": "565",
                "type": "issue",
                "content": "Currently `JsonGenerator#writeNumber` supports 7 types (`short`, `int`, `long`, `BigInteger`, `float`, `double`, `BigDecimal`) but `JsonGenerator#writeNumberField` support only 5 (`int`, `long`, `float`, `double`, `BigDecimal`).\r\nFor 2 types (`short`, `BigInteger`) we need to call `JsonGenerator#writeFieldName` and `JsonGenerator#writeNumber` rather then use one method.\r\n\r\nIs it acceptable to create a patch with these two methods?\n\n\nComment by cowtowncoder:\nYes, that would be acceptable; that's an oversight. Since this is an API change, it will need to go in a minor version and unfortunately this just missed 2.10 (as it is being uploaded). You can make PR against `master` (which is for 3.0.0) and if things go well I can backport it -- there is no 2.11 created yet.\r\n\n\nComment by valery1707:\nGood.\r\nI will create PR soon.",
                "source_code": null,
                "distance": 0.25,
                "title": "Synchronize variants of `JsonGenerator#writeNumberField` with `JsonGenerator#writeNumber`",
                "name": "issue#565",
                "documentation": null,
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "issue#565"
                    }
                ],
                "similarity": 0.7968634490152495,
                "end_line": null,
                "signature": null
            }
        ]
    },
    "artifact_stats": {
        "skipped_due_to_time": 3,
        "valid_related_items": 4
    }
}