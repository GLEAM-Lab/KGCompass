{
  "related_entities": {
    "methods": [
      {
        "start_line": 2485,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper configure(MapperFeature f, boolean state) {\n        _serializationConfig = state ?\n                _serializationConfig.with(f) : _serializationConfig.without(f);\n        _deserializationConfig = state ?\n                _deserializationConfig.with(f) : _deserializationConfig.without(f);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "configure",
        "documentation": "/**\n     * @deprecated Since 2.13 use {@code JsonMapper.builder().configure(...)}\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "configure"
          }
        ],
        "similarity": 0.15358969113222645,
        "end_line": 2491,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.configure(MapperFeature f, boolean state): ObjectMapper"
      },
      {
        "start_line": 2647,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper configure(DatatypeFeature f, boolean state) {\n        if (state) {\n            _deserializationConfig = _deserializationConfig.with(f);\n            _serializationConfig = _serializationConfig.with(f);\n        } else {\n            _deserializationConfig = _deserializationConfig.without(f);\n            _serializationConfig = _serializationConfig.without(f);\n        }\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "configure",
        "documentation": "/**\n     * Method for changing state of an on/off datatype-specific feature for\n     * this object mapper.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "configure"
          }
        ],
        "similarity": 0.14822451400304262,
        "end_line": 2656,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.configure(DatatypeFeature f, boolean state): ObjectMapper"
      },
      {
        "start_line": 713,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper copy() {\n        _checkInvalidCopy(ObjectMapper.class);\n        return new ObjectMapper(this);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "copy",
        "documentation": "/**\n     * Method for creating a new {@link ObjectMapper} instance that\n     * has same initial configuration as this instance. Note that this\n     * also requires making a copy of the underlying {@link JsonFactory}\n     * instance.\n     *<p>\n     * Method is typically\n     * used when multiple, differently configured mappers are needed.\n     * Although configuration is shared, cached serializers and deserializers\n     * are NOT shared, which means that the new instance may be re-configured\n     * before use; meaning that it behaves the same way as if an instance\n     * was constructed from scratch.\n     * \n     * @since 2.1\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "copy"
          }
        ],
        "similarity": 0.14163882707101047,
        "end_line": 716,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.copy(): ObjectMapper"
      },
      {
        "start_line": 2593,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper configure(DeserializationFeature f, boolean state) {\n        _deserializationConfig = state ?\n                _deserializationConfig.with(f) : _deserializationConfig.without(f);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "configure",
        "documentation": "/**\n     * Method for changing state of an on/off deserialization feature for\n     * this object mapper.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "configure"
          }
        ],
        "similarity": 0.1395414070081122,
        "end_line": 2597,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.configure(DeserializationFeature f, boolean state): ObjectMapper"
      },
      {
        "start_line": 2531,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper configure(SerializationFeature f, boolean state) {\n        _serializationConfig = state ?\n                _serializationConfig.with(f) : _serializationConfig.without(f);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "configure",
        "documentation": "/**\n     * Method for changing state of an on/off serialization feature for\n     * this object mapper.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "configure"
          }
        ],
        "similarity": 0.13809271965314912,
        "end_line": 2535,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.configure(SerializationFeature f, boolean state): ObjectMapper"
      },
      {
        "start_line": 2497,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper enable(MapperFeature... f) {\n        _deserializationConfig = _deserializationConfig.with(f);\n        _serializationConfig = _serializationConfig.with(f);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "enable",
        "documentation": "/**\n     * @deprecated Since 2.13 use {@code JsonMapper.builder().enable(...)}\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "enable"
          }
        ],
        "similarity": 0.13336200334275333,
        "end_line": 2501,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.enable(MapperFeature f): ObjectMapper"
      },
      {
        "start_line": 2507,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper disable(MapperFeature... f) {\n        _deserializationConfig = _deserializationConfig.without(f);\n        _serializationConfig = _serializationConfig.without(f);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "disable",
        "documentation": "/**\n     * @deprecated Since 2.13 use {@code JsonMapper.builder().disable(...)}\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          }
        ],
        "similarity": 0.12971151291276148,
        "end_line": 2511,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.disable(MapperFeature f): ObjectMapper"
      },
      {
        "start_line": 1425,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setSerializerFactory(SerializerFactory f) {\n        _serializerFactory = f;\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setSerializerFactory",
        "documentation": "/**\n     * Method for setting specific {@link SerializerFactory} to use\n     * for constructing (bean) serializers.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setSerializerFactory"
          }
        ],
        "similarity": 0.12453532220533704,
        "end_line": 1428,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setSerializerFactory(SerializerFactory f): ObjectMapper"
      },
      {
        "start_line": 2276,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setConfig(DeserializationConfig config) {\n        _assertNotNull(\"config\", config);\n        _deserializationConfig = config;\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setConfig",
        "documentation": "/**\n     * Method that allows overriding of the underlying {@link DeserializationConfig}\n     * object.\n     * It is added as a fallback method that may be used if no other configuration\n     * modifier method works: it should not be used if there are alternatives,\n     * and its use is generally discouraged.\n     *<p>\n     * <b>NOTE</b>: only use this method if you know what you are doing -- it allows\n     * by-passing some of checks applied to other configuration methods.\n     * Also keep in mind that as with all configuration of {@link ObjectMapper},\n     * this is only thread-safe if done before calling any deserialization methods.\n     * \n     * @since 2.4\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setConfig"
          }
        ],
        "similarity": 0.12281222029876436,
        "end_line": 2280,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setConfig(DeserializationConfig config): ObjectMapper"
      },
      {
        "start_line": 584,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper(JsonFactory jf) {\n        this(jf, null, null);\n    }",
        "distance": 1.0,
        "title": null,
        "name": "ObjectMapper",
        "documentation": "/**\n     * Constructs instance that uses specified {@link JsonFactory}\n     * for constructing necessary {@link JsonParser}s and/or\n     * {@link JsonGenerator}s.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          }
        ],
        "similarity": 0.12201088354208334,
        "end_line": 586,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper(JsonFactory jf)"
      },
      {
        "start_line": 2342,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setConfig(SerializationConfig config) {\n        _assertNotNull(\"config\", config);\n        _serializationConfig = config;\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setConfig",
        "documentation": "/**\n     * Method that allows overriding of the underlying {@link SerializationConfig}\n     * object, which contains serialization-specific configuration settings.\n     * It is added as a fallback method that may be used if no other configuration\n     * modifier method works: it should not be used if there are alternatives,\n     * and its use is generally discouraged.\n     *<p>\n     * <b>NOTE</b>: only use this method if you know what you are doing -- it allows\n     * by-passing some of checks applied to other configuration methods.\n     * Also keep in mind that as with all configuration of {@link ObjectMapper},\n     * this is only thread-safe if done before calling any serialization methods.\n     * \n     * @since 2.4\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setConfig"
          }
        ],
        "similarity": 0.12193524299334571,
        "end_line": 2346,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setConfig(SerializationConfig config): ObjectMapper"
      },
      {
        "start_line": 2743,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper configure(JsonGenerator.Feature f, boolean state) {\n        _jsonFactory.configure(f,  state);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "configure",
        "documentation": "/**\n     * Method for changing state of an on/off {@link JsonGenerator} feature for\n     * generator instances this object mapper creates.\n     *<p>\n     * Note that this is equivalent to directly calling same method\n     * on {@link #getFactory}.\n     *<p>\n     * WARNING: since this method directly modifies state of underlying {@link JsonFactory},\n     * it will change observed configuration by {@link ObjectWriter}s as well -- to avoid\n     * this, use {@link ObjectWriter#with(JsonGenerator.Feature)} instead.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "configure"
          }
        ],
        "similarity": 0.1219201624930985,
        "end_line": 2746,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.configure(JsonGenerator f, boolean state): ObjectMapper"
      },
      {
        "start_line": 2226,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setNodeFactory(JsonNodeFactory f) {\n        _deserializationConfig = _deserializationConfig.with(f);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setNodeFactory",
        "documentation": "/**\n     * Method for specifying {@link JsonNodeFactory} to use for\n     * constructing root level tree nodes (via method\n     * {@link #createObjectNode}\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setNodeFactory"
          }
        ],
        "similarity": 0.12041043413419367,
        "end_line": 2229,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setNodeFactory(JsonNodeFactory f): ObjectMapper"
      },
      {
        "start_line": 2679,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper configure(JsonParser.Feature f, boolean state) {\n        _jsonFactory.configure(f, state);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "configure",
        "documentation": "/**\n     * Method for changing state of specified {@link com.fasterxml.jackson.core.JsonParser.Feature}s\n     * for parser instances this object mapper creates.\n     *<p>\n     * Note that this is equivalent to directly calling same method\n     * on {@link #getFactory}.\n     *<p>\n     * WARNING: since this method directly modifies state of underlying {@link JsonFactory},\n     * it will change observed configuration by {@link ObjectReader}s as well -- to avoid\n     * this, use {@link ObjectReader#with(JsonParser.Feature)} instead.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "configure"
          }
        ],
        "similarity": 0.11999972705161026,
        "end_line": 2682,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.configure(JsonParser f, boolean state): ObjectMapper"
      },
      {
        "start_line": 2066,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper enableDefaultTyping(DefaultTyping applicability, JsonTypeInfo.As includeAs) {\n        return activateDefaultTyping(getPolymorphicTypeValidator(), applicability, includeAs);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "enableDefaultTyping",
        "documentation": "/**\n     * @deprecated Since 2.10 use {@link #activateDefaultTyping(PolymorphicTypeValidator,DefaultTyping,JsonTypeInfo.As)} instead\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "enableDefaultTyping"
          }
        ],
        "similarity": 0.11995372161934915,
        "end_line": 2068,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.enableDefaultTyping(DefaultTyping applicability, JsonTypeInfo includeAs): ObjectMapper"
      },
      {
        "start_line": 2603,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper enable(DeserializationFeature feature) {\n        _deserializationConfig = _deserializationConfig.with(feature);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "enable",
        "documentation": "/**\n     * Method for enabling specified {@link DeserializationConfig} features.\n     * Modifies and returns this instance; no new object is created.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "enable"
          }
        ],
        "similarity": 0.11929110662343599,
        "end_line": 2606,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.enable(DeserializationFeature feature): ObjectMapper"
      },
      {
        "start_line": 637,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper(JsonFactory jf,",
        "distance": 1.0,
        "title": null,
        "name": "ObjectMapper",
        "documentation": "/**\n     * Constructs instance that uses specified {@link JsonFactory}\n     * for constructing necessary {@link JsonParser}s and/or\n     * {@link JsonGenerator}s, and uses given providers for accessing\n     * serializers and deserializers.\n     * \n     * @param jf JsonFactory to use: if null, a new {@link MappingJsonFactory} will be constructed\n     * @param sp SerializerProvider to use: if null, a {@link SerializerProvider} will be constructed\n     * @param dc Blueprint deserialization context instance to use for creating\n     *    actual context objects; if null, will construct standard\n     *    {@link DeserializationContext}\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          }
        ],
        "similarity": 0.1163263250440615,
        "end_line": 637,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper(JsonFactory jf, DefaultSerializerProvider sp, DefaultDeserializationContext dc)"
      },
      {
        "start_line": 2760,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper enable(JsonGenerator.Feature... features) {\n        for (JsonGenerator.Feature f : features) {\n            _jsonFactory.enable(f);\n        }\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "enable",
        "documentation": "/**\n     * Method for enabling specified {@link com.fasterxml.jackson.core.JsonGenerator.Feature}s\n     * for parser instances this object mapper creates.\n     *<p>\n     * Note that this is equivalent to directly calling same method on {@link #getFactory}.\n     *<p>\n     * WARNING: since this method directly modifies state of underlying {@link JsonFactory},\n     * it will change observed configuration by {@link ObjectWriter}s as well -- to avoid\n     * this, use {@link ObjectWriter#with(JsonGenerator.Feature)} instead.\n     *\n     * @since 2.5\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "enable"
          }
        ],
        "similarity": 0.11617065453134907,
        "end_line": 2765,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.enable(JsonGenerator features): ObjectMapper"
      },
      {
        "start_line": 1686,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setPropertyNamingStrategy(PropertyNamingStrategy s) {\n        _serializationConfig = _serializationConfig.with(s);\n        _deserializationConfig = _deserializationConfig.with(s);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setPropertyNamingStrategy",
        "documentation": "/**\n     * Method for setting custom property naming strategy to use.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setPropertyNamingStrategy"
          }
        ],
        "similarity": 0.11553589517467466,
        "end_line": 1690,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setPropertyNamingStrategy(PropertyNamingStrategy s): ObjectMapper"
      },
      {
        "start_line": 2447,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setTimeZone(TimeZone tz) {\n        _deserializationConfig = _deserializationConfig.with(tz);\n        _serializationConfig = _serializationConfig.with(tz);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setTimeZone",
        "documentation": "/**\n     * Method for overriding default TimeZone to use for formatting.\n     * Default value used is UTC (NOT default TimeZone of JVM).\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setTimeZone"
          }
        ],
        "similarity": 0.11539483978189737,
        "end_line": 2451,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setTimeZone(TimeZone tz): ObjectMapper"
      },
      {
        "start_line": 2541,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper enable(SerializationFeature f) {\n        _serializationConfig = _serializationConfig.with(f);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "enable",
        "documentation": "/**\n     * Method for enabling specified {@link DeserializationConfig} feature.\n     * Modifies and returns this instance; no new object is created.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "enable"
          }
        ],
        "similarity": 0.11484414640484314,
        "end_line": 2544,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.enable(SerializationFeature f): ObjectMapper"
      },
      {
        "start_line": 2696,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper enable(JsonParser.Feature... features) {\n        for (JsonParser.Feature f : features) {\n            _jsonFactory.enable(f);\n        }\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "enable",
        "documentation": "/**\n     * Method for enabling specified {@link com.fasterxml.jackson.core.JsonParser.Feature}s\n     * for parser instances this object mapper creates.\n     *<p>\n     * Note that this is equivalent to directly calling same method on {@link #getFactory}.\n     *<p>\n     * WARNING: since this method directly modifies state of underlying {@link JsonFactory},\n     * it will change observed configuration by {@link ObjectReader}s as well -- to avoid\n     * this, use {@link ObjectReader#with(JsonParser.Feature)} instead.\n     *\n     * @since 2.5\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "enable"
          }
        ],
        "similarity": 0.11446969624092564,
        "end_line": 2701,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.enable(JsonParser features): ObjectMapper"
      },
      {
        "start_line": 2622,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper disable(DeserializationFeature feature) {\n        _deserializationConfig = _deserializationConfig.without(feature);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "disable",
        "documentation": "/**\n     * Method for disabling specified {@link DeserializationConfig} features.\n     * Modifies and returns this instance; no new object is created.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          }
        ],
        "similarity": 0.11367026786921876,
        "end_line": 2625,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.disable(DeserializationFeature feature): ObjectMapper"
      },
      {
        "start_line": 1721,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setDefaultPrettyPrinter(PrettyPrinter pp) {\n        _serializationConfig = _serializationConfig.withDefaultPrettyPrinter(pp);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setDefaultPrettyPrinter",
        "documentation": "/**\n     * Method for specifying {@link PrettyPrinter} to use when \"default pretty-printing\"\n     * is enabled (by enabling {@link SerializationFeature#INDENT_OUTPUT})\n     * \n     * @param pp Pretty printer to use by default.\n     * \n     * @return This mapper, useful for call-chaining\n     * \n     * @since 2.6\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setDefaultPrettyPrinter"
          }
        ],
        "similarity": 0.11288620509047295,
        "end_line": 1724,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setDefaultPrettyPrinter(PrettyPrinter pp): ObjectMapper"
      },
      {
        "start_line": 1638,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setSubtypeResolver(SubtypeResolver str) {\n        _subtypeResolver = str;\n        _deserializationConfig = _deserializationConfig.with(str);\n        _serializationConfig = _serializationConfig.with(str);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setSubtypeResolver",
        "documentation": "/**\n     * Method for setting custom subtype resolver to use.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setSubtypeResolver"
          }
        ],
        "similarity": 0.112599035152195,
        "end_line": 1643,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setSubtypeResolver(SubtypeResolver str): ObjectMapper"
      },
      {
        "start_line": 2074,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper enableDefaultTypingAsProperty(DefaultTyping applicability, String propertyName) {\n        return activateDefaultTypingAsProperty(getPolymorphicTypeValidator(), applicability, propertyName);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "enableDefaultTypingAsProperty",
        "documentation": "/**\n     * @deprecated Since 2.10 use {@link #activateDefaultTypingAsProperty(PolymorphicTypeValidator,DefaultTyping,String)} instead\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "enableDefaultTypingAsProperty"
          }
        ],
        "similarity": 0.11241854307882923,
        "end_line": 2076,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.enableDefaultTypingAsProperty(DefaultTyping applicability, String propertyName): ObjectMapper"
      },
      {
        "start_line": 2779,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper disable(JsonGenerator.Feature... features) {\n        for (JsonGenerator.Feature f : features) {\n            _jsonFactory.disable(f);\n        }\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "disable",
        "documentation": "/**\n     * Method for disabling specified {@link com.fasterxml.jackson.core.JsonGenerator.Feature}s\n     * for parser instances this object mapper creates.\n     *<p>\n     * Note that this is equivalent to directly calling same method on {@link #getFactory}.\n     *<p>\n     * WARNING: since this method directly modifies state of underlying {@link JsonFactory},\n     * it will change observed configuration by {@link ObjectWriter}s as well -- to avoid\n     * this, use {@link ObjectWriter#without(JsonGenerator.Feature)} instead.\n     *\n     * @since 2.5\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          }
        ],
        "similarity": 0.11217371713782932,
        "end_line": 2784,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.disable(JsonGenerator features): ObjectMapper"
      },
      {
        "start_line": 2715,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper disable(JsonParser.Feature... features) {\n        for (JsonParser.Feature f : features) {\n            _jsonFactory.disable(f);\n        }\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "disable",
        "documentation": "/**\n     * Method for disabling specified {@link com.fasterxml.jackson.core.JsonParser.Feature}s\n     * for parser instances this object mapper creates.\n     *<p>\n     * Note that this is equivalent to directly calling same method on {@link #getFactory}.\n     *<p>\n     * WARNING: since this method directly modifies state of underlying {@link JsonFactory},\n     * it will change observed configuration by {@link ObjectReader}s as well -- to avoid\n     * this, use {@link ObjectReader#without(JsonParser.Feature)} instead.\n     *\n     * @since 2.5\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          }
        ],
        "similarity": 0.1110876430859647,
        "end_line": 2720,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.disable(JsonParser features): ObjectMapper"
      },
      {
        "start_line": 4572,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected DefaultSerializerProvider _serializerProvider(SerializationConfig config) {\n        return _serializerProvider.createInstance(config, _serializerFactory);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "_serializerProvider",
        "documentation": "/**\n     * Overridable helper method used for constructing\n     * {@link SerializerProvider} to use for serialization.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "_serializerProvider"
          }
        ],
        "similarity": 0.11079864841779868,
        "end_line": 4574,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper._serializerProvider(SerializationConfig config): DefaultSerializerProvider"
      },
      {
        "start_line": 1655,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setAnnotationIntrospector(AnnotationIntrospector ai) {\n        _serializationConfig = _serializationConfig.with(ai);\n        _deserializationConfig = _deserializationConfig.with(ai);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setAnnotationIntrospector",
        "documentation": "/**\n     * Method for setting {@link AnnotationIntrospector} used by this\n     * mapper instance for both serialization and deserialization.\n     * Note that doing this will replace the current introspector, which\n     * may lead to unavailability of core Jackson annotations.\n     * If you want to combine handling of multiple introspectors,\n     * have a look at {@link com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair}.\n     * \n     * @see com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setAnnotationIntrospector"
          }
        ],
        "similarity": 0.1100856476911582,
        "end_line": 1659,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setAnnotationIntrospector(AnnotationIntrospector ai): ObjectMapper"
      },
      {
        "start_line": 575,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper() {\n        this(null, null, null);\n    }",
        "distance": 1.0,
        "title": null,
        "name": "ObjectMapper",
        "documentation": "/**\n     * Default constructor, which will construct the default\n     * {@link JsonFactory} as necessary, use\n     * {@link SerializerProvider} as its\n     * {@link SerializerProvider}, and\n     * {@link BeanSerializerFactory} as its\n     * {@link SerializerFactory}.\n     * This means that it\n     * can serialize all standard JDK types, as well as regular\n     * Java Beans (based on method names and Jackson-specific annotations),\n     * but does not support JAXB annotations.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          }
        ],
        "similarity": 0.1098371895885834,
        "end_line": 577,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper()"
      },
      {
        "start_line": 1846,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setDefaultMergeable(Boolean b) {\n        _configOverrides.setDefaultMergeable(b);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setDefaultMergeable",
        "documentation": "/**\n     * Method for setting default Setter configuration, regarding things like\n     * merging, null-handling; used for properties for which there are\n     * no per-type or per-property overrides (via annotations or config overrides).\n     *\n     * @since 2.9\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setDefaultMergeable"
          }
        ],
        "similarity": 0.10938900027346773,
        "end_line": 1849,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setDefaultMergeable(Boolean b): ObjectMapper"
      },
      {
        "start_line": 2560,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper disable(SerializationFeature f) {\n        _serializationConfig = _serializationConfig.without(f);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "disable",
        "documentation": "/**\n     * Method for disabling specified {@link DeserializationConfig} features.\n     * Modifies and returns this instance; no new object is created.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          }
        ],
        "similarity": 0.10934609317464383,
        "end_line": 2563,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.disable(SerializationFeature f): ObjectMapper"
      },
      {
        "start_line": 4129,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectReader readerForUpdating(Object valueToUpdate) {\n        JavaType t = _typeFactory.constructType(valueToUpdate.getClass());\n        return _newReader(getDeserializationConfig(), t, valueToUpdate,\n                null, _injectableValues);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "readerForUpdating",
        "documentation": "/**\n     * Factory method for constructing {@link ObjectReader} that will\n     * update given Object (usually Bean, but can be a Collection or Map\n     * as well, but NOT an array) with JSON data. Deserialization occurs\n     * normally except that the root-level value in JSON is not used for\n     * instantiating a new object; instead give updateable object is used\n     * as root.\n     * Runtime type of value object is used for locating deserializer,\n     * unless overridden by other factory methods of {@link ObjectReader}\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "readerForUpdating"
          }
        ],
        "similarity": 0.10835460867711272,
        "end_line": 4133,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.readerForUpdating(Object valueToUpdate): ObjectReader"
      },
      {
        "start_line": 2034,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setDefaultTyping(TypeResolverBuilder<?> typer) {\n        _deserializationConfig = _deserializationConfig.with(typer);\n        _serializationConfig = _serializationConfig.with(typer);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setDefaultTyping",
        "documentation": "/**\n     * Method for enabling automatic inclusion of type information (\"Default Typing\"),\n     * using specified handler object for determining which types this affects,\n     * as well as details of how information is embedded.\n     *<p>\n     * NOTE: use of Default Typing can be a potential security risk if incoming\n     * content comes from untrusted sources, so care should be taken to use\n     * a {@link TypeResolverBuilder} that can limit allowed classes to\n     * deserialize. Note in particular that\n     * {@link com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder}\n     * DOES NOT limit applicability but creates type (de)serializers for all\n     * types.\n     *\n     * @param typer Type information inclusion handler\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setDefaultTyping"
          }
        ],
        "similarity": 0.10815036206379151,
        "end_line": 2038,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setDefaultTyping(TypeResolverBuilder typer): ObjectMapper"
      },
      {
        "start_line": 1446,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setSerializerProvider(DefaultSerializerProvider p) {\n        _serializerProvider = p;\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setSerializerProvider",
        "documentation": "/**\n     * Method for setting \"blueprint\" {@link SerializerProvider} instance\n     * to use as the base for actual provider instances to use for handling\n     * caching of {@link JsonSerializer} instances.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setSerializerProvider"
          }
        ],
        "similarity": 0.10688073069265194,
        "end_line": 1449,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setSerializerProvider(DefaultSerializerProvider p): ObjectMapper"
      },
      {
        "start_line": 2248,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper addHandler(DeserializationProblemHandler h) {\n        _deserializationConfig = _deserializationConfig.withHandler(h);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "addHandler",
        "documentation": "/**\n     * Method for adding specified {@link DeserializationProblemHandler}\n     * to be used for handling specific problems during deserialization.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "addHandler"
          }
        ],
        "similarity": 0.10667968446861095,
        "end_line": 2251,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.addHandler(DeserializationProblemHandler h): ObjectMapper"
      },
      {
        "start_line": 2322,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setBase64Variant(Base64Variant v) {\n        _serializationConfig = _serializationConfig.with(v);\n        _deserializationConfig = _deserializationConfig.with(v);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setBase64Variant",
        "documentation": "/**\n     * Method that will configure default {@link Base64Variant} that\n     * <code>byte[]</code> serializers and deserializers will use.\n     * \n     * @param v Base64 variant to use\n     * \n     * @return This mapper, for convenience to allow chaining\n     * \n     * @since 2.1\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setBase64Variant"
          }
        ],
        "similarity": 0.10632628813190896,
        "end_line": 2326,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setBase64Variant(Base64Variant v): ObjectMapper"
      },
      {
        "start_line": 2109,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public MutableConfigOverride configOverride(Class<?> type) {\n        return _configOverrides.findOrCreateOverride(type);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "configOverride",
        "documentation": "/**\n     * Accessor for getting a mutable configuration override object for\n     * given type, needed to add or change per-type overrides applied\n     * to properties of given type.\n     * Usage is through returned object by calling \"setter\" methods, which\n     * directly modify override object and take effect directly.\n     * For example you can do\n     *<pre>\n     *   mapper.configOverride(java.util.Date.class)\n     *       .setFormat(JsonFormat.Value.forPattern(\"yyyy-MM-dd\"));\n     *</pre>\n     * to change the default format to use for properties of type\n     * {@link java.util.Date} (possibly further overridden by per-property\n     * annotations)\n     *\n     * @since 2.8\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "configOverride"
          }
        ],
        "similarity": 0.10585004621489964,
        "end_line": 2111,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.configOverride(Class type): MutableConfigOverride"
      },
      {
        "start_line": 1705,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setAccessorNaming(AccessorNamingStrategy.Provider s) {\n        _serializationConfig = _serializationConfig.with(s);\n        _deserializationConfig = _deserializationConfig.with(s);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setAccessorNaming",
        "documentation": "/**\n     * Method for setting custom accessor naming strategy to use.\n     *\n     * @since 2.12\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setAccessorNaming"
          }
        ],
        "similarity": 0.10580371774131095,
        "end_line": 1709,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setAccessorNaming(AccessorNamingStrategy s): ObjectMapper"
      },
      {
        "start_line": 1304,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public JsonParser createParser(byte[] content, int offset, int len) throws IOException {\n        _assertNotNull(\"content\", content);\n        return _deserializationConfig.initialize(_jsonFactory.createParser(content, offset, len));\n    }",
        "distance": 1.25,
        "title": null,
        "name": "createParser",
        "documentation": "/**\n     * Factory method for constructing properly initialized {@link JsonParser}\n     * to read content from specified byte array.\n     * Parser is not managed (or \"owned\") by ObjectMapper: caller is responsible\n     * for properly closing it once content reading is complete.\n     *\n     * @since 2.11\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "createParser"
          }
        ],
        "similarity": 0.10551946718762602,
        "end_line": 1307,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.createParser(byte[] content, int offset, int len): JsonParser"
      },
      {
        "start_line": 2373,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public JsonFactory tokenStreamFactory() { return _jsonFactory; }",
        "distance": 1.25,
        "title": null,
        "name": "tokenStreamFactory",
        "documentation": "/**\n     * Method that can be used to get hold of {@link JsonFactory} that this\n     * mapper uses if it needs to construct {@link JsonParser}s\n     * and/or {@link JsonGenerator}s.\n     *<p>\n     * WARNING: note that all {@link ObjectReader} and {@link ObjectWriter}\n     * instances created by this mapper usually share the same configured\n     * {@link JsonFactory}, so changes to its configuration will \"leak\".\n     * To avoid such observed changes you should always use \"with()\" and\n     * \"without()\" method of {@link ObjectReader} and {@link ObjectWriter}\n     * for changing {@link com.fasterxml.jackson.core.JsonParser.Feature}\n     * and {@link com.fasterxml.jackson.core.JsonGenerator.Feature}\n     * settings to use on per-call basis.\n     *\n     * @return {@link JsonFactory} that this mapper uses when it needs to\n     *   construct Json parser and generators\n     *\n     * @since 2.10\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "tokenStreamFactory"
          }
        ],
        "similarity": 0.10536678081454205,
        "end_line": 2373,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.tokenStreamFactory(): JsonFactory"
      },
      {
        "start_line": 1356,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public JsonParser createParser(DataInput content) throws IOException {\n        _assertNotNull(\"content\", content);\n        return _deserializationConfig.initialize(_jsonFactory.createParser(content));\n    }",
        "distance": 1.25,
        "title": null,
        "name": "createParser",
        "documentation": "/**\n     * Factory method for constructing properly initialized {@link JsonParser}\n     * to read content using specified {@link DataInput}.\n     * Parser is not managed (or \"owned\") by ObjectMapper: caller is responsible\n     * for properly closing it once content reading is complete.\n     *\n     * @since 2.11\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "createParser"
          }
        ],
        "similarity": 0.1048786697868698,
        "end_line": 1359,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.createParser(DataInput content): JsonParser"
      },
      {
        "start_line": 4643,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected final void _configAndWriteValue(JsonGenerator g, Object value) throws IOException {\n        getSerializationConfig().initialize(g);\n        _writeValueAndClose(g, value);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "_configAndWriteValue",
        "documentation": "/**\n     * @deprecated Since 2.11.2 Use {@link #_writeValueAndClose} instead\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "_configAndWriteValue"
          }
        ],
        "similarity": 0.10390962330358534,
        "end_line": 4646,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(JsonGenerator g, Object value): void"
      },
      {
        "start_line": 1158,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public JsonGenerator createGenerator(OutputStream out) throws IOException {\n        _assertNotNull(\"out\", out);\n        JsonGenerator g = _jsonFactory.createGenerator(out, JsonEncoding.UTF8);\n        _serializationConfig.initialize(g);\n        return g;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "createGenerator",
        "documentation": "/**\n     * Factory method for constructing properly initialized {@link JsonGenerator}\n     * to write content using specified {@link OutputStream}.\n     * Generator is not managed (or \"owned\") by mapper: caller is responsible\n     * for properly closing it once content generation is complete.\n     *\n     * @since 2.11\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "createGenerator"
          }
        ],
        "similarity": 0.10378907541284799,
        "end_line": 1163,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.createGenerator(OutputStream out): JsonGenerator"
      },
      {
        "start_line": 743,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected ObjectReader _newReader(DeserializationConfig config) {\n        return new ObjectReader(this, config);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "_newReader",
        "documentation": "/**\n     * Factory method sub-classes must override, to produce {@link ObjectReader}\n     * instances of proper sub-type\n     * \n     * @since 2.5\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "_newReader"
          }
        ],
        "similarity": 0.10365947482537076,
        "end_line": 745,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper._newReader(DeserializationConfig config): ObjectReader"
      },
      {
        "start_line": 1742,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setPolymorphicTypeValidator(PolymorphicTypeValidator ptv) {\n        BaseSettings s = _deserializationConfig.getBaseSettings().with(ptv);\n        _deserializationConfig = _deserializationConfig._withBase(s);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setPolymorphicTypeValidator",
        "documentation": "/**\n     * Method for specifying {@link PolymorphicTypeValidator} to use for validating\n     * polymorphic subtypes used with explicit polymorphic types (annotation-based),\n     * but NOT one with \"default typing\" (see {@link #activateDefaultTyping(PolymorphicTypeValidator)}\n     * for details).\n     *\n     * @since 2.10\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setPolymorphicTypeValidator"
          }
        ],
        "similarity": 0.10364374722374592,
        "end_line": 1746,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setPolymorphicTypeValidator(PolymorphicTypeValidator ptv): ObjectMapper"
      },
      {
        "start_line": 2239,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setConstructorDetector(ConstructorDetector cd) {\n        _deserializationConfig = _deserializationConfig.with(cd);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setConstructorDetector",
        "documentation": "/**\n     * Method for specifying {@link ConstructorDetector} to use for\n     * determining some aspects of creator auto-detection (specifically\n     * auto-detection of constructor, and in particular behavior with\n     * single-argument constructors).\n     *\n     * @since 2.12\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setConstructorDetector"
          }
        ],
        "similarity": 0.10308101391344575,
        "end_line": 2242,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setConstructorDetector(ConstructorDetector cd): ObjectMapper"
      },
      {
        "start_line": 1291,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public JsonParser createParser(byte[] content) throws IOException {\n        _assertNotNull(\"content\", content);\n        return _deserializationConfig.initialize(_jsonFactory.createParser(content));\n    }",
        "distance": 1.25,
        "title": null,
        "name": "createParser",
        "documentation": "/**\n     * Factory method for constructing properly initialized {@link JsonParser}\n     * to read content from specified byte array.\n     * Parser is not managed (or \"owned\") by ObjectMapper: caller is responsible\n     * for properly closing it once content reading is complete.\n     *\n     * @since 2.11\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "createParser"
          }
        ],
        "similarity": 0.10307286656760806,
        "end_line": 1294,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.createParser(byte[] content): JsonParser"
      },
      {
        "start_line": 4210,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectReader readerForMapOf(Class<?> type) {\n        return _newReader(getDeserializationConfig(),\n                _typeFactory.constructMapType(Map.class, String.class, type), null,\n                null, _injectableValues);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "readerForMapOf",
        "documentation": "/**\n     * Factory method for constructing {@link ObjectReader} that will\n     * read or update instances of a type {@code Map<String, type>}\n     * Functionally same as:\n     *<pre>\n     *    readerFor(new TypeReference&lt;Map&lt;String, type&gt;&gt;() { });\n     *</pre>\n     *\n     * @since 2.11\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "readerForMapOf"
          }
        ],
        "similarity": 0.10272921263922515,
        "end_line": 4214,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.readerForMapOf(Class type): ObjectReader"
      }
    ],
    "classes": [],
    "issues": [
      {
        "content": "It's a valid use case that reuse the same configuration over different data formats\r\n```java\r\nObjectMapper jsonObjectMapper = new ObjectMapper();\r\n// do some configuration ...\r\nObjectMapper cborObjectMapper = jsonObjectMapper.copyWith(new SmileFactory());\r\n```\r\nSpring Boot configuration take affect only json format, this will make it possible to all format, for example\r\n```java\r\n @Bean \r\n @ConditionalOnMissingBean(value = MappingJackson2CborHttpMessageConverter.class) \r\n// other conditions\r\n MappingJackson2CborHttpMessageConverter mappingJackson2CborHttpMessageConverter(ObjectMapper objectMapper) { \r\n \treturn new MappingJackson2CborHttpMessageConverter(objectMapper.copyWith(new CBORFactory())); \r\n } \r\n```\r\nhttps://github.com/spring-projects/spring-boot/issues/27319#issuecomment-879760468\n",
        "distance": 0,
        "title": "Add method `ObjectMapper.copyWith(JsonFactory)`",
        "name": "root",
        "path": [],
        "issue_id": "root",
        "similarity": 2.0,
        "type": "issue"
      },
      {
        "start_line": null,
        "file_path": null,
        "issue_id": "3626",
        "type": "issue",
        "content": "Not sure about this implementation. Some feedback would be appreciated until I have time to work on it again soon.\n\n",
        "source_code": null,
        "distance": 0.25,
        "title": "Implementation for \"Provide method ObjectMapper.copyWith(JsonFactory)\" Closes  #3212",
        "name": "pr#3626",
        "documentation": null,
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "pr#3626"
          }
        ],
        "similarity": 0.6012602293940204,
        "end_line": null,
        "signature": null
      },
      {
        "start_line": null,
        "file_path": null,
        "issue_id": "3212",
        "type": "issue",
        "content": "It's a valid use case that reuse the same configuration over different data formats\r\n```java\r\nObjectMapper jsonObjectMapper = new ObjectMapper();\r\n// do some configuration ...\r\nObjectMapper cborObjectMapper = jsonObjectMapper.copyWith(new SmileFactory());\r\n```\r\nSpring Boot configuration take affect only json format, this will make it possible to all format, for example\r\n```java\r\n @Bean \r\n @ConditionalOnMissingBean(value = MappingJackson2CborHttpMessageConverter.class) \r\n// other conditions\r\n MappingJackson2CborHttpMessageConverter mappingJackson2CborHttpMessageConverter(ObjectMapper objectMapper) { \r\n \treturn new MappingJackson2CborHttpMessageConverter(objectMapper.copyWith(new CBORFactory())); \r\n } \r\n```\r\nhttps://github.com/spring-projects/spring-boot/issues/27319#issuecomment-879760468\n\n\nComment by cowtowncoder:\nI can see how this could be useful. I thought I had filed an issue like this before.\r\n\r\n\n\nComment by cowtowncoder:\nI think #2722 is what I had in mind. Although TBH, that is for builders; \"copy\" methods are only available on 2.x.\r\nSo I guess these are separate.\r\n",
        "source_code": null,
        "distance": 0.75,
        "title": "Add method `ObjectMapper.copyWith(JsonFactory)`",
        "name": "issue#3212",
        "documentation": null,
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "pr#3626"
          },
          {
            "start_node": "pr#3626",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "issue#3212"
          }
        ],
        "similarity": 0.6005968255714742,
        "end_line": null,
        "signature": null
      },
      {
        "start_line": null,
        "file_path": null,
        "issue_id": "2722",
        "type": "issue",
        "content": "(note: continuation from https://github.com/FasterXML/jackson-dataformats-binary/issues/205)\r\n\r\nSometimes it would be valuable to be able to construct `ObjectMapper` types with different backing format: for example, based on `JsonMapper`, create a `SmileMapper` using shared applicable format-agnostic configurations. Currently there is no way to do that, since `TokenStreamFactory` can not be changed either for `ObjectMapper` (fully immutable since 3.0, but not changeable even in 2.x), or for `ObjectMapper.Builder` (which is constructed passing one).\r\n\r\nBut it seems possible to allow use of\r\n\r\n    ObjectMapper.rebuildWith(TokenStreamFactory)\r\n\r\nwhich could then copy subset of configuration that is shared between `ObjectMapper`, dropping format-specific configuration.\r\n\r\n\r\n\n\n\nComment by cowtowncoder:\nCome to think of this, I think we can have parallel effort for 2.x, whereupon one can\r\n\r\n1. Start build process with setting of another `ObjectMapper` (to copy settings)\r\n2. Allow `new SmileMapper(ObjectMapper src)` as well.\r\n\r\nAs to 3.0, I suspect idea of `rebuildWith(TokenStreamFactory)` wouldn't work, but it'd rather have to be something like\r\n\r\n    SmileMapper.builder(TokenStreamFactory, ObjectMapper)\r\n\r\n\r\n\r\n",
        "source_code": null,
        "distance": 1.25,
        "title": "Allow construction of \"format-bending\" `ObjectMapper.Builder`s?",
        "name": "issue#2722",
        "documentation": null,
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "pr#3626"
          },
          {
            "start_node": "pr#3626",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "issue#3212"
          },
          {
            "start_node": "issue#3212",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "issue#2722"
          }
        ],
        "similarity": 0.34390682611112416,
        "end_line": null,
        "signature": null
      },
      {
        "start_line": null,
        "file_path": null,
        "issue_id": "205",
        "type": "issue",
        "content": "(note: similar to #194 and #196)\n\nAs per the other issue, support for primitive types like 'short' helps with non-JSON backends, and specifically binary types.\n\nIt requires changes in jackson-core as well as NumerType.SHORT is not yet defined.\n\n\n\nComment by msteiger:\nDone in commit 56ecb7e4840dab20b04df0bb60ee98c92bfe9b29\n\nI will issue a Pull Request once I'm done testing. Did I forget something?\n\n\nComment by beamerblvd:\n+1\n\n\nComment by cowtowncoder:\nI will need a CLA from you unless we have received one already, that is all.\n\nOne problem however: I will not be adding NumberType.SHORT, as that is too big of a change to APIs and would require changes to many extension modules (on switch statements that operation on NumberType). So determination needs to be based on value ranges within basic 32-bit int instead.\n\n\nComment by msteiger:\nOk - I will update it accordingly.\n\nRegarding the CLA: do you support electronic signing such as www.clahub.com ?\n\n\nComment by cowtowncoder:\nThanks!\n\nI wasn't aware of clahub, so we don't yet. But seems like something to consider for future? I just need to discuss this with @prb \n\n\nComment by cowtowncoder:\nHmmh. Looks like github does not allow attaching pdfs (tried to attach to this issue). So can you send an email to 'info' at fasterxml.com, and I can send you CLA to fill.\n\n\nComment by cowtowncoder:\nFixed as per #207.\n",
        "source_code": null,
        "distance": 1.0,
        "title": "Support primitive \"short\"",
        "name": "issue#205",
        "documentation": null,
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "pr#3626"
          },
          {
            "start_node": "pr#3626",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "issue#3212"
          },
          {
            "start_node": "issue#3212",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "issue#205"
          }
        ],
        "similarity": 0.12288922503612051,
        "end_line": null,
        "signature": null
      }
    ]
  },
  "artifact_stats": {
    "skipped_due_to_time": 8,
    "valid_related_items": 24
  }
}