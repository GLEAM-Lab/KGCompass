{
  "related_entities": {
    "methods": [
      {
        "start_line": 602,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper() {\n        this(null, null, null);\n    }",
        "distance": 1.0,
        "title": null,
        "name": "ObjectMapper",
        "documentation": "/**\n     * Default constructor, which will construct the default\n     * {@link JsonFactory} as necessary, use\n     * {@link SerializerProvider} as its\n     * {@link SerializerProvider}, and\n     * {@link BeanSerializerFactory} as its\n     * {@link SerializerFactory}.\n     * This means that it\n     * can serialize all standard JDK types, as well as regular\n     * Java Beans (based on method names and Jackson-specific annotations),\n     * but does not support JAXB annotations.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          }
        ],
        "similarity": 0.08079085149645239,
        "end_line": 604,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper()"
      },
      {
        "start_line": 1898,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setDefaultMergeable(Boolean b) {\n        _configOverrides.setDefaultMergeable(b);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setDefaultMergeable",
        "documentation": "/**\n     * Method for setting default Setter configuration, regarding things like\n     * merging, null-handling; used for properties for which there are\n     * no per-type or per-property overrides (via annotations or config overrides).\n     *\n     * @since 2.9\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setDefaultMergeable"
          }
        ],
        "similarity": 0.0782936206447879,
        "end_line": 1901,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setDefaultMergeable(Boolean b): ObjectMapper"
      },
      {
        "start_line": 1873,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setDefaultSetterInfo(JsonSetter.Value v) {\n        _configOverrides.setDefaultSetterInfo(v);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setDefaultSetterInfo",
        "documentation": "/**\n     * Method for setting default Setter configuration, regarding things like\n     * merging, null-handling; used for properties for which there are\n     * no per-type or per-property overrides (via annotations or config overrides).\n     *\n     * @since 2.9\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setDefaultSetterInfo"
          }
        ],
        "similarity": 0.07810286671394233,
        "end_line": 1876,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setDefaultSetterInfo(JsonSetter v): ObjectMapper"
      },
      {
        "start_line": 30,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/exc/InvalidNullException.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected InvalidNullException(DeserializationContext ctxt, String msg,",
        "distance": 1.0,
        "title": null,
        "name": "InvalidNullException",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "InvalidNullException"
          }
        ],
        "similarity": 0.07484073058644249,
        "end_line": 30,
        "signature": "com.fasterxml.jackson.databind.exc.InvalidNullException(DeserializationContext ctxt, String msg, PropertyName pname)"
      },
      {
        "start_line": 611,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper(JsonFactory jf) {\n        this(jf, null, null);\n    }",
        "distance": 1.0,
        "title": null,
        "name": "ObjectMapper",
        "documentation": "/**\n     * Constructs instance that uses specified {@link JsonFactory}\n     * for constructing necessary {@link JsonParser}s and/or\n     * {@link JsonGenerator}s.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          }
        ],
        "similarity": 0.07299720087711778,
        "end_line": 613,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper(JsonFactory jf)"
      },
      {
        "start_line": 172,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "        public final T getNullValue(DeserializationContext ctxt) throws JsonMappingException {\n            // 01-Mar-2017, tatu: Alas, not all paths lead to `_coerceNull()`, as `SettableBeanProperty`\n            //    short-circuits `null` handling. Hence need this check as well.\n            if (_primitive && ctxt.isEnabled(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES)) {\n                ctxt.reportInputMismatch(this,\n                        \"Cannot map `null` into type %s (set DeserializationConfig.DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES to 'false' to allow)\",\n                        ClassUtil.classNameOf(handledType()));\n            }\n            return _nullValue;\n        }",
        "distance": 2.25,
        "title": null,
        "name": "getNullValue",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "_readMapAndClose"
          },
          {
            "start_node": "_readMapAndClose",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "getNullValue"
          }
        ],
        "similarity": 0.07276119065583814,
        "end_line": 181,
        "signature": "com.fasterxml.jackson.databind.deser.std.NumberDeserializers.PrimitiveOrWrapperDeserializer.getNullValue(DeserializationContext ctxt): T"
      },
      {
        "start_line": 630,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected ObjectMapper(ObjectMapper src, JsonFactory factory)",
        "distance": 1.0,
        "title": null,
        "name": "ObjectMapper",
        "documentation": "/**\n     * Copy-constructor, mostly used to support {@link #copyWith(JsonFactory)}.\n     * @since 2.14\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          }
        ],
        "similarity": 0.07227071908200872,
        "end_line": 630,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper(ObjectMapper src, JsonFactory factory)"
      },
      {
        "start_line": 2304,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setConstructorDetector(ConstructorDetector cd) {\n        _deserializationConfig = _deserializationConfig.with(cd);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setConstructorDetector",
        "documentation": "/**\n     * Method for specifying {@link ConstructorDetector} to use for\n     * determining some aspects of creator auto-detection (specifically\n     * auto-detection of constructor, and in particular behavior with\n     * single-argument constructors).\n     *\n     * @since 2.12\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setConstructorDetector"
          }
        ],
        "similarity": 0.07215746935884593,
        "end_line": 2307,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setConstructorDetector(ConstructorDetector cd): ObjectMapper"
      },
      {
        "start_line": 2291,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setNodeFactory(JsonNodeFactory f) {\n        _deserializationConfig = _deserializationConfig.with(f);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setNodeFactory",
        "documentation": "/**\n     * Method for specifying {@link JsonNodeFactory} to use for\n     * constructing root level tree nodes (via method\n     * {@link #createObjectNode}\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setNodeFactory"
          }
        ],
        "similarity": 0.07206771183351982,
        "end_line": 2294,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setNodeFactory(JsonNodeFactory f): ObjectMapper"
      },
      {
        "start_line": 2012,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper activateDefaultTyping(PolymorphicTypeValidator ptv,",
        "distance": 1.25,
        "title": null,
        "name": "activateDefaultTyping",
        "documentation": "/**\n     * Method for enabling automatic inclusion of type information (\"Default Typing\"),\n     * needed for proper deserialization of polymorphic types (unless types\n     * have been annotated with {@link com.fasterxml.jackson.annotation.JsonTypeInfo}).\n     *<P>\n     * NOTE: use of {@code JsonTypeInfo.As#EXTERNAL_PROPERTY} <b>NOT SUPPORTED</b>;\n     * and attempts of do so will throw an {@link IllegalArgumentException} to make\n     * this limitation explicit.\n     *<p>\n     * NOTE: choice of {@link PolymorphicTypeValidator} to pass is critical for security\n     * as allowing all subtypes can be risky for untrusted content.\n     *\n     * @param ptv Validator used to verify that actual subtypes to deserialize are valid against\n     *    whatever criteria validator uses: important in case where untrusted content is deserialized.\n     * @param applicability Defines kinds of types for which additional type information\n     *    is added; see {@link DefaultTyping} for more information.\n     * @param includeAs\n     *\n     * @since 2.10\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "activateDefaultTyping"
          }
        ],
        "similarity": 0.07201934485961994,
        "end_line": 2012,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTyping(PolymorphicTypeValidator ptv, DefaultTyping applicability, JsonTypeInfo includeAs): ObjectMapper"
      },
      {
        "start_line": 2087,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setDefaultTyping(TypeResolverBuilder<?> typer) {\n        _deserializationConfig = _deserializationConfig.with(typer);\n        _serializationConfig = _serializationConfig.with(typer);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setDefaultTyping",
        "documentation": "/**\n     * Method for enabling automatic inclusion of type information (\"Default Typing\"),\n     * using specified handler object for determining which types this affects,\n     * as well as details of how information is embedded.\n     *<p>\n     * NOTE: use of Default Typing can be a potential security risk if incoming\n     * content comes from untrusted sources, so care should be taken to use\n     * a {@link TypeResolverBuilder} that can limit allowed classes to\n     * deserialize. Note in particular that\n     * {@link com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder}\n     * DOES NOT limit applicability but creates type (de)serializers for all\n     * types.\n     *\n     * @param typer Type information inclusion handler\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setDefaultTyping"
          }
        ],
        "similarity": 0.07179419603043119,
        "end_line": 2091,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setDefaultTyping(TypeResolverBuilder typer): ObjectMapper"
      },
      {
        "start_line": 688,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    private DeserializationConfig _withoutJsonReadFeatures(FormatFeature... features) {\n        int parserSet = _parserFeatures;\n        int parserMask = _parserFeaturesToChange;\n        int newSet = _formatReadFeatures;\n        int newMask = _formatReadFeaturesToChange;\n        for (FormatFeature f : features) {\n            final int mask = f.getMask();\n            newSet &= ~mask;\n            newMask |= mask;\n\n            if (f instanceof JsonReadFeature) {\n                JsonParser.Feature oldF = ((JsonReadFeature) f).mappedFeature();\n                if (oldF != null) {\n                    final int pmask = oldF.getMask();\n                    parserSet &= ~pmask;\n                    parserMask |= pmask;\n                }\n            }\n        }\n        return ((_formatReadFeatures == newSet) && (_formatReadFeaturesToChange == newMask)\n                && (_parserFeatures == parserSet) && (_parserFeaturesToChange == parserMask)\n                ) ? this :\n            new DeserializationConfig(this,  _mapperFeatures, _deserFeatures,\n                    parserSet, parserMask, newSet, newMask);\n    }",
        "distance": 2.5,
        "title": null,
        "name": "_withoutJsonReadFeatures",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "DeserializationConfig"
          },
          {
            "start_node": "DeserializationConfig",
            "description": "contained in method",
            "type": "RELATED",
            "end_node": "DeserializationConfig"
          },
          {
            "start_node": "DeserializationConfig",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "_withoutJsonReadFeatures"
          }
        ],
        "similarity": 0.07169253712294774,
        "end_line": 712,
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig._withoutJsonReadFeatures(FormatFeature features): DeserializationConfig"
      },
      {
        "start_line": 2569,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper configure(MapperFeature f, boolean state) {\n        _serializationConfig = state ?\n                _serializationConfig.with(f) : _serializationConfig.without(f);\n        _deserializationConfig = state ?\n                _deserializationConfig.with(f) : _deserializationConfig.without(f);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "configure",
        "documentation": "/**\n     * @deprecated Since 2.13 use {@code JsonMapper.builder().configure(...)}\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "configure"
          }
        ],
        "similarity": 0.0716694264029452,
        "end_line": 2575,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.configure(MapperFeature f, boolean state): ObjectMapper"
      },
      {
        "start_line": 2341,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper clearProblemHandlers() {\n        _deserializationConfig = _deserializationConfig.withNoProblemHandlers();\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "clearProblemHandlers",
        "documentation": "/**\n     * Method for removing all registered {@link DeserializationProblemHandler}s\n     * instances from this mapper.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "clearProblemHandlers"
          }
        ],
        "similarity": 0.07147689582354706,
        "end_line": 2344,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.clearProblemHandlers(): ObjectMapper"
      },
      {
        "start_line": 2003,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public JsonMappingException instantiationException(Class<?> instClass, Throwable cause) {\n        String excMsg;\n        if (cause == null) {\n            excMsg = \"N/A\";\n        } else if ((excMsg = ClassUtil.exceptionMessage(cause)) == null) {\n            excMsg = ClassUtil.nameOf(cause.getClass());\n        }\n        String msg = String.format(\"Cannot construct instance of %s, problem: %s\",\n                ClassUtil.nameOf(instClass), excMsg);\n        // [databind#2162]: use specific exception type as we don't know if it's\n        // due to type definition, input, or neither\n        return ValueInstantiationException.from(_parser, msg, constructType(instClass), cause);\n    }",
        "distance": 1.5,
        "title": null,
        "name": "instantiationException",
        "documentation": "/**\n     * Helper method for constructing instantiation exception for specified type,\n     * to indicate problem with physically constructing instance of\n     * specified class (missing constructor, exception from constructor)\n     *<p>\n     * Note that most of the time this method should NOT be called directly; instead,\n     * {@link #handleInstantiationProblem} should be called which will call this method\n     * if necessary.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "readValue"
          },
          {
            "start_node": "readValue",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "DeserializationContext"
          },
          {
            "start_node": "DeserializationContext",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "instantiationException"
          }
        ],
        "similarity": 0.07142159895415069,
        "end_line": 2015,
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.instantiationException(Class instClass, Throwable cause): JsonMappingException"
      },
      {
        "start_line": 264,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectReader.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected ObjectReader(ObjectReader base, TokenFilter filter) {\n        _config = base._config;\n        _context = base._context;\n        _rootDeserializers = base._rootDeserializers;\n        _parserFactory = base._parserFactory;\n        _valueType = base._valueType;\n        _rootDeserializer = base._rootDeserializer;\n        _valueToUpdate = base._valueToUpdate;\n        _schema = base._schema;\n        _injectableValues = base._injectableValues;\n        _unwrapRoot = base._unwrapRoot;\n        _dataFormatReaders = base._dataFormatReaders;\n        _filter = filter;\n    }",
        "distance": 1.5,
        "title": null,
        "name": "ObjectReader",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "readValue"
          },
          {
            "start_node": "readValue",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "ObjectReader"
          },
          {
            "start_node": "ObjectReader",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "ObjectReader"
          }
        ],
        "similarity": 0.07105740720490936,
        "end_line": 277,
        "signature": "com.fasterxml.jackson.databind.ObjectReader(ObjectReader base, TokenFilter filter)"
      },
      {
        "start_line": 1886,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setDefaultVisibility(JsonAutoDetect.Value vis) {\n        _configOverrides.setDefaultVisibility(VisibilityChecker.Std.construct(vis));\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setDefaultVisibility",
        "documentation": "/**\n     * Method for setting auto-detection visibility definition\n     * defaults, which are in effect unless overridden by\n     * annotations (like <code>JsonAutoDetect</code>) or per-type\n     * visibility overrides.\n     *\n     * @since 2.9\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setDefaultVisibility"
          }
        ],
        "similarity": 0.07078436727987145,
        "end_line": 1889,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setDefaultVisibility(JsonAutoDetect vis): ObjectMapper"
      },
      {
        "start_line": 2591,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper disable(MapperFeature... f) {\n        _deserializationConfig = _deserializationConfig.without(f);\n        _serializationConfig = _serializationConfig.without(f);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "disable",
        "documentation": "/**\n     * @deprecated Since 2.13 use {@code JsonMapper.builder().disable(...)}\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          }
        ],
        "similarity": 0.07066514758427515,
        "end_line": 2595,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.disable(MapperFeature f): ObjectMapper"
      },
      {
        "start_line": 3432,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public JsonNode nullNode() {\n        return _deserializationConfig.getNodeFactory().nullNode();\n    }",
        "distance": 1.25,
        "title": null,
        "name": "nullNode",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "nullNode"
          }
        ],
        "similarity": 0.07063218095300532,
        "end_line": 3434,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.nullNode(): JsonNode"
      },
      {
        "start_line": 2318,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setCacheProvider(CacheProvider cacheProvider) {\n        _assertNotNull(\"cacheProvider\", cacheProvider);\n        _deserializationConfig = _deserializationConfig.with(cacheProvider);\n        _serializationConfig = _serializationConfig.with(cacheProvider);\n        _deserializationContext = _deserializationContext.withCaches(cacheProvider);\n        _serializerProvider = _serializerProvider.withCaches(cacheProvider);\n        _typeFactory = _typeFactory.withCache(cacheProvider.forTypeFactory());\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setCacheProvider",
        "documentation": "/**\n     * Method for specifying {@link CacheProvider} instance, to provide Cache instances to be used in components downstream.\n     *\n     * @cacheProvider Cache provider for this mapper to use\n     *\n     * @throws IllegalArgumentException if given provider is null\n     *\n     * @since 2.16\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setCacheProvider"
          }
        ],
        "similarity": 0.07043076385612364,
        "end_line": 2326,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setCacheProvider(CacheProvider cacheProvider): ObjectMapper"
      },
      {
        "start_line": 2185,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public MutableCoercionConfig coercionConfigDefaults() {\n        return _coercionConfigs.defaultCoercions();\n    }",
        "distance": 1.25,
        "title": null,
        "name": "coercionConfigDefaults",
        "documentation": "/**\n     * Accessor for {@link MutableCoercionConfig} through which\n     * default (fallback) coercion configurations can be changed.\n     * Note that such settings are only applied if more specific\n     * (by logical and physical type) configuration have\n     * not been defined.\n     * <p>\n     * NOTE: Preferred access method and point is through {@code Builder} style\n     * construction, see {@link com.fasterxml.jackson.databind.json.JsonMapper.Builder}\n     * and {@link MapperBuilder#withCoercionConfigDefaults(Consumer)}.\n     *\n     * @since 2.12\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "coercionConfigDefaults"
          }
        ],
        "similarity": 0.07007426951790408,
        "end_line": 2187,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.coercionConfigDefaults(): MutableCoercionConfig"
      },
      {
        "start_line": 2808,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper configure(DatatypeFeature f, boolean state) {\n        if (state) {\n            _deserializationConfig = _deserializationConfig.with(f);\n            _serializationConfig = _serializationConfig.with(f);\n        } else {\n            _deserializationConfig = _deserializationConfig.without(f);\n            _serializationConfig = _serializationConfig.without(f);\n        }\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "configure",
        "documentation": "/**\n     * Method for changing state of an on/off datatype-specific feature for\n     * this object mapper.\n     * <p>\n     * Note: Changing the configuration of this {@link ObjectMapper} instance after its first use (read &amp; write) is\n     * not safe and should not be attempted. Instead, use {@code with()} and {@code without()} methods of\n     * {@link ObjectReader}/{@link ObjectWriter} which fully support reconfiguration as new instances are constructed.\n     * <p>\n     * <strong>This method will be removed in Jackson 3.0 due to unsafe usage.\n     * Configure using {@link MapperBuilder#configure(DatatypeFeature, boolean)} instead.</strong>\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "configure"
          }
        ],
        "similarity": 0.07004780596023055,
        "end_line": 2817,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.configure(DatatypeFeature f, boolean state): ObjectMapper"
      },
      {
        "start_line": 2360,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setConfig(DeserializationConfig config) {\n        _assertNotNull(\"config\", config);\n        _deserializationConfig = config;\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setConfig",
        "documentation": "/**\n     * Method that allows overriding of the underlying {@link DeserializationConfig}\n     * object.\n     * It is added as a fallback method that may be used if no other configuration\n     * modifier method works: it should not be used if there are alternatives,\n     * and its use is generally discouraged.\n     *<p>\n     * <b>NOTE</b>: only use this method if you know what you are doing -- it allows\n     * by-passing some of checks applied to other configuration methods.\n     * Also keep in mind that as with all configuration of {@link ObjectMapper},\n     * this is only thread-safe if done before calling any deserialization methods.\n     *\n     * @since 2.4\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setConfig"
          }
        ],
        "similarity": 0.06982350959167971,
        "end_line": 2364,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setConfig(DeserializationConfig config): ObjectMapper"
      },
      {
        "start_line": 2068,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper deactivateDefaultTyping() {\n        return setDefaultTyping(null);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "deactivateDefaultTyping",
        "documentation": "/**\n     * Method for disabling automatic inclusion of type information; if so, only\n     * explicitly annotated types (ones with\n     * {@link com.fasterxml.jackson.annotation.JsonTypeInfo}) will have\n     * additional embedded type information.\n     *\n     * @since 2.10\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "deactivateDefaultTyping"
          }
        ],
        "similarity": 0.06942944005449,
        "end_line": 2070,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.deactivateDefaultTyping(): ObjectMapper"
      },
      {
        "start_line": 2048,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper activateDefaultTypingAsProperty(PolymorphicTypeValidator ptv,",
        "distance": 1.25,
        "title": null,
        "name": "activateDefaultTypingAsProperty",
        "documentation": "/**\n     * Method for enabling automatic inclusion of type information (\"Default Typing\")\n     * -- needed for proper deserialization of polymorphic types (unless types\n     * have been annotated with {@link com.fasterxml.jackson.annotation.JsonTypeInfo}) --\n     * using \"As.PROPERTY\" inclusion mechanism and specified property name\n     * to use for inclusion (default being \"@class\" since default type information\n     * always uses class name as type identifier)\n     *<p>\n     * NOTE: choice of {@link PolymorphicTypeValidator} to pass is critical for security\n     * as allowing all subtypes can be risky for untrusted content.\n     *\n     * @param ptv Validator used to verify that actual subtypes to deserialize are valid against\n     *    whatever criteria validator uses: important in case where untrusted content is deserialized.\n     * @param applicability Defines kinds of types for which additional type information\n     *    is added; see {@link DefaultTyping} for more information.\n     * @param propertyName Name of property used for including type id for polymorphic values.\n     *\n     * @since 2.10\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "activateDefaultTypingAsProperty"
          }
        ],
        "similarity": 0.06856219269309237,
        "end_line": 2048,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTypingAsProperty(PolymorphicTypeValidator ptv, DefaultTyping applicability, String propertyName): ObjectMapper"
      },
      {
        "start_line": 2026,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public JsonMappingException instantiationException(Class<?> instClass, String msg0) {\n        // [databind#2162]: use specific exception type as we don't know if it's\n        // due to type definition, input, or neither\n        return ValueInstantiationException.from(_parser,\n                String.format(\"Cannot construct instance of %s: %s\",\n                        ClassUtil.nameOf(instClass), msg0),\n                constructType(instClass));\n    }",
        "distance": 1.5,
        "title": null,
        "name": "instantiationException",
        "documentation": "/**\n     * Helper method for constructing instantiation exception for specified type,\n     * to indicate that instantiation failed due to missing instantiator\n     * (creator; constructor or factory method).\n     *<p>\n     * Note that most of the time this method should NOT be called; instead,\n     * {@link #handleMissingInstantiator} should be called which will call this method\n     * if necessary.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "readValue"
          },
          {
            "start_node": "readValue",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "DeserializationContext"
          },
          {
            "start_node": "DeserializationContext",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "instantiationException"
          }
        ],
        "similarity": 0.06842328559685179,
        "end_line": 2033,
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.instantiationException(Class instClass, String msg0): JsonMappingException"
      },
      {
        "start_line": 612,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public boolean hasValueDeserializerFor(JavaType type, AtomicReference<Throwable> cause) {\n        try {\n            return _cache.hasValueDeserializerFor(this, _factory, type);\n        } catch (DatabindException e) {\n            if (cause != null) {\n                cause.set(e);\n            }\n        } catch (RuntimeException e) {\n            if (cause == null) { // earlier behavior\n                throw e;\n            }\n            cause.set(e);\n        }\n        return false;\n    }",
        "distance": 1.5,
        "title": null,
        "name": "hasValueDeserializerFor",
        "documentation": "/**\n     * Method for checking whether we could find a deserializer\n     * for given type.\n     *\n     * @param type Type to check\n     * @param cause (optional) Reference set to root cause if no deserializer\n     *    could be found due to exception (to find the reason for failure)\n     *\n     * @since 2.3\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "readValue"
          },
          {
            "start_node": "readValue",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "DeserializationContext"
          },
          {
            "start_node": "DeserializationContext",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "hasValueDeserializerFor"
          }
        ],
        "similarity": 0.06831651604738923,
        "end_line": 626,
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.hasValueDeserializerFor(JavaType type, AtomicReference cause): boolean"
      },
      {
        "start_line": 661,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    private DeserializationConfig _withJsonReadFeatures(FormatFeature... features) {\n        int parserSet = _parserFeatures;\n        int parserMask = _parserFeaturesToChange;\n        int newSet = _formatReadFeatures;\n        int newMask = _formatReadFeaturesToChange;\n        for (FormatFeature f : features) {\n            final int mask = f.getMask();\n            newSet |= mask;\n            newMask |= mask;\n\n            if (f instanceof JsonReadFeature) {\n                JsonParser.Feature oldF = ((JsonReadFeature) f).mappedFeature();\n                if (oldF != null) {\n                    final int pmask = oldF.getMask();\n                    parserSet |= pmask;\n                    parserMask |= pmask;\n                }\n            }\n        }\n        return ((_formatReadFeatures == newSet) && (_formatReadFeaturesToChange == newMask)\n                && (_parserFeatures == parserSet) && (_parserFeaturesToChange == parserMask)\n                ) ? this :\n            new DeserializationConfig(this,  _mapperFeatures, _deserFeatures,\n                    parserSet, parserMask, newSet, newMask);\n    }",
        "distance": 2.5,
        "title": null,
        "name": "_withJsonReadFeatures",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "calls method",
            "type": "RELATED",
            "end_node": "DeserializationConfig"
          },
          {
            "start_node": "DeserializationConfig",
            "description": "contained in method",
            "type": "RELATED",
            "end_node": "DeserializationConfig"
          },
          {
            "start_node": "DeserializationConfig",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "_withJsonReadFeatures"
          }
        ],
        "similarity": 0.06820859311711669,
        "end_line": 685,
        "signature": "com.fasterxml.jackson.databind.DeserializationConfig._withJsonReadFeatures(FormatFeature features): DeserializationConfig"
      },
      {
        "start_line": 986,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public <T> T readValue(JsonParser p, JavaType type) throws IOException {\n        JsonDeserializer<Object> deser = findRootValueDeserializer(type);\n        if (deser == null) {\n            return reportBadDefinition(type,\n                    \"Could not find JsonDeserializer for type \"+ClassUtil.getTypeDescription(type));\n        }\n        return (T) deser.deserialize(p, this);\n    }",
        "distance": 1.0,
        "title": null,
        "name": "readValue",
        "documentation": "/**\n     * @since 2.4\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "readValue"
          }
        ],
        "similarity": 0.06801607254831636,
        "end_line": 993,
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.readValue(JsonParser p, JavaType type): T"
      },
      {
        "start_line": 1477,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setSerializerFactory(SerializerFactory f) {\n        _serializerFactory = f;\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setSerializerFactory",
        "documentation": "/**\n     * Method for setting specific {@link SerializerFactory} to use\n     * for constructing (bean) serializers.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setSerializerFactory"
          }
        ],
        "similarity": 0.06790494531082597,
        "end_line": 1480,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setSerializerFactory(SerializerFactory f): ObjectMapper"
      },
      {
        "start_line": 4323,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectReader readerForUpdating(Object valueToUpdate) {\n        JavaType t = (valueToUpdate == null) ? null\n                : _typeFactory.constructType(valueToUpdate.getClass());\n        return _newReader(getDeserializationConfig(), t, valueToUpdate,\n                null, _injectableValues);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "readerForUpdating",
        "documentation": "/**\n     * Factory method for constructing {@link ObjectReader} that will\n     * update given Object (usually Bean, but can be a Collection or Map\n     * as well, but NOT an array) with JSON data. Deserialization occurs\n     * normally except that the root-level value in JSON is not used for\n     * instantiating a new object; instead give updateable object is used\n     * as root.\n     * Runtime type of value object is used for locating deserializer,\n     * unless overridden by other factory methods of {@link ObjectReader}\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "readerForUpdating"
          }
        ],
        "similarity": 0.06786472619669043,
        "end_line": 4328,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.readerForUpdating(Object valueToUpdate): ObjectReader"
      },
      {
        "start_line": 1757,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setAccessorNaming(AccessorNamingStrategy.Provider s) {\n        _serializationConfig = _serializationConfig.with(s);\n        _deserializationConfig = _deserializationConfig.with(s);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setAccessorNaming",
        "documentation": "/**\n     * Method for setting custom accessor naming strategy to use.\n     *\n     * @since 2.12\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setAccessorNaming"
          }
        ],
        "similarity": 0.06784375397454653,
        "end_line": 1761,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setAccessorNaming(AccessorNamingStrategy s): ObjectMapper"
      },
      {
        "start_line": 1498,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setSerializerProvider(DefaultSerializerProvider p) {\n        _serializerProvider = p;\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setSerializerProvider",
        "documentation": "/**\n     * Method for setting \"blueprint\" {@link SerializerProvider} instance\n     * to use as the base for actual provider instances to use for handling\n     * caching of {@link JsonSerializer} instances.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setSerializerProvider"
          }
        ],
        "similarity": 0.06768457408748552,
        "end_line": 1501,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setSerializerProvider(DefaultSerializerProvider p): ObjectMapper"
      },
      {
        "start_line": 693,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectReader.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectReader with(JsonFactory f) {\n        if (f == _parserFactory) {\n            return this;\n        }\n        ObjectReader r = _new(this, f);\n        // Also, try re-linking, if possible...\n        if (f.getCodec() == null) {\n            f.setCodec(r);\n        }\n        return r;\n    }",
        "distance": 1.5,
        "title": null,
        "name": "with",
        "documentation": "/**\n     * Method for constructing a new reader instance with configuration that uses\n     * passed {@link JsonFactory} for constructing underlying Readers.\n     *<p>\n     * NOTE: only factories that <b>DO NOT REQUIRE SPECIAL MAPPERS</b>\n     * (that is, ones that return <code>false</code> for\n     * {@link JsonFactory#requiresCustomCodec()}) can be used: trying\n     * to use one that requires custom codec will throw exception\n     *\n     * @since 2.1\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "readValue"
          },
          {
            "start_node": "readValue",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "ObjectReader"
          },
          {
            "start_node": "ObjectReader",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "with"
          }
        ],
        "similarity": 0.06761021165911373,
        "end_line": 703,
        "signature": "com.fasterxml.jackson.databind.ObjectReader.with(JsonFactory f): ObjectReader"
      },
      {
        "start_line": 674,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper(JsonFactory jf,",
        "distance": 1.0,
        "title": null,
        "name": "ObjectMapper",
        "documentation": "/**\n     * Constructs instance that uses specified {@link JsonFactory}\n     * for constructing necessary {@link JsonParser}s and/or\n     * {@link JsonGenerator}s, and uses given providers for accessing\n     * serializers and deserializers.\n     *\n     * @param jf JsonFactory to use: if null, a new {@link MappingJsonFactory} will be constructed\n     * @param sp SerializerProvider to use: if null, a {@link SerializerProvider} will be constructed\n     * @param dc Blueprint deserialization context instance to use for creating\n     *    actual context objects; if null, will construct standard\n     *    {@link DeserializationContext}\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          }
        ],
        "similarity": 0.06724475656479653,
        "end_line": 674,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper(JsonFactory jf, DefaultSerializerProvider sp, DefaultDeserializationContext dc)"
      },
      {
        "start_line": 3427,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public JsonNode missingNode() {\n        return _deserializationConfig.getNodeFactory().missingNode();\n    }",
        "distance": 1.25,
        "title": null,
        "name": "missingNode",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "missingNode"
          }
        ],
        "similarity": 0.0667762421852935,
        "end_line": 3429,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.missingNode(): JsonNode"
      },
      {
        "start_line": 5000,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected final void _verifyNoTrailingTokens(JsonParser p, DeserializationContext ctxt,",
        "distance": 1.25,
        "title": null,
        "name": "_verifyNoTrailingTokens",
        "documentation": "/**\n     * @since 2.9\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "_verifyNoTrailingTokens"
          }
        ],
        "similarity": 0.06665519808198841,
        "end_line": 5000,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper._verifyNoTrailingTokens(JsonParser p, DeserializationContext ctxt, JavaType bindType): void"
      },
      {
        "start_line": 1335,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public Object handleMissingInstantiator(Class<?> instClass, ValueInstantiator valueInst,",
        "distance": 1.5,
        "title": null,
        "name": "handleMissingInstantiator",
        "documentation": "/**\n     * Method that deserializers should call if they fail to instantiate value\n     * due to lack of viable instantiator (usually creator, that is, constructor\n     * or static factory method). Method should be called at point where value\n     * has not been decoded, so that handler has a chance to handle decoding\n     * using alternate mechanism, and handle underlying content (possibly by\n     * just skipping it) to keep input state valid\n     *\n     * @param instClass Type that was to be instantiated\n     * @param valueInst (optional) Value instantiator to be used, if any; null if type does not\n     *    use one for instantiation (custom deserialiers don't; standard POJO deserializer does)\n     * @param p Parser that points to the JSON value to decode\n     *\n     * @return Object that should be constructed, if any; has to be of type <code>instClass</code>\n     *\n     * @since 2.9 (2.8 had alternate that did not take <code>ValueInstantiator</code>)\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "readValue"
          },
          {
            "start_node": "readValue",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "DeserializationContext"
          },
          {
            "start_node": "DeserializationContext",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "handleMissingInstantiator"
          }
        ],
        "similarity": 0.06661578285466338,
        "end_line": 1335,
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(Class instClass, ValueInstantiator valueInst, JsonParser p, String msg, Object msgArgs): Object"
      },
      {
        "start_line": 998,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectReader.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected ObjectReader _with(DeserializationConfig newConfig) {\n        if (newConfig == _config) {\n            return this;\n        }\n        ObjectReader r = _new(this, newConfig);\n        if (_dataFormatReaders != null) {\n            r  = r.withFormatDetection(_dataFormatReaders.with(newConfig));\n        }\n        return r;\n    }",
        "distance": 1.5,
        "title": null,
        "name": "_with",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "readValue"
          },
          {
            "start_node": "readValue",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "ObjectReader"
          },
          {
            "start_node": "ObjectReader",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "_with"
          }
        ],
        "similarity": 0.06660850069999662,
        "end_line": 1007,
        "signature": "com.fasterxml.jackson.databind.ObjectReader._with(DeserializationConfig newConfig): ObjectReader"
      },
      {
        "start_line": 2119,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper enableDefaultTyping(DefaultTyping applicability, JsonTypeInfo.As includeAs) {\n        return activateDefaultTyping(getPolymorphicTypeValidator(), applicability, includeAs);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "enableDefaultTyping",
        "documentation": "/**\n     * @deprecated Since 2.10 use {@link #activateDefaultTyping(PolymorphicTypeValidator,DefaultTyping,JsonTypeInfo.As)} instead\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "enableDefaultTyping"
          }
        ],
        "similarity": 0.0664844616714601,
        "end_line": 2121,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.enableDefaultTyping(DefaultTyping applicability, JsonTypeInfo includeAs): ObjectMapper"
      },
      {
        "start_line": 1738,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setPropertyNamingStrategy(PropertyNamingStrategy s) {\n        _serializationConfig = _serializationConfig.with(s);\n        _deserializationConfig = _deserializationConfig.with(s);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setPropertyNamingStrategy",
        "documentation": "/**\n     * Method for setting custom property naming strategy to use.\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setPropertyNamingStrategy"
          }
        ],
        "similarity": 0.06639133160425612,
        "end_line": 1742,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setPropertyNamingStrategy(PropertyNamingStrategy s): ObjectMapper"
      },
      {
        "start_line": 940,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectReader.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectReader withFormatDetection(ObjectReader... readers) {\n        return withFormatDetection(new DataFormatReaders(readers));\n    }",
        "distance": 1.5,
        "title": null,
        "name": "withFormatDetection",
        "documentation": "/**\n     * Fluent factory method for constructing a reader that will try to\n     * auto-detect underlying data format, using specified list of\n     * {@link JsonFactory} instances, and default {@link DataFormatReaders} settings\n     * (for customized {@link DataFormatReaders}, you can construct instance yourself).\n     * to construct appropriate {@link JsonParser} for actual parsing.\n     *<p>\n     * Note: since format detection only works with byte sources, it is possible to\n     * get a failure from some 'readValue()' methods. Also, if input cannot be reliably\n     * (enough) detected as one of specified types, an exception will be thrown.\n     *<p>\n     * Note: not all {@link JsonFactory} types can be passed: specifically, ones that\n     * require \"custom codec\" (like XML factory) will not work. Instead, use\n     * method that takes {@link ObjectReader} instances instead of factories.\n     *\n     * @param readers Data formats accepted, in decreasing order of priority (that is,\n     *   matches checked in listed order, first match wins)\n     *\n     * @return Newly configured writer instance\n     *\n     * @since 2.1\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "readValue"
          },
          {
            "start_node": "readValue",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "ObjectReader"
          },
          {
            "start_node": "ObjectReader",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "withFormatDetection"
          }
        ],
        "similarity": 0.06622134251257945,
        "end_line": 942,
        "signature": "com.fasterxml.jackson.databind.ObjectReader.withFormatDetection(ObjectReader readers): ObjectReader"
      },
      {
        "start_line": 2545,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper setDefaultAttributes(ContextAttributes attrs) {\n        _deserializationConfig = _deserializationConfig.with(attrs);\n        _serializationConfig = _serializationConfig.with(attrs);\n        return this;\n    }",
        "distance": 1.25,
        "title": null,
        "name": "setDefaultAttributes",
        "documentation": "/**\n     *<p>\n     * NOTE: preferred way to set the defaults is to use {@code Builder} style\n     * construction, see {@link com.fasterxml.jackson.databind.json.JsonMapper#builder}\n     * (and {@link MapperBuilder#defaultAttributes}).\n     *\n     * @since 2.13\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "setDefaultAttributes"
          }
        ],
        "similarity": 0.06603020015727987,
        "end_line": 2549,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.setDefaultAttributes(ContextAttributes attrs): ObjectMapper"
      },
      {
        "start_line": 37,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/exc/InvalidNullException.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public static InvalidNullException from(DeserializationContext ctxt,",
        "distance": 1.25,
        "title": null,
        "name": "from",
        "documentation": "",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "InvalidNullException"
          },
          {
            "start_node": "InvalidNullException",
            "description": "contains method",
            "type": "RELATED",
            "end_node": "from"
          }
        ],
        "similarity": 0.06535935266827793,
        "end_line": 37,
        "signature": "com.fasterxml.jackson.databind.exc.InvalidNullException.from(DeserializationContext ctxt, PropertyName name, JavaType type): InvalidNullException"
      },
      {
        "start_line": 1986,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public JsonMappingException weirdNativeValueException(Object value, Class<?> instClass)",
        "distance": 1.5,
        "title": null,
        "name": "weirdNativeValueException",
        "documentation": "/**\n     * Helper method for constructing exception to indicate that input JSON\n     * token of type \"native value\" (see {@link JsonToken#VALUE_EMBEDDED_OBJECT})\n     * is of incompatible type (and there is no delegating creator or such to use)\n     * and can not be used to construct value of specified type (usually POJO).\n     * Note that most of the time this method should NOT be called; instead,\n     * {@link #handleWeirdNativeValue} should be called which will call this method\n     *\n     * @since 2.9\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "readValue"
          },
          {
            "start_node": "readValue",
            "description": "contained in class",
            "type": "RELATED",
            "end_node": "DeserializationContext"
          },
          {
            "start_node": "DeserializationContext",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "weirdNativeValueException"
          }
        ],
        "similarity": 0.06494159240521656,
        "end_line": 1986,
        "signature": "com.fasterxml.jackson.databind.DeserializationContext.weirdNativeValueException(Object value, Class instClass): JsonMappingException"
      },
      {
        "start_line": 2135,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper disableDefaultTyping() {\n        return setDefaultTyping(null);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "disableDefaultTyping",
        "documentation": "/**\n     * @deprecated Since 2.10 use {@link #deactivateDefaultTyping} instead\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disableDefaultTyping"
          }
        ],
        "similarity": 0.06464450711891938,
        "end_line": 2137,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.disableDefaultTyping(): ObjectMapper"
      },
      {
        "start_line": 4845,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    protected final void _configAndWriteValue(JsonGenerator g, Object value) throws IOException {\n        getSerializationConfig().initialize(g);\n        _writeValueAndClose(g, value);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "_configAndWriteValue",
        "documentation": "/**\n     * @deprecated Since 2.11.2 Use {@link #_writeValueAndClose} instead\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "_configAndWriteValue"
          }
        ],
        "similarity": 0.06449824212213522,
        "end_line": 4848,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(JsonGenerator g, Object value): void"
      },
      {
        "start_line": 2103,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper enableDefaultTyping() {\n        return activateDefaultTyping(getPolymorphicTypeValidator());\n    }",
        "distance": 1.25,
        "title": null,
        "name": "enableDefaultTyping",
        "documentation": "/**\n     * @deprecated Since 2.10 use {@link #activateDefaultTyping(PolymorphicTypeValidator)} instead\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "enableDefaultTyping"
          }
        ],
        "similarity": 0.06436810316984028,
        "end_line": 2105,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.enableDefaultTyping(): ObjectMapper"
      },
      {
        "start_line": 2127,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper enableDefaultTypingAsProperty(DefaultTyping applicability, String propertyName) {\n        return activateDefaultTypingAsProperty(getPolymorphicTypeValidator(), applicability, propertyName);\n    }",
        "distance": 1.25,
        "title": null,
        "name": "enableDefaultTypingAsProperty",
        "documentation": "/**\n     * @deprecated Since 2.10 use {@link #activateDefaultTypingAsProperty(PolymorphicTypeValidator,DefaultTyping,String)} instead\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "enableDefaultTypingAsProperty"
          }
        ],
        "similarity": 0.06422829119397563,
        "end_line": 2129,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.enableDefaultTypingAsProperty(DefaultTyping applicability, String propertyName): ObjectMapper"
      },
      {
        "start_line": 2785,
        "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "issue_id": null,
        "type": "method",
        "content": null,
        "source_code": "    public ObjectMapper disable(DeserializationFeature first,",
        "distance": 1.25,
        "title": null,
        "name": "disable",
        "documentation": "/**\n     * Method for disabling specified {@link DeserializationConfig} features.\n     * Modifies and returns this instance; no new object is created.\n     * <p>\n     * Note: Changing the configuration of this {@link ObjectMapper} instance after its first use (read &amp; write) is\n     * not safe and should not be attempted. Instead, use {@code with()} and {@code without()} methods of\n     * {@link ObjectReader}/{@link ObjectWriter} which fully support reconfiguration as new instances are constructed.\n     * <p>\n     * <strong>This method will be removed in Jackson 3.0 due to unsafe usage.\n     * Configure using {@link MapperBuilder#disable(DeserializationFeature...)} instead.</strong>\n     */",
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "ObjectMapper"
          },
          {
            "start_node": "ObjectMapper",
            "description": "contains class",
            "type": "RELATED",
            "end_node": "disable"
          }
        ],
        "similarity": 0.06411570594001376,
        "end_line": 2785,
        "signature": "com.fasterxml.jackson.databind.ObjectMapper.disable(DeserializationFeature first, DeserializationFeature f): ObjectMapper"
      }
    ],
    "classes": [],
    "issues": [
      {
        "content": "### Search before asking\r\n\r\n- [X] I searched in the [issues](https://github.com/FasterXML/jackson-databind/issues) and found nothing similar.\r\n\r\n### Describe the bug\r\n\r\nI specified `JsonSetter(contentNulls = FAIL)` or `SKIP` in the constructor argument with `JsonCreator(DELEGATING)`, but it was ignored.\r\n\r\n### Version Information\r\n\r\n2.15.3\r\n\r\n### Reproduction\r\n\r\nIf other than `DELEGATING`, an `InvalidNullException` is thrown as expected.\r\n\r\n```java\r\nimport com.fasterxml.jackson.annotation.JsonCreator;\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\nimport com.fasterxml.jackson.annotation.JsonSetter;\r\nimport com.fasterxml.jackson.annotation.Nulls;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport com.fasterxml.jackson.databind.exc.InvalidNullException;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport java.util.Map;\r\n\r\nimport static org.junit.jupiter.api.Assertions.assertThrows;\r\n\r\npublic class GitHubXXX {\r\n    static class DelegatingWrapper {\r\n        private final Map<String, String> value;\r\n\r\n        @JsonCreator(mode = JsonCreator.Mode.DELEGATING)\r\n        DelegatingWrapper(@JsonSetter(contentNulls = Nulls.FAIL) Map<String, String> value) {\r\n            this.value = value;\r\n        }\r\n\r\n        public Map<String, String> getValue() {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    @Test\r\n    public void fails() {\r\n        ObjectMapper mapper = new ObjectMapper();\r\n\r\n        assertThrows(\r\n                InvalidNullException.class,\r\n                () -> mapper.readValue(\"{\\\"foo\\\":null}\", DelegatingWrapper.class)\r\n        );\r\n    }\r\n\r\n    static class SetterWrapper {\r\n        private Map<String, String> value;\r\n\r\n        public Map<String, String> getValue() {\r\n            return value;\r\n        }\r\n\r\n        @JsonSetter(contentNulls = Nulls.FAIL)\r\n        public void setValue(Map<String, String> value) {\r\n            this.value = value;\r\n        }\r\n    }\r\n\r\n    static class PropertiesWrapper {\r\n        private final Map<String, String> value;\r\n\r\n        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\r\n        PropertiesWrapper(\r\n                @JsonSetter(contentNulls = Nulls.FAIL)\r\n                @JsonProperty(\"value\")\r\n                Map<String, String> value\r\n        ) {\r\n            this.value = value;\r\n        }\r\n\r\n        public Map<String, String> getValue() {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    static class DefaultWrapper {\r\n        private final Map<String, String> value;\r\n\r\n        @JsonCreator(mode = JsonCreator.Mode.DEFAULT)\r\n        DefaultWrapper(\r\n                @JsonSetter(contentNulls = Nulls.FAIL)\r\n                @JsonProperty(\"value\")\r\n                Map<String, String> value\r\n        ) {\r\n            this.value = value;\r\n        }\r\n\r\n        public Map<String, String> getValue() {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    @Test\r\n    void valid() {\r\n        ObjectMapper mapper = new ObjectMapper();\r\n\r\n        assertThrows(\r\n                InvalidNullException.class,\r\n                () -> mapper.readValue(\"{\\\"value\\\":{\\\"foo\\\":null}}\", SetterWrapper.class)\r\n        );\r\n        assertThrows(\r\n                InvalidNullException.class,\r\n                () -> mapper.readValue(\"{\\\"value\\\":{\\\"foo\\\":null}}\", PropertiesWrapper.class)\r\n        );\r\n        assertThrows(\r\n                InvalidNullException.class,\r\n                () -> mapper.readValue(\"{\\\"value\\\":{\\\"foo\\\":null}}\", DefaultWrapper.class)\r\n        );\r\n    }\r\n}\r\n```\r\n\r\n### Expected behavior\r\n\r\nAn `InvalidNullException` is thrown.\r\n\r\n### Additional context\r\nFixing this issue may make it easier to resolve https://github.com/FasterXML/jackson-module-kotlin/issues/399.\n",
        "distance": 0,
        "title": "`JsonSetter(contentNulls = FAIL)` is ignored in `JsonCreator(DELEGATING)` argument",
        "name": "root",
        "path": [],
        "issue_id": "root",
        "similarity": 2.0,
        "type": "issue"
      },
      {
        "start_line": null,
        "file_path": null,
        "issue_id": "4215",
        "type": "issue",
        "content": "See https://github.com/FasterXML/jackson-databind/issues/4214 for more details.\n\n\nComment by cowtowncoder:\n@dvhvsekhar Would it be possible to change the PR to just have failing test? It should be moved under `src/test/java/.../failing` so as not to block CI; and name should contain id 4214 to indicate issue it is related with.\r\nWith failing test it would be easier for anyone to try a fix. Fix proposed here is unfortunately not acceptable, but test seems valid.\r\n\r\n\n\nComment by dvhvsekhar:\n> should be moved under\r\n\r\n@cowtowncoder , can you please check now? I incorporated all suggestions.",
        "source_code": null,
        "distance": 0.5,
        "title": "Added unit test for Issue-4214",
        "name": "pr#4215",
        "documentation": null,
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "issue#4214"
          },
          {
            "start_node": "issue#4214",
            "description": "referenced by issue",
            "type": "RELATED",
            "end_node": "pr#4215"
          }
        ],
        "similarity": 0.3677115253877621,
        "end_line": null,
        "signature": null
      },
      {
        "start_line": null,
        "file_path": null,
        "issue_id": "4214",
        "type": "issue",
        "content": "### Search before asking\r\n\r\n- [X] I searched in the [issues](https://github.com/FasterXML/jackson-databind/issues) and found nothing similar.\r\n\r\n### Describe the bug\r\n\r\nIf we serialize an object which has a property of type Set, but referring EnumSet at runtime, then serialization uses CollectionSerializer instead of EnumSetSerializer for this property, when we activate default typing in ObjectMapper. This causes deserialization (using EnumSetDeserializer) to fail, since  EnumSetDeserializer expects encoding of EnumSetSerializer, but not of CollectionSerializer.\r\n\r\n### Version Information\r\n\r\n2.14.0 and above\r\n\r\n### Reproduction\r\n\r\nIf we run the below given test (java code), we get following error:\r\n\r\n[ERROR]   EnumSetSerializationTest.testSerialization:69 \u00bb MismatchedInput Cannot deserialize value of type `com.fasterxml.jackson.databind.ser.enums.EnumSetSerializationTest$MyEnum` from Array value (token `JsonToken.START_ARRAY`)\r\n at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 191] (through reference chain: com.fasterxml.jackson.databind.ser.enums.EnumSetSerializationTest$EnumSetHolder[\"enumSet\"]->java.util.RegularEnumSet[0])\r\n\r\n```java\r\npackage com.fasterxml.jackson.databind.ser.enums;\r\n\r\nimport com.fasterxml.jackson.databind.BaseMapTest;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\n\r\nimport java.util.EnumSet;\r\nimport java.util.Set;\r\n\r\nimport com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;\r\nimport com.fasterxml.jackson.annotation.PropertyAccessor;\r\nimport com.fasterxml.jackson.databind.DeserializationFeature;\r\nimport com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping;\r\nimport com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator;\r\n\r\npublic class EnumSetSerializationTest extends BaseMapTest {\r\n\r\n\tstatic enum MyEnum {\r\n\t\tITEM_A, ITEM_B;\r\n\t}\r\n\r\n\tstatic class EnumSetHolder {\r\n\t\tprivate Set<MyEnum> enumSet; // use Set instead of EnumSet for type of this\r\n\r\n\t\tpublic Set<MyEnum> getEnumSet() {\r\n\t\t\treturn enumSet;\r\n\t\t}\r\n\r\n\t\tpublic void setEnumSet(Set<MyEnum> enumSet) {\r\n\t\t\tthis.enumSet = enumSet;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic boolean equals(Object o) {\r\n\t\t\tif (!(o instanceof EnumSetHolder)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tEnumSetHolder eh = (EnumSetHolder) o;\r\n\t\t\tif (eh == this) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (enumSet == null) {\r\n\t\t\t\tif (eh.getEnumSet() == null) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (eh.getEnumSet() == null) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn enumSet.containsAll(eh.getEnumSet());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void testSerialization() throws Exception {\r\n\t\tObjectMapper mapper = jsonMapperBuilder().build()\r\n\t\t\t\t.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)\r\n\t\t\t\t// this type information is needed in json string, for this test\r\n\t\t\t\t.activateDefaultTyping(BasicPolymorphicTypeValidator.builder().allowIfBaseType(Object.class).build(),\r\n\t\t\t\t\t\tDefaultTyping.EVERYTHING);\r\n\r\n\t\tEnumSetHolder enumSetHolder = new EnumSetHolder();\r\n\t\tenumSetHolder.setEnumSet(EnumSet.allOf(MyEnum.class));\r\n\t\tString jsonStr = mapper.writeValueAsString(enumSetHolder);\r\n\t\tEnumSetHolder result = mapper.readValue(jsonStr, EnumSetHolder.class);\r\n\t\tassertEquals(result, enumSetHolder);\r\n\t}\r\n}\r\n\r\n``` \r\n\r\n\r\n### Expected behavior\r\n\r\nAbove given test code should pass. \r\n\r\n### Additional context\r\n\r\nAs a workaround, if we make type of EnumSetHolder#enumSet property as EnumSet instead of Set, in the above given code,  test passes.\r\n\r\n_No response_\n\n\nComment by dvhvsekhar:\nI proposed a fix with PR - https://github.com/FasterXML/jackson-databind/pull/4215 \n\nComment by cowtowncoder:\nOk, now we have a reproduction at least. Looks like `Enum`s do not handle polymorphic deserialization well at this point -- probably since expectation wasn't that they'd ever be polymorphic.\r\nBefore addition of `DefaultTyping.EVERYTHING`...\r\n(I did change test to use new `DefaultTyping.NON_FINAL_AND_ENUMS` which fails similarly, fwtw)\r\n\r\n\n\nComment by cowtowncoder:\nOk, actually, it's not so much `EnumDeserializer` that is not playing nicely, but rather `EnumSetDeserializer`... since that would have to create and use `TypeDeserializer` for `Enum` values.\r\nThis is what basic `CollectionDeserializer` does.\r\n\r\nI don't know if I have time to work much more on this issue but if anyone wants to try to figure it out would be happy to review PR.\r\n\r\n\n\nComment by cowtowncoder:\nOk, one more note: it looks like `BasicDeserializerFactory` already has `TypeDeserializer` to pass when constructing `EnumSetDeserializer`. So maybe I might be able to provide a fix. Fix though will probably need to go in 2.17 since (minor) internal API change needed.\r\nBut fix seems quite doable.\r\n\n\nComment by cowtowncoder:\nWas able to fix; deprecated older methods, fix will be in 2.17.0.",
        "source_code": null,
        "distance": 0.25,
        "title": "`EnumSet` deserialization does not work when we activate default typing in `ObjectMapper`",
        "name": "issue#4214",
        "documentation": null,
        "path": [
          {
            "start_node": "root",
            "description": "points to issue",
            "type": "RELATED",
            "end_node": "issue#4214"
          }
        ],
        "similarity": 0.3505400658310875,
        "end_line": null,
        "signature": null
      }
    ]
  },
  "artifact_stats": {
    "skipped_due_to_time": 6,
    "valid_related_items": 24
  }
}