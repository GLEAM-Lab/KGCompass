{
    "related_entities": {
        "methods": [
            {
                "start_line": 66,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/IterationType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public JavaType withContentType(JavaType contentType) {\n        if (_iteratedType == contentType) {\n            return this;\n        }\n        return new IterationType(_class, _bindings, _superClass, _superInterfaces,\n                contentType, _valueHandler, _typeHandler, _asStatic);\n    }",
                "distance": 1.25,
                "title": null,
                "name": "withContentType",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "withContentType"
                    }
                ],
                "similarity": 0.1491950745102688,
                "end_line": 72,
                "signature": "com.fasterxml.jackson.databind.type.IterationType.withContentType(JavaType contentType): JavaType"
            },
            {
                "start_line": 116,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/IterationType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public IterationType withStaticTyping() {\n        if (_asStatic) {\n            return this;\n        }\n        return new IterationType(_class, _bindings, _superClass, _superInterfaces,\n                _iteratedType.withStaticTyping(),\n                 _valueHandler, _typeHandler, true);\n    }",
                "distance": 1.25,
                "title": null,
                "name": "withStaticTyping",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "withStaticTyping"
                    }
                ],
                "similarity": 0.13977604244065958,
                "end_line": 123,
                "signature": "com.fasterxml.jackson.databind.type.IterationType.withStaticTyping(): IterationType"
            },
            {
                "start_line": 106,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/IterationType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public IterationType withContentValueHandler(Object h) {\n        if (h == _iteratedType.<Object>getValueHandler()) {\n            return this;\n        }\n        return new IterationType(_class, _bindings,\n                _superClass, _superInterfaces, _iteratedType.withValueHandler(h),\n                _valueHandler, _typeHandler, _asStatic);\n    }",
                "distance": 1.25,
                "title": null,
                "name": "withContentValueHandler",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "withContentValueHandler"
                    }
                ],
                "similarity": 0.13745932046525466,
                "end_line": 113,
                "signature": "com.fasterxml.jackson.databind.type.IterationType.withContentValueHandler(Object h): IterationType"
            },
            {
                "start_line": 96,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/IterationType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public IterationType withValueHandler(Object h) {\n        if (h == _valueHandler) {\n            return this;\n        }\n        return new IterationType(_class, _bindings,\n                _superClass, _superInterfaces, _iteratedType,\n                h, _typeHandler,_asStatic);\n    }",
                "distance": 1.25,
                "title": null,
                "name": "withValueHandler",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "withValueHandler"
                    }
                ],
                "similarity": 0.13372211160151673,
                "end_line": 103,
                "signature": "com.fasterxml.jackson.databind.type.IterationType.withValueHandler(Object h): IterationType"
            },
            {
                "start_line": 21,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/IterationType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    protected IterationType(Class<?> cls, TypeBindings bindings,",
                "distance": 1.0,
                "title": null,
                "name": "IterationType",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    }
                ],
                "similarity": 0.1309223194440283,
                "end_line": 21,
                "signature": "com.fasterxml.jackson.databind.type.IterationType(Class cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, JavaType iteratedType, Object valueHandler, Object typeHandler, boolean asStatic)"
            },
            {
                "start_line": 163,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/IterationType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public boolean isIterationType() {\n        return true;\n    }",
                "distance": 1.25,
                "title": null,
                "name": "isIterationType",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "isIterationType"
                    }
                ],
                "similarity": 0.12889084722633348,
                "end_line": 165,
                "signature": "com.fasterxml.jackson.databind.type.IterationType.isIterationType(): boolean"
            },
            {
                "start_line": 35,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/IterationType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    protected IterationType(TypeBase base, JavaType iteratedType)",
                "distance": 1.0,
                "title": null,
                "name": "IterationType",
                "documentation": "/**\n     * Constructor used when upgrading into this type (via {@link #upgradeFrom},\n     * the usual way for {@link IterationType}s to come into existence.\n     * Sets up what is considered the \"base\" iteration type\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    }
                ],
                "similarity": 0.12589817664612843,
                "end_line": 35,
                "signature": "com.fasterxml.jackson.databind.type.IterationType(TypeBase base, JavaType iteratedType)"
            },
            {
                "start_line": 48,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/IterationType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public static IterationType upgradeFrom(JavaType baseType, JavaType iteratedType) {\n        Objects.requireNonNull(iteratedType);\n        // 19-Oct-2015, tatu: Not sure if and how other types could be used as base;\n        //    will cross that bridge if and when need be\n        if (baseType instanceof TypeBase) {\n            return new IterationType((TypeBase) baseType, iteratedType);\n        }\n        throw new IllegalArgumentException(\"Cannot upgrade from an instance of \"+baseType.getClass());\n    }",
                "distance": 1.25,
                "title": null,
                "name": "upgradeFrom",
                "documentation": "/**\n     * Factory method that can be used to \"upgrade\" a basic type into iteration\n     * type; usually done via {@link TypeModifier}\n     *\n     * @param baseType Resolved non-iteration type (usually {@link SimpleType}) that is being upgraded\n     * @param iteratedType Iterated type; usually the first and only type parameter, but not necessarily\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "upgradeFrom"
                    }
                ],
                "similarity": 0.1250820217686138,
                "end_line": 56,
                "signature": "com.fasterxml.jackson.databind.type.IterationType.upgradeFrom(JavaType baseType, JavaType iteratedType): IterationType"
            },
            {
                "start_line": 58,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/IterationType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public static IterationType construct(Class<?> cls, TypeBindings bindings,",
                "distance": 1.25,
                "title": null,
                "name": "construct",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "construct"
                    }
                ],
                "similarity": 0.10610557664411135,
                "end_line": 58,
                "signature": "com.fasterxml.jackson.databind.type.IterationType.construct(Class cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, JavaType iteratedType): IterationType"
            },
            {
                "start_line": 85,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/IterationType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public IterationType withContentTypeHandler(Object h)",
                "distance": 1.25,
                "title": null,
                "name": "withContentTypeHandler",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "withContentTypeHandler"
                    }
                ],
                "similarity": 0.10459887668747953,
                "end_line": 85,
                "signature": "com.fasterxml.jackson.databind.type.IterationType.withContentTypeHandler(Object h): IterationType"
            },
            {
                "start_line": 75,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/IterationType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public IterationType withTypeHandler(Object h)",
                "distance": 1.25,
                "title": null,
                "name": "withTypeHandler",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "withTypeHandler"
                    }
                ],
                "similarity": 0.10409186883696915,
                "end_line": 75,
                "signature": "com.fasterxml.jackson.databind.type.IterationType.withTypeHandler(Object h): IterationType"
            },
            {
                "start_line": 153,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/IterationType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public JavaType getContentType() {\n        return _iteratedType;\n    }",
                "distance": 1.25,
                "title": null,
                "name": "getContentType",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "getContentType"
                    }
                ],
                "similarity": 0.09980095627739032,
                "end_line": 155,
                "signature": "com.fasterxml.jackson.databind.type.IterationType.getContentType(): JavaType"
            },
            {
                "start_line": 158,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/IterationType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public boolean hasContentType() {\n        return true;\n    }",
                "distance": 1.25,
                "title": null,
                "name": "hasContentType",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "hasContentType"
                    }
                ],
                "similarity": 0.07776431489032982,
                "end_line": 160,
                "signature": "com.fasterxml.jackson.databind.type.IterationType.hasContentType(): boolean"
            },
            {
                "start_line": 126,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/IterationType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public JavaType refine(Class<?> rawType, TypeBindings bindings,",
                "distance": 1.25,
                "title": null,
                "name": "refine",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "refine"
                    }
                ],
                "similarity": 0.0746884467531169,
                "end_line": 126,
                "signature": "com.fasterxml.jackson.databind.type.IterationType.refine(Class rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces): JavaType"
            },
            {
                "start_line": 168,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/IterationType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public StringBuilder getErasedSignature(StringBuilder sb) {\n        return _classSignature(_class, sb, true);\n    }",
                "distance": 1.25,
                "title": null,
                "name": "getErasedSignature",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "getErasedSignature"
                    }
                ],
                "similarity": 0.068498260792638,
                "end_line": 170,
                "signature": "com.fasterxml.jackson.databind.type.IterationType.getErasedSignature(StringBuilder sb): StringBuilder"
            },
            {
                "start_line": 260,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    protected boolean _hasNTypeParameters(int count) {\n        TypeVariable<?>[] params = _class.getTypeParameters();\n        return (params.length == count);\n    }",
                "distance": 2.25,
                "title": null,
                "name": "_hasNTypeParameters",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    }
                ],
                "similarity": 0.0650318633499235,
                "end_line": 263,
                "signature": "com.fasterxml.jackson.databind.type.TypeBase._hasNTypeParameters(int count): boolean"
            },
            {
                "start_line": 173,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/IterationType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public StringBuilder getGenericSignature(StringBuilder sb)",
                "distance": 1.25,
                "title": null,
                "name": "getGenericSignature",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "getGenericSignature"
                    }
                ],
                "similarity": 0.06039459582648827,
                "end_line": 173,
                "signature": "com.fasterxml.jackson.databind.type.IterationType.getGenericSignature(StringBuilder sb): StringBuilder"
            },
            {
                "start_line": 252,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    protected static JavaType _bogusSuperClass(Class<?> cls) {\n        Class<?> parent = cls.getSuperclass();\n        if (parent == null) {\n            return null;\n        }\n        return TypeFactory.unknownType();\n    }",
                "distance": 2.75,
                "title": null,
                "name": "_bogusSuperClass",
                "documentation": "/**\n     * Internal helper method used to figure out nominal super-class for\n     * deprecated factory methods / constructors, where we are not given\n     * properly resolved supertype hierarchy.\n     * Will basically give `JavaType` for `java.lang.Object` for classes\n     * other than `java.lafgn.Object`; null for others.\n     *\n     * @since 2.7\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    },
                    {
                        "start_node": "TypeBase",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "_bogusSuperClass"
                    }
                ],
                "similarity": 0.05444305459356911,
                "end_line": 258,
                "signature": "com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(Class cls): JavaType"
            },
            {
                "start_line": 169,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void serializeWithType(JsonGenerator g, SerializerProvider provider,",
                "distance": 2.75,
                "title": null,
                "name": "serializeWithType",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    },
                    {
                        "start_node": "TypeBase",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "serializeWithType"
                    }
                ],
                "similarity": 0.054258754031912056,
                "end_line": 169,
                "signature": "com.fasterxml.jackson.databind.type.TypeBase.serializeWithType(JsonGenerator g, SerializerProvider provider, TypeSerializer typeSer): void"
            },
            {
                "start_line": 114,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public List<JavaType> getInterfaces() {\n        if (_superInterfaces == null) {\n            return Collections.emptyList();\n        }\n        switch (_superInterfaces.length) {\n        case 0:\n            return Collections.emptyList();\n        case 1:\n            return Collections.singletonList(_superInterfaces[0]);\n        }\n        return Arrays.asList(_superInterfaces);\n    }",
                "distance": 2.75,
                "title": null,
                "name": "getInterfaces",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    },
                    {
                        "start_node": "TypeBase",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "getInterfaces"
                    }
                ],
                "similarity": 0.053051932851413484,
                "end_line": 125,
                "signature": "com.fasterxml.jackson.databind.type.TypeBase.getInterfaces(): List"
            },
            {
                "start_line": 60,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    protected TypeBase(TypeBase base) {\n        super(base);\n        _superClass = base._superClass;\n        _superInterfaces = base._superInterfaces;\n        _bindings = base._bindings;\n    }",
                "distance": 2.75,
                "title": null,
                "name": "TypeBase",
                "documentation": "/**\n     * Copy-constructor used when refining/upgrading type instances.\n     *\n     * @since 2.7\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    },
                    {
                        "start_node": "TypeBase",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    }
                ],
                "similarity": 0.05244676238777585,
                "end_line": 65,
                "signature": "com.fasterxml.jackson.databind.type.TypeBase(TypeBase base)"
            },
            {
                "start_line": 180,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public void serialize(JsonGenerator gen, SerializerProvider provider)",
                "distance": 2.75,
                "title": null,
                "name": "serialize",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    },
                    {
                        "start_node": "TypeBase",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "serialize"
                    }
                ],
                "similarity": 0.05127747215138599,
                "end_line": 180,
                "signature": "com.fasterxml.jackson.databind.type.TypeBase.serialize(JsonGenerator gen, SerializerProvider provider): void"
            },
            {
                "start_line": 45,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    protected TypeBase(Class<?> raw, TypeBindings bindings, JavaType superClass, JavaType[] superInts,",
                "distance": 2.75,
                "title": null,
                "name": "TypeBase",
                "documentation": "/**\n     * Main constructor to use by extending classes.\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    },
                    {
                        "start_node": "TypeBase",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    }
                ],
                "similarity": 0.03931675487830983,
                "end_line": 45,
                "signature": "com.fasterxml.jackson.databind.type.TypeBase(Class raw, TypeBindings bindings, JavaType superClass, JavaType[] superInts, int hash, Object valueHandler, Object typeHandler, boolean asStatic)"
            },
            {
                "start_line": 52,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/impl/IteratorSerializer.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public final void serialize(Iterator<?> value, JsonGenerator gen,",
                "distance": 3.75,
                "title": null,
                "name": "serialize",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    },
                    {
                        "start_node": "TypeBase",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "serializeWithType"
                    },
                    {
                        "start_node": "serializeWithType",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "serialize"
                    }
                ],
                "similarity": 0.03877838363136794,
                "end_line": 52,
                "signature": "com.fasterxml.jackson.databind.ser.impl.IteratorSerializer.serialize(Iterator value, JsonGenerator gen, SerializerProvider provider): void"
            },
            {
                "start_line": 98,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public JavaType containedType(int index) {\n        return _bindings.getBoundType(index);\n    }",
                "distance": 2.75,
                "title": null,
                "name": "containedType",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    },
                    {
                        "start_node": "TypeBase",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "containedType"
                    }
                ],
                "similarity": 0.03773753167813313,
                "end_line": 100,
                "signature": "com.fasterxml.jackson.databind.type.TypeBase.containedType(int index): JavaType"
            },
            {
                "start_line": 196,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    protected static StringBuilder _classSignature(Class<?> cls, StringBuilder sb,",
                "distance": 2.75,
                "title": null,
                "name": "_classSignature",
                "documentation": "/**\n     * @param trailingSemicolon Whether to add trailing semicolon for non-primitive\n     *   (reference) types or not\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    },
                    {
                        "start_node": "TypeBase",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "_classSignature"
                    }
                ],
                "similarity": 0.037095794186332284,
                "end_line": 196,
                "signature": "com.fasterxml.jackson.databind.type.TypeBase._classSignature(Class cls, StringBuilder sb, boolean trailingSemicolon): StringBuilder"
            },
            {
                "start_line": 109,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public JavaType getSuperClass() {\n        return _superClass;\n    }",
                "distance": 2.75,
                "title": null,
                "name": "getSuperClass",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    },
                    {
                        "start_node": "TypeBase",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "getSuperClass"
                    }
                ],
                "similarity": 0.03541609774589917,
                "end_line": 111,
                "signature": "com.fasterxml.jackson.databind.type.TypeBase.getSuperClass(): JavaType"
            },
            {
                "start_line": 93,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public int containedTypeCount() {\n        return _bindings.size();\n    }",
                "distance": 2.75,
                "title": null,
                "name": "containedTypeCount",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    },
                    {
                        "start_node": "TypeBase",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "containedTypeCount"
                    }
                ],
                "similarity": 0.035087662201167484,
                "end_line": 95,
                "signature": "com.fasterxml.jackson.databind.type.TypeBase.containedTypeCount(): int"
            },
            {
                "start_line": 93,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/CollectionLikeType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public JavaType withContentType(JavaType contentType) {\n        if (_elementType == contentType) {\n            return this;\n        }\n        return new CollectionLikeType(_class, _bindings, _superClass, _superInterfaces,\n                contentType, _valueHandler, _typeHandler, _asStatic);\n    }",
                "distance": 3.75,
                "title": null,
                "name": "withContentType",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "CollectionLikeType"
                    },
                    {
                        "start_node": "CollectionLikeType",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "withContentType"
                    }
                ],
                "similarity": 0.03478122399368242,
                "end_line": 99,
                "signature": "com.fasterxml.jackson.databind.type.CollectionLikeType.withContentType(JavaType contentType): JavaType"
            },
            {
                "start_line": 181,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/MapLikeType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    protected String buildCanonicalName() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(_class.getName());\n        // 10-Apr-2021, tatu: [databind#3108] Ensure we have at least nominally\n        //   compatible type declaration (weak guarantee but better than nothing)\n        if ((_keyType != null) && _hasNTypeParameters(2)) {\n            sb.append('<');\n            sb.append(_keyType.toCanonical());\n            sb.append(',');\n            sb.append(_valueType.toCanonical());\n            sb.append('>');\n        }\n        return sb.toString();\n    }",
                "distance": 3.25,
                "title": null,
                "name": "buildCanonicalName",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    }
                ],
                "similarity": 0.03407832488713885,
                "end_line": 194,
                "signature": "com.fasterxml.jackson.databind.type.MapLikeType.buildCanonicalName(): String"
            },
            {
                "start_line": 102,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/CollectionLikeType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public CollectionLikeType withTypeHandler(Object h) {\n        return new CollectionLikeType(_class, _bindings,\n                _superClass, _superInterfaces, _elementType, _valueHandler, h, _asStatic);\n    }",
                "distance": 3.75,
                "title": null,
                "name": "withTypeHandler",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "CollectionLikeType"
                    },
                    {
                        "start_node": "CollectionLikeType",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "withTypeHandler"
                    }
                ],
                "similarity": 0.033888894193551004,
                "end_line": 105,
                "signature": "com.fasterxml.jackson.databind.type.CollectionLikeType.withTypeHandler(Object h): CollectionLikeType"
            },
            {
                "start_line": 122,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/CollectionLikeType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public CollectionLikeType withContentValueHandler(Object h) {\n        return new CollectionLikeType(_class, _bindings,\n                _superClass, _superInterfaces, _elementType.withValueHandler(h),\n                _valueHandler, _typeHandler, _asStatic);\n    }",
                "distance": 3.75,
                "title": null,
                "name": "withContentValueHandler",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "CollectionLikeType"
                    },
                    {
                        "start_node": "CollectionLikeType",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "withContentValueHandler"
                    }
                ],
                "similarity": 0.03384690406514654,
                "end_line": 126,
                "signature": "com.fasterxml.jackson.databind.type.CollectionLikeType.withContentValueHandler(Object h): CollectionLikeType"
            },
            {
                "start_line": 279,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/MapLikeType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public boolean isTrueMapType() {\n        return Map.class.isAssignableFrom(_class);\n    }",
                "distance": 3.75,
                "title": null,
                "name": "isTrueMapType",
                "documentation": "/**\n     * Method that can be used for checking whether this type is a \"real\"\n     * Collection type; meaning whether it represents a parameterized subtype of\n     * {@link java.util.Collection} or just something that acts like one.\n     *\n     * @deprecated Since 2.12 just use instanceof\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "contained in method",
                        "type": "RELATED",
                        "end_node": "MapLikeType"
                    },
                    {
                        "start_node": "MapLikeType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "isTrueMapType"
                    }
                ],
                "similarity": 0.03330463189914075,
                "end_line": 281,
                "signature": "com.fasterxml.jackson.databind.type.MapLikeType.isTrueMapType(): boolean"
            },
            {
                "start_line": 85,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/SimpleType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public static SimpleType constructUnsafe(Class<?> raw) {\n        return new SimpleType(raw, null,\n                // 18-Oct-2015, tatu: Should be ok to omit possible super-types, right?\n                null, null, null, null, false);\n    }",
                "distance": 3.75,
                "title": null,
                "name": "constructUnsafe",
                "documentation": "/**\n     * Method used by core Jackson classes: NOT to be used by application code:\n     * it does NOT properly handle inspection of super-types, so neither parent\n     * Classes nor implemented Interfaces are accessible with resulting type\n     * instance.\n     *<p>\n     * NOTE: public only because it is called by <code>ObjectMapper</code> which is\n     * not in same package\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "SimpleType"
                    },
                    {
                        "start_node": "SimpleType",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "constructUnsafe"
                    }
                ],
                "similarity": 0.0332059937801506,
                "end_line": 89,
                "signature": "com.fasterxml.jackson.databind.type.SimpleType.constructUnsafe(Class raw): SimpleType"
            },
            {
                "start_line": 232,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/CollectionLikeType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public boolean isTrueCollectionType() {\n        return Collection.class.isAssignableFrom(_class);\n    }",
                "distance": 3.75,
                "title": null,
                "name": "isTrueCollectionType",
                "documentation": "/**\n     * Method that can be used for checking whether this type is a\n     * \"real\" Collection type; meaning whether it represents a parameterized\n     * subtype of {@link java.util.Collection} or just something that acts\n     * like one.\n     *\n     * @deprecated Since 2.12 just use instanceof\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "CollectionLikeType"
                    },
                    {
                        "start_node": "CollectionLikeType",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "isTrueCollectionType"
                    }
                ],
                "similarity": 0.03293983246595136,
                "end_line": 234,
                "signature": "com.fasterxml.jackson.databind.type.CollectionLikeType.isTrueCollectionType(): boolean"
            },
            {
                "start_line": 103,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/MapLikeType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public JavaType withContentType(JavaType contentType) {\n        if (_valueType == contentType) {\n            return this;\n        }\n        return new MapLikeType(_class, _bindings, _superClass,\n                _superInterfaces, _keyType, contentType, _valueHandler,\n                _typeHandler, _asStatic);\n    }",
                "distance": 3.75,
                "title": null,
                "name": "withContentType",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "contained in method",
                        "type": "RELATED",
                        "end_node": "MapLikeType"
                    },
                    {
                        "start_node": "MapLikeType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "withContentType"
                    }
                ],
                "similarity": 0.03262017450994313,
                "end_line": 110,
                "signature": "com.fasterxml.jackson.databind.type.MapLikeType.withContentType(JavaType contentType): JavaType"
            },
            {
                "start_line": 142,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/CollectionLikeType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public CollectionLikeType withStaticTyping() {\n        if (_asStatic) {\n            return this;\n        }\n        return new CollectionLikeType(_class, _bindings,\n                _superClass, _superInterfaces, _elementType.withStaticTyping(),\n                _valueHandler, _typeHandler, true);\n    }",
                "distance": 3.75,
                "title": null,
                "name": "withStaticTyping",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "CollectionLikeType"
                    },
                    {
                        "start_node": "CollectionLikeType",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "withStaticTyping"
                    }
                ],
                "similarity": 0.03249450103224375,
                "end_line": 149,
                "signature": "com.fasterxml.jackson.databind.type.CollectionLikeType.withStaticTyping(): CollectionLikeType"
            },
            {
                "start_line": 116,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/CollectionLikeType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public CollectionLikeType withValueHandler(Object h) {\n        return new CollectionLikeType(_class, _bindings,\n                _superClass, _superInterfaces, _elementType, h, _typeHandler, _asStatic);\n    }",
                "distance": 3.75,
                "title": null,
                "name": "withValueHandler",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "CollectionLikeType"
                    },
                    {
                        "start_node": "CollectionLikeType",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "withValueHandler"
                    }
                ],
                "similarity": 0.03223920185419984,
                "end_line": 119,
                "signature": "com.fasterxml.jackson.databind.type.CollectionLikeType.withValueHandler(Object h): CollectionLikeType"
            },
            {
                "start_line": 120,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/MapLikeType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public MapLikeType withContentTypeHandler(Object h) {\n        return new MapLikeType(_class, _bindings, _superClass,\n                _superInterfaces, _keyType, _valueType.withTypeHandler(h),\n                _valueHandler, _typeHandler, _asStatic);\n    }",
                "distance": 3.75,
                "title": null,
                "name": "withContentTypeHandler",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "contained in method",
                        "type": "RELATED",
                        "end_node": "MapLikeType"
                    },
                    {
                        "start_node": "MapLikeType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "withContentTypeHandler"
                    }
                ],
                "similarity": 0.03223781999928947,
                "end_line": 124,
                "signature": "com.fasterxml.jackson.databind.type.MapLikeType.withContentTypeHandler(Object h): MapLikeType"
            },
            {
                "start_line": 129,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/CollectionLikeType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public JavaType withHandlersFrom(JavaType src) {\n        JavaType type = super.withHandlersFrom(src);\n        JavaType srcCt = src.getContentType();\n        if (srcCt != null) {\n            JavaType ct = _elementType.withHandlersFrom(srcCt);\n            if (ct != _elementType) {\n                type = type.withContentType(ct);\n            }\n        }\n        return type;\n    }",
                "distance": 3.75,
                "title": null,
                "name": "withHandlersFrom",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "CollectionLikeType"
                    },
                    {
                        "start_node": "CollectionLikeType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "withHandlersFrom"
                    }
                ],
                "similarity": 0.03178324047087595,
                "end_line": 139,
                "signature": "com.fasterxml.jackson.databind.type.CollectionLikeType.withHandlersFrom(JavaType src): JavaType"
            },
            {
                "start_line": 128,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public final JavaType findSuperType(Class<?> rawTarget)",
                "distance": 2.75,
                "title": null,
                "name": "findSuperType",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    },
                    {
                        "start_node": "TypeBase",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "findSuperType"
                    }
                ],
                "similarity": 0.03158609942027284,
                "end_line": 128,
                "signature": "com.fasterxml.jackson.databind.type.TypeBase.findSuperType(Class rawTarget): JavaType"
            },
            {
                "start_line": 134,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/MapLikeType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public MapLikeType withContentValueHandler(Object h) {\n        return new MapLikeType(_class, _bindings, _superClass,\n                _superInterfaces, _keyType, _valueType.withValueHandler(h),\n                _valueHandler, _typeHandler, _asStatic);\n    }",
                "distance": 3.75,
                "title": null,
                "name": "withContentValueHandler",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "contained in method",
                        "type": "RELATED",
                        "end_node": "MapLikeType"
                    },
                    {
                        "start_node": "MapLikeType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "withContentValueHandler"
                    }
                ],
                "similarity": 0.03140808600999628,
                "end_line": 138,
                "signature": "com.fasterxml.jackson.databind.type.MapLikeType.withContentValueHandler(Object h): MapLikeType"
            },
            {
                "start_line": 88,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public TypeBindings getBindings() {\n        return _bindings;\n    }",
                "distance": 2.75,
                "title": null,
                "name": "getBindings",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    },
                    {
                        "start_node": "TypeBase",
                        "description": "contains method",
                        "type": "RELATED",
                        "end_node": "getBindings"
                    }
                ],
                "similarity": 0.03112192753621981,
                "end_line": 90,
                "signature": "com.fasterxml.jackson.databind.type.TypeBase.getBindings(): TypeBindings"
            },
            {
                "start_line": 104,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public String containedTypeName(int index) {\n        return _bindings.getBoundName(index);\n    }",
                "distance": 2.75,
                "title": null,
                "name": "containedTypeName",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    },
                    {
                        "start_node": "TypeBase",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "containedTypeName"
                    }
                ],
                "similarity": 0.031078936873264972,
                "end_line": 106,
                "signature": "com.fasterxml.jackson.databind.type.TypeBase.containedTypeName(int index): String"
            },
            {
                "start_line": 141,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/MapLikeType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public JavaType withHandlersFrom(JavaType src) {\n        JavaType type = super.withHandlersFrom(src);\n        JavaType srcKeyType = src.getKeyType();\n        // \"withKeyType()\" not part of JavaType, hence must verify:\n        if (type instanceof MapLikeType) {\n            if (srcKeyType != null) {\n                JavaType ct = _keyType.withHandlersFrom(srcKeyType);\n                if (ct != _keyType) {\n                    type = ((MapLikeType) type).withKeyType(ct);\n                }\n            }\n        }\n        JavaType srcCt = src.getContentType();\n        if (srcCt != null) {\n            JavaType ct = _valueType.withHandlersFrom(srcCt);\n            if (ct != _valueType) {\n                type = type.withContentType(ct);\n            }\n        }\n        return type;\n    }",
                "distance": 3.75,
                "title": null,
                "name": "withHandlersFrom",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "contained in method",
                        "type": "RELATED",
                        "end_node": "MapLikeType"
                    },
                    {
                        "start_node": "MapLikeType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "withHandlersFrom"
                    }
                ],
                "similarity": 0.030851791803007372,
                "end_line": 161,
                "signature": "com.fasterxml.jackson.databind.type.MapLikeType.withHandlersFrom(JavaType src): JavaType"
            },
            {
                "start_line": 153,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public JavaType[] findTypeParameters(Class<?> expType)",
                "distance": 2.75,
                "title": null,
                "name": "findTypeParameters",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    },
                    {
                        "start_node": "TypeBase",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "findTypeParameters"
                    }
                ],
                "similarity": 0.03082637125215664,
                "end_line": 153,
                "signature": "com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(Class expType): JavaType[]"
            },
            {
                "start_line": 93,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/MapLikeType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public MapLikeType withKeyType(JavaType keyType) {\n        if (keyType == _keyType) {\n            return this;\n        }\n        return new MapLikeType(_class, _bindings, _superClass,\n                _superInterfaces, keyType, _valueType, _valueHandler,\n                _typeHandler, _asStatic);\n    }",
                "distance": 3.75,
                "title": null,
                "name": "withKeyType",
                "documentation": "/**\n     * @since 2.7\n     */",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "contained in method",
                        "type": "RELATED",
                        "end_node": "MapLikeType"
                    },
                    {
                        "start_node": "MapLikeType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "withKeyType"
                    }
                ],
                "similarity": 0.030711616903963002,
                "end_line": 100,
                "signature": "com.fasterxml.jackson.databind.type.MapLikeType.withKeyType(JavaType keyType): MapLikeType"
            },
            {
                "start_line": 113,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/MapLikeType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public MapLikeType withTypeHandler(Object h) {\n        return new MapLikeType(_class, _bindings, _superClass,\n                _superInterfaces, _keyType, _valueType, _valueHandler, h,\n                _asStatic);\n    }",
                "distance": 3.75,
                "title": null,
                "name": "withTypeHandler",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "contained in method",
                        "type": "RELATED",
                        "end_node": "MapLikeType"
                    },
                    {
                        "start_node": "MapLikeType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "withTypeHandler"
                    }
                ],
                "similarity": 0.03042522560780946,
                "end_line": 117,
                "signature": "com.fasterxml.jackson.databind.type.MapLikeType.withTypeHandler(Object h): MapLikeType"
            },
            {
                "start_line": 296,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/MapLikeType.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public boolean equals(Object o) {\n        if (o == this) return true;\n        if (o == null) return false;\n        if (o.getClass() != getClass()) return false;\n\n        MapLikeType other = (MapLikeType) o;\n        return (_class == other._class) && _keyType.equals(other._keyType)\n                && _valueType.equals(other._valueType);\n    }",
                "distance": 3.75,
                "title": null,
                "name": "equals",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "called by method",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "contained in method",
                        "type": "RELATED",
                        "end_node": "MapLikeType"
                    },
                    {
                        "start_node": "MapLikeType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "equals"
                    }
                ],
                "similarity": 0.030405397525838825,
                "end_line": 304,
                "signature": "com.fasterxml.jackson.databind.type.MapLikeType.equals(Object o): boolean"
            },
            {
                "start_line": 82,
                "file_path": "playground/fasterxml__jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBase.java",
                "issue_id": null,
                "type": "method",
                "content": null,
                "source_code": "    public abstract StringBuilder getGenericSignature(StringBuilder sb);",
                "distance": 2.75,
                "title": null,
                "name": "getGenericSignature",
                "documentation": "",
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "IterationType"
                    },
                    {
                        "start_node": "IterationType",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "buildCanonicalName"
                    },
                    {
                        "start_node": "buildCanonicalName",
                        "description": "calls method",
                        "type": "RELATED",
                        "end_node": "_hasNTypeParameters"
                    },
                    {
                        "start_node": "_hasNTypeParameters",
                        "description": "contained in class",
                        "type": "RELATED",
                        "end_node": "TypeBase"
                    },
                    {
                        "start_node": "TypeBase",
                        "description": "contains class",
                        "type": "RELATED",
                        "end_node": "getGenericSignature"
                    }
                ],
                "similarity": 0.030351897542424906,
                "end_line": 82,
                "signature": "com.fasterxml.jackson.databind.type.TypeBase.getGenericSignature(StringBuilder sb): StringBuilder"
            }
        ],
        "classes": [],
        "issues": [
            {
                "content": "### Describe your Issue\n\nSince #3950 added new `IterationType` (in Jackson 2.16), 2 types are recognized:\r\n\r\n```\r\n       if (rawType == Iterator.class || rawType == Stream.class) {\r\n```\r\n\r\nBut as per:\r\n\r\nhttps://github.com/FasterXML/jackson-dataformat-xml/issues/646\r\n\r\nit would seem `Iterable` should also be recognized similarly. If so, this could be changed in 2.18.\r\n\r\n\n",
                "distance": 0,
                "title": "(reverted) Add `Iterable<T>` as recognized `IterationType` instance (along with `Iterable`, `Stream`)",
                "name": "root",
                "path": [],
                "issue_id": "root",
                "similarity": 2.0,
                "type": "issue"
            },
            {
                "start_line": null,
                "file_path": null,
                "issue_id": "3950",
                "type": "issue",
                "content": "(note: possible replacement/impl of #3926)\r\n\r\nThere are benefits in recognizing types like:\r\n\r\n* `Iterator`\r\n* `Stream`\r\n* `DoubleStream` / `IntStream` / `LongStream`\r\n\r\nas first-class `JavaType` variants (see https://github.com/FasterXML/jackson-dataformat-xml/pull/597 f.ex).\r\nIt should be based on `SimpleType`, similar to `ReferenceType`.\r\n\r\nIf and when implemented we could consider whether to extend `Deserializers`, `Serializers` and other extension points.\r\nAlso: would need to add support by Scala module, possibly Kotlin (and maybe Guava?).\r\n\n\n\nComment by cowtowncoder:\n@pjfanning Now implemented for core JDK types as per description. Might make sense to add support by Scala module too?\r\n\r\n@JooHyukKim Should be possibly to use the new `JavaType.isIterationType()` method from XML module to simplify checking (plus support Scala iterators too if and when support added).\r\n\n\nComment by JooHyukKim:\n@cowtowncoder Great \ud83d\udc4d\ud83c\udffb\ud83d\udd25  I will try to apply the changes accordingly.",
                "source_code": null,
                "distance": 0.25,
                "title": "Create new `JavaType` subtype `IterationType` (extending `SimpleType`)",
                "name": "issue#3950",
                "documentation": null,
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "issue#3950"
                    }
                ],
                "similarity": 0.5876294139282816,
                "end_line": null,
                "signature": null
            },
            {
                "start_line": null,
                "file_path": null,
                "issue_id": "4443",
                "type": "issue",
                "content": "### Describe your Issue\n\nSince #3950 added new `IterationType` (in Jackson 2.16), 2 types are recognized:\r\n\r\n```\r\n       if (rawType == Iterator.class || rawType == Stream.class) {\r\n```\r\n\r\nBut as per:\r\n\r\nhttps://github.com/FasterXML/jackson-dataformat-xml/issues/646\r\n\r\nit would seem `Iterable` should also be recognized similarly. If so, this could be changed in 2.18.\r\n\r\n\n\n",
                "source_code": null,
                "distance": 0.75,
                "title": "(reverted) Add `Iterable<T>` as recognized `IterationType` instance (along with `Iterable`, `Stream`)",
                "name": "issue#4443",
                "documentation": null,
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "issue#3950"
                    },
                    {
                        "start_node": "issue#3950",
                        "description": "referenced by issue",
                        "type": "RELATED",
                        "end_node": "issue#4443"
                    }
                ],
                "similarity": 0.560689008238399,
                "end_line": null,
                "signature": null
            },
            {
                "start_line": null,
                "file_path": null,
                "issue_id": "3926",
                "type": "issue",
                "content": "Could we consider fixing the issue described in https://github.com/FasterXML/jackson-databind/blob/50b74b44ec7b2398fa2bb0bf777282c2c10cd357/src/main/java/tools/jackson/databind/type/TypeFactory.java#L1423-L1426 about not treating some collection types as collection types in TypeFactory.\r\n\r\n* Stream\r\n* Iterator\r\n* Map.Entry\n\n\nComment by JooHyukKim:\n~~+1. Would help in cases like this PR in https://github.com/FasterXML/jackson-dataformat-xml/pull/597~~\r\n\r\nOnly crossing out because this issue is against Jackson 3 not affecting the linked PR. But still +1 \ud83d\udc4d\ud83c\udffb \ud83d\ude04\n\nComment by pjfanning:\n> +1. Would help in cases like this PR in [FasterXML/jackson-dataformat-xml#597](https://github.com/FasterXML/jackson-dataformat-xml/pull/597)\r\n\r\nI meant to say Jackson 3 in the issue title. I don't think there will be an appetite to change this in Jackson 2.\n\nComment by cowtowncoder:\nBefore considering those possibilities (note: they cannot be `CollectionType`s as types do not implement `Collection`), it'd be good to know what the intended benefit is -- is it just for more convenient detection of type parameters or something else? Not against improvements, just want to know the goal.\n\nComment by yihtserns:\n>...they cannot be `CollectionTypes` as types do not implement `Collection`... \r\n\r\nLooking at the quoted code, I think he meant to say \"collection-**like** types\" not \"collection types\". \n\nComment by cowtowncoder:\n@yihtserns Right, that makes sense. But I think I'd prefer new \"IteratorType\" (or \"IterableType\"), since these are not (depending on one's POV, one can disagree) Collection-like -- difference between value and sort of pointer to value.\r\nPart of the challenge is that I think there's a chance (maybe small) that some existing code might otherwise assume properties for newly discovered types that are not true.\r\n\n\nComment by cowtowncoder:\nOne quick note on `Map.Entry`: that sort of qualifies as `MapLikeType`. But here I am particularly worried about compatibility: registering Serializers/Deserializers via `Serializers` / `Deserializers` has separate callback methods -- so changing `JavaType` for `Map.Entry` would likely break some registrations.\r\n\r\nSame is actually true for possible new \"IterationType\" (or whatever name we'd use).\r\nFor 2.x we'd need to consider whether to change `Serializers`/`Deserializers` by adding new method, or not.\r\n\n\nComment by cowtowncoder:\nName suggestion: `IterationType`.\r\n\n\nComment by cowtowncoder:\n... and now that I finally read my own code comment, I realized that Old Me pointed out relevant challenge wrt add-on/tag types. So there may be reasons why there may be challenges in detecting various iterator types. But maybe it's worth trying things out and see what happens.\n\nComment by cowtowncoder:\nOk: realized another quick thing:\r\n\r\n1. Separate type makes sense for actual iterators (`Iterator`, `Stream`) but\r\n2. Does NOT make sense for `Iterable` -- that's not iterator, it's something that can produce iterator. And as such is almost certainly Collection- or Map-Like type\r\n\r\nWith that, I think progress can be made.\r\n\r\nThis still leaves the question of `Map.Entry` -- I think it could be upgraded into `MapLikeType`, but maybe as separate PR/issue\r\n\r\n\n\nComment by cowtowncoder:\nSo, support for `IterationType` (which initially covers `Iterator`, `Stream`, `DoubleStream`/`IntStream`/`LongStream`) has been added for 2.16. This may perhaps be closed.\r\n\r\nNot sure about `Map.Entry`, could consider making it `MapLikeType`; if so, should file separate issue.\r\n",
                "source_code": null,
                "distance": 0.5,
                "title": "Jackson 3 TypeFactory CollectionTypes",
                "name": "issue#3926",
                "documentation": null,
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "issue#3950"
                    },
                    {
                        "start_node": "issue#3950",
                        "description": "referenced by issue",
                        "type": "RELATED",
                        "end_node": "issue#3926"
                    }
                ],
                "similarity": 0.4789835001461406,
                "end_line": null,
                "signature": null
            },
            {
                "start_line": null,
                "file_path": null,
                "issue_id": "3954",
                "type": "issue",
                "content": "(see #3950 for background)\r\n\r\nWith 2.16 there's new `IterationType` which applies to types like `Iterator` and `Stream`. Callback interfaces `Deserializers` and `Serializers` should probably be extended to have separate callback methods, with default implementation that simply delegates to:\r\n\r\n* `Deserializers.findBeanDeserializer()`\r\n* `Serializers.findSerializer()`\r\n\n\n\nComment by pjfanning:\nMy specific problem is here - https://github.com/FasterXML/jackson-module-scala/blob/b70b62eb1b04b345f6080391fbd3947652dd1fbe/src/main/scala/com/fasterxml/jackson/module/scala/ser/IteratorSerializerModule.scala#L67-L92\r\n\r\nWith `findCollectionLikeSerializer`, I am provided with `elementTypeSerializer` and `elementSerializer`. With `findSerializer`, I do not have these. The code seems to work with jackson-module-scala's basic Iterator tests but I'm concerned that I might not have enough coverage - that more complicated wrapped types (ie the type that the Iterator wraps - the `T` in `Iterator<T>`) will break because I don't the serializers for that type. Is there a way, I can find the serializers myself?\n\nComment by cowtowncoder:\n@pjfanning Good point, it'd be much more convenient to get (de)serializer passed in.\r\n\r\nYes, it is definitely possible to fetch (de)serializer(s) with given `JavaType`: bit easier for deserializers (since there is no runtime type), and bit more complex for serializers (since you may or may not have type when asked to construct serializer).\r\n\r\nA good example of how to do this might be `StreamSerializer`:\r\n\r\nhttps://github.com/FasterXML/jackson-modules-java8/blob/2.16/datatypes/src/main/java/com/fasterxml/jackson/datatype/jdk8/StreamSerializer.java\r\n\r\nand `Serializers` impl that constructs it:\r\n\r\nhttps://github.com/FasterXML/jackson-modules-java8/blob/2.16/datatypes/src/main/java/com/fasterxml/jackson/datatype/jdk8/Jdk8Serializers.java\r\n\r\nalthough alternatively methods from `BasicSerializerFactory` or `BeanSerializerFactory` which call callbacks in `Serializers` could also work.\r\n",
                "source_code": null,
                "distance": 0.75,
                "title": "Add new methods in `Deserializers`, `Serializers` for new `IterationType`?",
                "name": "issue#3954",
                "documentation": null,
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "issue#3950"
                    },
                    {
                        "start_node": "issue#3950",
                        "description": "referenced by issue",
                        "type": "RELATED",
                        "end_node": "issue#3954"
                    }
                ],
                "similarity": 0.41779293885475877,
                "end_line": null,
                "signature": null
            },
            {
                "start_line": null,
                "file_path": null,
                "issue_id": "4485",
                "type": "issue",
                "content": "The test below fails, serialization of the class produces `{\"isValue\":true,\"value\":true}` despite being fully annotated with `JsonProperty`. I'd like it to produce `{\"isValue\":true}`.\r\n\r\nIf I rename the `isValue` getter method to `value` it works. \r\n\r\nA workaround is to annotate the getter with `@JsonIgnore`. \r\n\r\nIs this expected behaviour? I couldn't see a `SerializationFeature` to turn this behaviour off.\r\n\r\n```java\r\n    @Test\r\n    public void testSerializationWhenIsGetterPresent() throws JsonProcessingException {\r\n        WithIs a = new WithIs(true);\r\n        String json = new ObjectMapper().writeValueAsString(a);\r\n        System.out.println(json);\r\n        assertEquals(\"{\\\"isValue\\\":true}\", json);\r\n    }\r\n    \r\n    public static class WithIs {\r\n\r\n        @JsonProperty(\"isValue\")\r\n        private boolean isValue;\r\n\r\n        @JsonCreator\r\n        public WithIs(\r\n                @JsonProperty(\"isValue\") boolean isValue) {\r\n            this.isValue = isValue;\r\n        }\r\n\r\n        public boolean isValue() {\r\n            return isValue;\r\n        }\r\n    }\r\n```\r\n\r\n### Version Information\r\n\r\n2.17.0\r\n\n\n\nComment by cowtowncoder:\nYes, behavior is as expected because inferred (\"implicit\") property name from:\r\n\r\n```\r\npublic boolean isValue() {\r\n```\r\n\r\nis `value`, not `isValue`. \"is\" is considered equivalent to \"get\" prefix, for case of `boolean`/`Boolean` valued properties. Fields and constructor parameters on the other hand use name as-is without considering prefixes. So that's why Bean introspection logic infers 2 separate properties here.\r\n\r\nThis is along with my understanding of Bean naming convention; I know some other usage (like, say, Kotlin naming convention) differs.\r\n\r\nSo unfortunately annotation is needed on `isValue()` method (but not on field -- and on constructor parameter only if `ParameterNamesModule` not used).\r\n",
                "source_code": null,
                "distance": 0.25,
                "title": "Serialization of a class that is fully annotated with JsonProperty is tricked by getter name",
                "name": "issue#4485",
                "documentation": null,
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "issue#4485"
                    }
                ],
                "similarity": 0.2553003359987962,
                "end_line": null,
                "signature": null
            },
            {
                "start_line": null,
                "file_path": null,
                "issue_id": "598",
                "type": "issue",
                "content": "fix the #597 issue (a test has been created to be able to reproduce the issue)\n\n\n\nComment by cowtowncoder:\nPerfect, thank you for the patch.\n\nOne practicality we need before merging in the first contribution is to get a filled Contributor License Agreement (CLA). It can be found here:\n\nhttps://github.com/FasterXML/jackson/blob/master/contributor-agreement.pdf\n\nand we just need a filled copy (most devs print, fill+sign, scan and email to `info` at fasterxml.com).\nOnce this is done, any number of contributions can be accepted.\nWould it be possible for you to do this? I will merge the patch as soon as we get the CLA.\n\n\nComment by herau:\n@cowtowncoder done :-) \nLe 4 nov. 2014 06:33, \"Tatu Saloranta\" notifications@github.com a \u00e9crit :\n\n> Perfect, thank you for the patch.\n> \n> One practicality we need before merging in the first contribution is to\n> get a filled Contributor License Agreement (CLA). It can be found here:\n> \n> https://github.com/FasterXML/jackson/blob/master/contributor-agreement.pdf\n> \n> and we just need a filled copy (most devs print, fill+sign, scan and email\n> to info at fasterxml.com).\n> Once this is done, any number of contributions can be accepted.\n> Would it be possible for you to do this? I will merge the patch as soon as\n> we get the CLA.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/FasterXML/jackson-databind/pull/598#issuecomment-61595672\n> .\n\n\nComment by cowtowncoder:\nThanks!\n",
                "source_code": null,
                "distance": 1.0,
                "title": "fix NPE #597",
                "name": "pr#598",
                "documentation": null,
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "issue#3950"
                    },
                    {
                        "start_node": "issue#3950",
                        "description": "referenced by issue",
                        "type": "RELATED",
                        "end_node": "issue#3954"
                    },
                    {
                        "start_node": "issue#3954",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "pr#598"
                    }
                ],
                "similarity": 0.24583070601944354,
                "end_line": null,
                "signature": null
            },
            {
                "start_line": null,
                "file_path": null,
                "issue_id": "640",
                "type": "issue",
                "content": "Hi,\nWe use Json-RPC as means of communication between servers and sometimes need to pass exceptions (ours and of the JDK) between them.\nIn order for the exception to retain its type in the receiving end we mixin @JsonTypeInfo to Throwable.\nI want to suggest adding this as an out of the box deserialization feature.\nWDYT?\n\n\n\nComment by cowtowncoder:\nOk, I'll have to think about this. One concern is that quite often exceptions are only serialized for diagnostics purposes, and type inclusion may not be desired.\n\nOne possibility would be to add a new `MapperFeature` for automatic enabling of polymorphic handling, probably with default settings (include as property, using class name, type property name of `@class` I guess). But not sure how it'd be passed to `AnnotationIntrospector` (or maybe it should by-pass it).\n\nBut I think that suggestion of allowing easier enabling of polymorphic handling of `Throwable`s does make sense.\n",
                "source_code": null,
                "distance": 1.0,
                "title": "Support out of the box polymorphic throwable deserialization",
                "name": "issue#640",
                "documentation": null,
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "issue#3950"
                    },
                    {
                        "start_node": "issue#3950",
                        "description": "referenced by issue",
                        "type": "RELATED",
                        "end_node": "issue#3954"
                    },
                    {
                        "start_node": "issue#3954",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "issue#640"
                    }
                ],
                "similarity": 0.24184015280347826,
                "end_line": null,
                "signature": null
            },
            {
                "start_line": null,
                "file_path": null,
                "issue_id": "599",
                "type": "issue",
                "content": "With multiple mechanisms to register modules (including auto-discovery and explicit calls), it is possible to register a single module multiple times. And although it typically should not cause correctness problems, it may cause unnecessary overhead when various handlers (annotation introspector, custom serializers/deserializers etc) are registered multiple times, and called once per each copy.\n\nIt should be easy to add a simple mechanism in `ObjectMapper` for keeping track of ids of modules (not modules: important, so as not to retain refs to module classes).\nDefault implementation could just use class name for standard modules; except for `SimpleModule` which should just use a per-instance unique id (since these are likely to be throw-off ones, and there may be multiple instances of same class).\n\n\n\nComment by cowtowncoder:\nImplemented by adding:\n-  `MapperFeature.IGNORE_DUPLICATE_MODULE_REGISTRATIONS` (enabled by default)\n- `Module.getTypeId()` which determines type used for determining which instances are considered \"same\" (for purposes of preventing multiple registration)\n\nand bit of state-keeping in `ObjectMapper` itself.\n\n\nComment by cowtowncoder:\nOne last note: useful in cases where automatic discovery/registration is used; frameworks may accidentally call that multiple times, and although avoidance will not remove performance overhead of discovery, it should at least remove runtime overhead that may result from longer lists of handlers from duplicate registrations.\n",
                "source_code": null,
                "distance": 1.0,
                "title": "Add a simple mechanism for avoiding multiple registrations of the same module",
                "name": "issue#599",
                "documentation": null,
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "issue#3950"
                    },
                    {
                        "start_node": "issue#3950",
                        "description": "referenced by issue",
                        "type": "RELATED",
                        "end_node": "issue#3954"
                    },
                    {
                        "start_node": "issue#3954",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "issue#599"
                    }
                ],
                "similarity": 0.19007988687385288,
                "end_line": null,
                "signature": null
            },
            {
                "start_line": null,
                "file_path": null,
                "issue_id": "597",
                "type": "issue",
                "content": "Using jackson-databind-2.3.3...\n\nCreated a Jackson annotated POJO that uses a JsonCreator to deserialize from JSON to the Java object.\n\n```\nprivate class JsonEntity {\n  private final String type;\n  private final UUID id;\n\n  private JsonEntity(String type, UUID id) {\n    this.type = type;\n    this.id = id;\n  }\n\n  @JsonCreator\n  public static JsonEntity create(@JsonProperty(\"type\") String type, @JsonProperty(\"id\") UUID id) {\n    if (StringUtils.isNotBlank(type) && (id != null)) {\n      return new JsonEntity(type, id);\n    }\n\n    return null;\n  }\n}\n```\n\nNext, I attempted to deserialize a JSON string using the creator above.\n\n```\nObjectMapper objectMapper = new ObjectMapper();\nString json = \"{ \\\"type\\\" : \\\"     \\\", \\\"id\\\" : \\\"000c0ffb-a0d6-4d2e-a379-4aeaaf283599\\\" }\";\nobjectMapper.readValue(json, JsonEntity.class);\n```\n\nA NullPointerException occurs because the JsonCreator is returning null.  This should be handled more gracefully by throwing a Jackson-specific exception that details the deserialized bean is being returned as null.\n\n```\njava.lang.NullPointerException\n  at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:342)\nat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1071)\nat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:268)\nat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:124)\nat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:2993)\nat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2098)\nat com.test.JsonTest.testJsonEntityWithBlankType(JsonTest.java:19)\n```\n\n\n\nComment by cowtowncoder:\nSounds reasonable, yes.\n",
                "source_code": null,
                "distance": 0.75,
                "title": "Deserializing using JsonCreator that returns null causes NullPointerException",
                "name": "issue#597",
                "documentation": null,
                "path": [
                    {
                        "start_node": "root",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "issue#3950"
                    },
                    {
                        "start_node": "issue#3950",
                        "description": "referenced by issue",
                        "type": "RELATED",
                        "end_node": "issue#3926"
                    },
                    {
                        "start_node": "issue#3926",
                        "description": "points to issue",
                        "type": "RELATED",
                        "end_node": "issue#597"
                    }
                ],
                "similarity": 0.18401744172599735,
                "end_line": null,
                "signature": null
            }
        ]
    },
    "artifact_stats": {
        "skipped_due_to_time": 4,
        "valid_related_items": 58
    }
}